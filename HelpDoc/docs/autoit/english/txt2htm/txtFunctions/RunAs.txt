###Function###
RunAs

###Description###
Runs an external program under the context of a different user.

###Syntax###
RunAs ( "username", "domain", "password", logon_flag, "program" [, "workingdir" [, show_flag [, opt_flag]]] )


###Parameters###
@@ParamTable@@
username
	The username to log on with.
domain
	The domain to authenticate against.
password
	The password for the user.
logon_flag
	0 - Interactive logon with no profile.
	1 - Interactive logon with profile.
	2 - Network credentials only.
	4 - Inherit the calling process's environment instead of the user's environment.
program
	The full path of the program (EXE, BAT, COM, or PIF) to run (see remarks).
workingdir
	[optional] The working directory.  If not specified, then the value of @SystemDir will be used.  This is not the path to the program.
show_flag
	[optional] The "show" flag of the executed program:
		@SW_HIDE = Hidden window (or Default keyword)
		@SW_MINIMIZE = Minimized window
		@SW_MAXIMIZE = Maximized window
opt_flag
	[optional] Controls various options related to how the parent and child process interact.
		0x1 ($STDIN_CHILD)  = Provide a handle to the child's STDIN stream
		0x2 ($STDOUT_CHILD) = Provide a handle to the child's STDOUT stream
		0x4 ($STDERR_CHILD) = Provide a handle to the child's STDERR stream
		0x8 ($STDERR_MERGED) = Provides the same handle for STDOUT and STDERR.  Implies both $STDOUT_CHILD and $STDERR_CHILD.
		0x10 ($STDIO_INHERIT_PARENT) = Provide the child with the parent's STDIO streams.  This flag can not be combined with any other STDIO flag.  This flag is only useful when the parent is compiled as a Console application.
		0x10000 ($RUN_CREATE_NEW_CONSOLE) = The child console process should be created with it's own window instead of using the parent's window.  This flag is only useful when the parent is compiled as a Console application.
@@End@@

###ReturnValue###
@@ReturnTable@@
Success:	the PID of the process that was launched.
Failure:	0 and sets the @error flag to non-zero.
@@End@@


###Remarks###
Paths with spaces need to be enclosed in quotation marks.

It is important to specify a working directory the user you are running as has access to, otherwise the function will fail.

It is recommended that you only load the user's profile is you are sure you need it.  There is a small chance a profile can be stuck in memory under the right conditions.  If a script using <a href="RunAs.htm">RunAs()</a> happens to be running as the SYSTEM account (for example, if the script is running as a service) and the user's profile is loaded, then you must take care that the script remains running until the child process closes.

When running as an administrator, the Secondary Logon (<a href="RunAs.htm">RunAs()</a>) service must be enabled or this function will fail.  This does not apply when running as the SYSTEM account.

After running the requested program the script continues.  To pause execution of the script until the spawned program has finished use the <a href="RunAsWait.htm">RunAsWait()</a> function instead.

Providing the Standard I/O parameter with the proper values permits interaction with the child process through the <a href="StderrRead.htm">StderrRead()</a>, <a href="StdinWrite.htm">StdinWrite()</a> and <a href="StdoutRead.htm">StdoutRead()</a> functions. Combine the flag values (or use $STDERR_CHILD, $STDIN_CHILD & $STDOUT_CHILD, defined in Constants.au3) to manage more than one stream.

In order for the streams to close, the following conditions must be met: 1) The child process has closed its end of the stream (this happens when the child closes).  2) AutoIt must read any captured streams until there is no more data.  3) If STDIN is provided for the child, <a href="StdinWrite.htm">StdinWrite()</a> must be called to close the stream.  Once all streams are detected as no longer needed, all internal resources will automatically be freed.
<a href="StdioClose.htm">StdioClose()</a> can be used to force the STDIO streams closed.

The "load profile" and "network credentials only" options are incompatible.  Using both will produce undefined results.

There is an issue in the Windows XP generation of Windows which prevents STDIO redirection and the show flag from working.  See Microsoft Knowledge Base article KB818858 for more information about which versions are affected as well as a hotfix for the issue.  Users running Windows XP SP2 or later, or Windows Vista or later are not affected.


###Related###
Run, RunWait, RunAsWait, ShellExecute, ShellExecuteWait, StderrRead, StdinWrite, StdoutRead, StdioClose, ProcessClose


###Example###
@@IncludeExample@@

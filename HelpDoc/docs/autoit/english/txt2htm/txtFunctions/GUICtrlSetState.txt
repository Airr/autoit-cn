###Function###
GUICtrlSetState

###Description###
Changes the state of a control.

###Syntax###
GUICtrlSetState ( controlID, state )


###Parameters###
@@ParamTable@@
controlID
	The control identifier (controlID) as returned by a <a href="GUICtrlCreate Management.htm">GUICtrlCreate...()</a> function, or -1 for the last created control.
state
	See the <a href="#StateTable">State table</a> below.
@@End@@

###ReturnValue###
@@ReturnTable@@
Success:	1.
Failure:	0.
@@End@@


###Remarks###
	<a id="StateTable"></a><strong>State table</strong>

@@StandardTable1@@
<strong>State</strong>	<strong>Comments</strong>
No Change (0)
$GUI_CHECKED (1)	Radio, Checkbox or ListViewItem will be checked.
$GUI_INDETERMINATE (2)	Checkbox having the tristate attribute will be greyed.
$GUI_UNCHECKED (4)	Radio, Checkbox or ListViewItem will be unchecked.
$GUI_DROPACCEPTED (8)	Control will accept drop action : from file or from a drag of another control. See remarks.
$GUI_SHOW (16)	Control will be visible. On Tabitem control will select the first tab to be displayed.
$GUI_HIDE (32)	Control will not be visible.
$GUI_ENABLE (64)	Control will be enabled.
$GUI_DISABLE (128)	Control will be greyed out.
$GUI_FOCUS (256)	Control will be given input/selected focus.
$GUI_DEFBUTTON (512)	Control will be set as the default button on the window. See remark about TreeviewItems.
$GUI_EXPAND (1024)	TreeViewItem will expand its child items.
$GUI_ONTOP (2048)	Control will be have the ontop attribute for the window (zOrdering).
$GUI_NODROPACCEPTED (4096)	Control will  not accept drop action.
$GUI_NOFOCUS (8192)	Listview control will loose focus.
$GUI_AVISTART (0)	Avi control will start playing.
$GUI_AVISTOP (1)	Avi control will stop playing.
$GUI_AVICLOSE (2)	Avi control will stop playing and release resource.
@@End@@

State values can be summed up as for example $GUI_DISABLE (128) + $GUI_HIDE (32) sets the control in an disabled and hidden state.

If an AVI control has to be hidden with $GUI_HIDE (32) it should be closed with $GUI_AVICLOSE (1).

State of a "contextmenu" control <strong>cannot be changed.</strong>
State of a "listviewitem" control can be changed if the associated "listview" control has been created with an extended style $LVS_EX_CHECKBOXES. $GUI_FOCUS (256) and $GUI_NOFOCUS (8192) can be used on specific listviewitem provided listview control style allows to display it : $LVS_SHOWSELALWAYS.
State of a "menu or a ""menuitem" control <strong>cannot be hidden.</strong>

! Important information for $GUI_EXPAND: this state is only used for TreeViewItems. If you want to use this 'action' then at least 1 Sub-TreeViewItem has to exist/created under this item !
If you want to select another item in a TreeView then you can use $GUI_FOCUS (256) - the parent TreeView gets the window focus and the specified item is marked as selected.
If you want to set a treeview item as a default item which means painting it bold you can use $GUI_DEFBUTTON (512) - to turn it off just use another value but $GUI_DEFBUTTON (512), for instance 0. This state will not be returned by <a href="GUICtrlGetState.htm">GUICtrlGetState()</a>.

If $GUI_DROPACCEPTED (8) is set to a visible control a drag & drop can be taken in account. The edit/input control will be set with the filename.
For other controls on reception of $GUI_EVENT_DROPPED, @GUI_DragId will return the controlID from where the drag start (-1 if from a file, @GUI_DragFile contain the filename being dropped) and @GUI_DropId returns the controlID of the dropped control.
Only dragging a ListviewItem will start the drag & drop process. The @GUI_DragId will be the ListView controlID.


###Related###
GUICtrlCreate..., GUICtrlGetState


###Example###
@@IncludeExample@@

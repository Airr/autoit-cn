###Function###
StringInStr

###Description###
Checks if a string contains a given substring.

###Syntax###
StringInStr ( "string", "substring" [, casesense = 0 [, occurrence = 1 [, start = 1 [, count]]]] )


###Parameters###
@@ParamTable@@
string
	The string to evaluate.
substring
	The substring to search for.
casesense
	[optional] Flag to indicate if the operations should be case sensitive.
		$STR_NOCASESENSE (0) = not case sensitive, using the user's locale (default)
		$STR_CASESENSE (1) = case sensitive
		$STR_NOCASESENSEBASIC (2) = not case sensitive, using a basic/faster comparison
	Constants are defined in StringConstants.au3
occurrence
	[optional] Which occurrence of the substring to find in the string.  Use a negative occurrence to search from the right side.  The default value is 1 (finds first occurrence).
start
	[optional] The starting position of the search.
count
	[optional] The number of characters to search.  This effectively limits the search to a portion of the full string.  See remarks.
@@End@@

###ReturnValue###
@@ReturnTable@@
Success:	the position of the substring.
Failure:	0 if substring not found.
@error:	1 = Invalid "start" or "occurrence" parameter given.
@@End@@


###Remarks###
The first character position is 1.

The count parameter must not be shorter than the substring being searched for. The count parameter (combined with the start parameter) effectively limits the search to a substring of the full string.  The following two statements are equivalent:
<a href="StringInStr.htm">StringInStr</a>("the string to search", "string", 0, 1, 1, 11)
<a href="StringInStr.htm">StringInStr</a>(<a href="StringMid.htm">StringMid</a>("the string to search", 1, 11), "string")


###Related###
StringCompare, StringLeft, StringLen, StringLower, StringMid, StringRegExp, StringRight, StringSplit, StringTrimLeft, StringTrimRight, StringUpper


###Example###
@@IncludeExample@@

        ),
    'SYMBOLS' => array(
		0 => array( '(',')','[',']',
			'+','-','*','/','&','^',':','?',
			'=', '==', '+=','-=','*=','/=','&=',
			'<','<=','>','>=',
			',','.'
			),
		1 => array('_' // Undersore for continuation of strings.
			),
		),
    'CASE_SENSITIVE' => array(
        GESHI_COMMENTS => false,
        1 => false,
        2 => false,
        3 => false,
        4 => false,
        5 => false,
        6 => false,
        7 => false
        ),
    'STYLES' => array(
        'KEYWORDS' => array(
            1 => 'color: #0000FF;', // Keywords
            2 => 'color: #808000;', // Macros
            3 => 'color: #000090;', // Native Functions
            4 => 'color: #0080FF;', // UDF Functions
            5 => 'color: #808000;', // Comments
            6 => 'color: #DC143C;', // Directives
            7 => 'color: #5A5A5A;', // Keylist
            8 => 'color: #808000;', // PreProcessor
            9 => 'color: #DC143C;', // Pragma
            10 => 'color: #DC143C;' // Au3Check
            ),
        'COMMENTS' => array(
			1 => 'color: #008000; font-style: italic;',
            2 => 'color: #008000; font-style: italic;',
            'MULTI' => 'color: #008000; font-style: italic;',
            0 => 'color: #008000; font-style: italic;',
            1 => 'color: #008000; font-style: italic;',
            'REGEXP' => 'color: #008000; font-style: italic;',
            0 => 'color: #FF0000; font-style: italic',
            ),
        'ESCAPE_CHAR' => array(
            0 => ''
            ),
        'BRACKETS' => array(
            0 => 'color: #FF8000;'
            ),
        'STRINGS' => array(
            0 => 'color: #FF0000;'
            ),
        'NUMBERS' => array(
            0 => 'color: #0000FF;'
            ),
        'METHODS' => array(
            1 => 'color: #FF0000;'
            ),
        'SYMBOLS' => array(
            0 => 'color: #FF8000;',
            1 => 'color: #000000;'
            ),
        'REGEXPS' => array(
            0 => 'color: #5A5A5A;', // Variables
            1 => 'color: #5A5A5A;' // Keylist
            ),
        'SCRIPT' => array(
            )
        ),
    'URLS' => array(
        1 => 'http://www.autoitscript.com/autoit3/docs/keywords.htm', // Keywords
        2 => 'http://www.autoitscript.com/autoit3/docs/macros.htm#{FNAME}', // Macros
        3 => 'http://www.autoitscript.com/autoit3/docs/functions/{FNAME}.htm', // Native Functions
        4 => 'http://www.autoitscript.com/autoit3/docs/libfunctions/_{FNAME}.htm', // UDF Functions
        5 => 'http://www.autoitscript.com/autoit3/docs/keywords/comments-start.htm', // Comments
        6 => 'http://www.autoitscript.com/autoit3/scite/docs/AutoIt3Wrapper.html', // Directives
        7 => 'http://www.autoitscript.com/autoit3/docs/appendix/SendKeys.htm#KeysList', // Keylist
        8 => 'http://www.autoitscript.com/autoit3/docs/keywords/{FNAME}.htm', // PreProcessor
        9 => 'http://www.autoitscript.com/autoit3/docs/keywords/{FNAME}.htm', // Pragma
        10 => 'http://www.autoitscript.com/autoit3/docs/intro/au3check.htm' // Au3Check
        ),
    'NUMBERS' =>
        GESHI_NUMBER_INT_BASIC | GESHI_NUMBER_INT_CSTYLE | GESHI_NUMBER_BIN_PREFIX_0B |
        GESHI_NUMBER_OCT_PREFIX | GESHI_NUMBER_HEX_PREFIX | GESHI_NUMBER_FLT_NONSCI |
        GESHI_NUMBER_FLT_NONSCI_F | GESHI_NUMBER_FLT_SCI_SHORT | GESHI_NUMBER_FLT_SCI_ZERO,
    'OOLANG' => true,
    'OBJECT_SPLITTERS' => array(
        1 => '.'
        ),
    'REGEXPS' => array(
        0 => '\$[a-zA-Z0-9_]*', // Variables
        1 => '\\{[a-zA-Z0-9_]+\\}' // Keylist
        ),
    'STRICT_MODE_APPLIES' => GESHI_MAYBE,
    'SCRIPT_DELIMITERS' => array(
        ),
    'HIGHLIGHT_STRICT_BLOCK' => array(
        0 => true,
        1 => true,
        2 => true,
        3 => true
        ),
    'PARSER_CONTROL' => array(
        'KEYWORDS' => array(
            4 => array(
                'DISALLOWED_BEFORE' => '(?<!\w)\_'
            ),
            5 => array(
                'DISALLOWED_BEFORE' => '(?<!\w)\#'
            ),
            6 => array(
                'DISALLOWED_BEFORE' => '(?<!\w)\#',
                'DISALLOWED_AFTER' => '(?<!=)[^\r\n]*'
            ),
            8 => array(
                'DISALLOWED_BEFORE' => '(?<!\w)\#',
                'DISALLOWED_AFTER' => '(?<!=)[^\r\n]*'
            ),
            9 => array(
                'DISALLOWED_BEFORE' => '(?<!\w)\#',
                'DISALLOWED_AFTER' => '(?<!=)[^\r\n]*'
            ),
            10 => array(
                'DISALLOWED_BEFORE' => '(?<!\w)\#',
                'DISALLOWED_AFTER' => '(?<!=)[^\r\n]*'
            )
        )
    )
);

?>

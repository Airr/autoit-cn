###User Defined Function###
_SQLite_GetTable2d

###Description###
Passes out a 2Dimensional array containing column names and data of executed query

###Syntax###
#include <SQLite.au3>
_SQLite_GetTable2d ( $hDB, $sSQL, ByRef $aResult, ByRef $iRows, ByRef $iColumns [, $iCharSize = -1 [, $fSwichDimensions = False]] )


###Parameters###
@@ParamTable@@
$hDB
	An Open Database, Use -1 To use Last Opened Database
$sSQL
	SQL Statement to be executed
$aResult
	Passes out the result
$iRows
	Passes out the amount of 'data' Rows
$iColumns
	Passes out the amount of columns
$iCharSize
	[optional] Specifies the maximal size of a data field
$fSwichDimensions
	[optional] Switches dimensions of $aResult
@@End@@

###ReturnValue###
@@ReturnTable@@
Success:	$SQLITE_OK.
Failure:	a value that can be compared against $SQLITE_* constants.
@error:	-1 - SQLite reported an error (Check Return value)
	1 - Error Calling <a href="_SQLite_Query.htm">_SQLite_Query()</a>
	2 - Error calling SQLite API 'sqlite3_free_table'
	3 - Call prevented by SafeMode
	4 - Abort, Interrupt or @error set by Callback (@extended set to SQLite error)
@@End@@


###Remarks###
The number of values inserted into $aResult will be (($iRows) + 1) * ($iColumns).
A NULL will be returned as Numeric 0.
This function uses more memory than <a href="_SQLite_Query.htm">_SQLite_Query()</a> / _SQLite_Fetch*()... but it's faster.
If you do not need a result (or if there will be none) consider using <a href="_SQLite_Exec.htm">SQLite_Exec()</a>.


###Related###
_SQLite_Display2DResult, _SQLite_Exec, _SQLite_GetTable, _SQLite_Query


###Example###
@@IncludeExample@@

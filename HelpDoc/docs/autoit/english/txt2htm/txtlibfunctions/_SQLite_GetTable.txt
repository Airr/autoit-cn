###User Defined Function###
_SQLite_GetTable

###Description###
Passes Out a 1Dimensional Array Containing Tablenames and Data of Executed Query

###Syntax###
#include <SQLite.au3>
_SQLite_GetTable ( $hDB, $sSQL, ByRef $aResult, ByRef $iRows, ByRef $iColumns [, $iCharSize = -1] )


###Parameters###
@@ParamTable@@
$hDB
	An open database, use -1 to use last opened database
$sSQL
	SQL Statement to be executed
$aResult
	Passes out the result
$iRows
	Passes out the amount of 'data' Rows
$iColumns
	Passes out the amount of columns
$iCharSize
	[optional] Specifies the maximal size of a data field
@@End@@

###ReturnValue###
@@ReturnTable@@
Success:	$SQLITE_OK.
Failure:	a value that can be compared against $SQLITE_* constants.
@error:	-1 - SQLite reported an error (Check Return value)
	1 - Call Prevented by SafeMode
	2 - Error returned by <a href="_SQLite_Query.htm">_SQLite_Query()</a> in @extended
	3 - Error returned by <a href="_SQLite_FetchNames.htm">_SQLite_FetchNames()</a> in @extended
	4 - Error returned by <a href="_SQLite_FetchData.htm">_SQLite_FetchData()</a> in @extended
@@End@@


###Remarks###
The number of values inserted into $aResult will be (($iRows) + 1) * ($iColumns) this number is inserted into $aResult[0].
A NULL will be returned as numeric 0.
If you do not need a result (or if there will be none) consider using <a href="_SQLite_Exec.htm">_SQLite_Exec()</a>.


###Related###
_SQLite_Exec, _SQLite_GetTable2d, _SQLite_Query


###Example###
@@IncludeExample@@

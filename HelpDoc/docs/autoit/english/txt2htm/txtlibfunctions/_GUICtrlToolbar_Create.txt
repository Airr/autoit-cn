###User Defined Function###
_GUICtrlToolbar_Create

###Description###
Create a Toolbar control

###Syntax###
#include <GuiToolbar.au3>
_GUICtrlToolbar_Create ( $hWnd [, $iStyle = 0x00000800 [, $iExStyle = 0x00000000]] )


###Parameters###
@@ParamTable@@
$hWnd
	Handle to parent or owner window
$iStyle
	[optional] Control styles:
		$TBSTYLE_ALTDRAG - Allows users to change a toolbar button's position by dragging it while holding down the ALT key.
			If this style is not specified, the user must hold down the SHIFT key while dragging a button.
			Note that the $CCS_ADJUSTABLE style must be specified to enable toolbar buttons to be dragged.
		$TBSTYLE_CUSTOMERASE - Generates $NM_CUSTOMDRAW messages when the toolbar processes $WM_ERASEBKGND messages
		$TBSTYLE_FLAT - Creates a flat toolbar
		$TBSTYLE_LIST - Creates a flat toolbar with button text to the right of the bitmap
		$TBSTYLE_REGISTERDROP - Generates $TBN_GETOBJECT notification messages to request drop target objects when the cursor passes over toolbar buttons.
		$TBSTYLE_TOOLTIPS - Creates a ToolTip control that an application can use to display descriptive text for the buttons in the toolbar.
		$TBSTYLE_TRANSPARENT - Creates a transparent toolbar. In a transparent toolbar, the toolbar is transparent but the buttons are not. 
			Button text appears under button bitmaps. To prevent repainting problems, this style should be set before the toolbar control becomes visible.
		$TBSTYLE_WRAPABLE - Creates a toolbar that can have multiple lines of buttons. 
			Toolbar buttons can "wrap" to the next line when the toolbar becomes too narrow to include all buttons on the same line. 
			When the toolbar is wrapped, the break will occur on either the rightmost separator or the rightmost button if there are no separators on the bar. 
			This style must be set to display a vertical toolbar control when the toolbar is part of a vertical rebar control.

	Default: $TBSTYLE_FLAT
	Forced: $WS_CHILD, $WS_CLIPSIBLINGS, $WS_VISIBLE
$iExStyle
	[optional] Control extended styles:
		$TBSTYLE_EX_DRAWDDARROWS - Allows buttons to have a separate dropdown arrow. Buttons that have the
		$BTNS_DROPDOWN style will be drawn with a drop down arrow in a separate section, to the right of the button.
			If the arrow is clicked, only the arrow portion of the button will depress, and the toolbar control will send
			a $TBN_DROPDOWN notification to prompt the application to display the dropdown menu.
			If the main part of the button is clicked, the toolbar control sends a $WM_COMMAND message with the button's ID.
		$TBSTYLE_EX_HIDECLIPPEDBUTTONS - Hides partially clipped buttons
		$TBSTYLE_EX_DOUBLEBUFFER - Requires the toolbar to be double buffered
		$TBSTYLE_EX_MIXEDBUTTONS - Allows you to set text for all buttons, but only display it for the buttons with the $BTNS_SHOWTEXT button style. 
			The $TBSTYLE_LIST style must also be set.
			Normally, when a button does not display text, you must handle $TBN_GETINFOTIP to display a ToolTip. 
			With the $TBSTYLE_EX_MIXEDBUTTONS extended style, text that is set but not displayed on a button will automatically be used as the button's ToolTip text. 
			You only need to handle $TBN_GETINFOTIP if it needs more flexibility in specifying the ToolTip text.
@@End@@

###ReturnValue###
@@ReturnTable@@
Success:	the handle to the Toolbar control.
Failure:	0.
@@End@@


###Remarks###
None.


###Related###
_GUICtrlToolbar_Destroy


###Example###
@@IncludeExample@@

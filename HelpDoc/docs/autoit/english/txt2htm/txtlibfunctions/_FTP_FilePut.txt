###User Defined Function###
_FTP_FilePut

###Description###
Puts an file on an FTP server.

###Syntax###
#include <FTPEx.au3>
_FTP_FilePut ( $hFTPSession, $sLocalFile, $sRemoteFile [, $iFlags = 0 [, $iContext = 0]] )


###Parameters###
@@ParamTable@@
$hFTPSession
	as returned by _FTP_Connect()
$sLocalFile
	The local file.
$sRemoteFile
	The remote Location for the file.
$iFlags
	[optional] Specify the conditions under which the transfers occur. The application should select one transfer type and any of the flags that indicate how the caching of the file will be controlled.

	The transfer type can be one of the following values:
	<b>$FTP_TRANSFER_TYPE_ASCII</b> - Transfers the file using FTP's ASCII (Type A) transfer method. Control and formatting information is converted to local equivalents.
	<b>$FTP_TRANSFER_TYPE_BINARY</b> - Transfers the file using FTP's Image (Type I) transfer method. The file is transferred exactly as it exists with no changes. This is the default transfer method.
	<b>$FTP_TRANSFER_TYPE_UNKNOWN</b> - Defaults to $FTP_TRANSFER_TYPE_BINARY.
	<b>$INTERNET_FLAG_TRANSFER_ASCII</b> - Transfers the file as ASCII.
	<b>$INTERNET_FLAG_TRANSFER_BINARY</b> - Transfers the file as binary.

	The following values are used to control the caching of the file. The application can use one or more of these values:
	<b>$INTERNET_FLAG_HYPERLINK</b> - Forces a reload if there was no Expires time and no LastModified time returned from the server when determining whether to reload the item from the network.
	<b>$INTERNET_FLAG_NEED_FILE</b> - Causes a temporary file to be created if the file cannot be cached.
	<b>$INTERNET_FLAG_RELOAD</b> - Forces a download of the requested file, object, or directory listing from the origin server, not from the cache.
	<b>$INTERNET_FLAG_RESYNCHRONIZE</b> - Reloads HTTP resources if the resource has been modified since the last time it was downloaded. All FTP and Gopher resources are reloaded.
$iContext
	[optional] A variable that contains the application-defined value that associates this search with any application data.
	This is only used if the application has already called _FTP_SetStatusCallback() to set up a status callback function.
@@End@@

###ReturnValue###
@@ReturnTable@@
Success:	1
Failure:	0  and sets @error
@@End@@


###Remarks###
Both $sLocalFile and $sRemoteFile may be partial or fully qualified names relative to the current directory.


###Related###
_FTP_Connect, _FTP_FileOpen, _FTP_SetStatusCallback


###See Also###
@@MsdnLink@@ FtpPutFile


###Example###

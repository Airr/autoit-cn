###User Defined Function###
_viSetTimeout

###Description###
Sets the VISA timeout in MILISECONDS

###Syntax###
#include <Visa.au3>
_viSetTimeout ( $h_session, $i_timeout_ms )


###Parameters###
@@ParamTable@@
$h_session
	A VISA descriptor (STRING) OR a VISA session handle (INTEGER).
	See the Remarks of the _viExecCommand for more info.
$i_timeout_ms
	The timeout IN MILISECONDS for VISA operations (mainly for GPIB queries)
	If you set it to 0 the tiemouts are DISABLED.
	If you set it to "INF" the VISA operations will NEVER timeout.
	Be careful with this as it could easly hung your program ifv  your instrument does not respond to one of your queries.
	Depending on the bus type (GPIB, TCP, etc) the timeout might not be set to the exact value that you request. Instead the closest valid timeout bigger than the one that you requested will be used.
@@End@@

###ReturnValue###
@@ReturnTable@@
Success:	Returns 0
Failure:	Returns -1 and sets @error to 1 if the VISA DLL could not be open or a NON ZERO value representing the VISA error code (see the VISA programmer's guide).
@@End@@


###Remarks###
Most of the time it is not necessary to call this function, as _viExecCommand() has a third OPTIONAL parameter $i_timeout_ms which can also be used to set the VISA timeout.

As for all the VISA functions the VISA libraries must be installed (you can check whether visa32.dll is in {WINDOWS}\system32) and a GPIB card (such as a National Instruments NI PCI-GPIB card or an Agilent 82350B PCI High-Performance GPIB card) must be installed

* For a detailed description of the most common VISA DESCRIPTORS look at the Remarks of the help on the _viExecCommand function


###Related###
_viSetAttribute, _viExecCommand, _viOpen, _viClose


###Example###
@@IncludeExample@@

# Define SciTE settings for Lua files.
# ---------------------------------------------------
# 	SciTE 设置 for LUA						#
#													#
# 	04-24-2010 thesnow  (thesnoW@vip.qq.com)		#
#													#
# ---------------------------------------------------

# import some setting
import 属性文件/lua.keywords
import 属性文件/scite.constants
import 属性文件/lua.wow

#file
file.patterns.lua=*.lua;*.wlua;*.macro
lua=*.lua
shbang.lua=lua
filter.lua=Lua (lua)|$(file.patterns.lua)|
lexer.$(file.patterns.lua)=lua

# -------------------------
# 自动完成与调用提示设置
api.$(file.patterns.lua)=$(SciteDefaultHome)\api\SciTELua.api
calltip.lua.word.characters=$(chars.alpha)$(chars.numeric)_
calltip.lua.ignorecase=1
calltip.lua.end.definition=)
autocomplete.lua.ignorecase=1
autocomplete.lua.start.characters=$(chars.alpha)$(chars.numeric)$_@#
#autocomplete.lua.start.characters=.:
#calltip.lua.parameters.start= ([
#calltip.lua.parameters.separators=,
#calltip.lua.word.characters=$(chars.alpha)$(chars.numeric)_
#highlighting.identical.text.reserved.words.lua=and,break,do,else,elseif,end,false,for,function,if,in,local,nil,not,or,repeat,return,then,true,until,while

word.chars.lua=$(chars.alpha)$(chars.numeric)$(chars.accented)_%
word.characters.$(file.patterns.lua)=$(word.chars.lua)
# 输出字符集为UTF8
# output.code.page=65001
# -------------------------
# Tool item
command.name.4.$(file.patterns.lua)=执行选择语句
command.shortcut.4.$(file.patterns.lua)=Ctrl+1
command.4.$(file.patterns.lua)=dostring $(CurrentSelection)
command.mode.4.$(file.patterns.lua)=subsystem:lua,savebefore:no


# compatible with LuaBinaries for Lua 5.1; will work on both platforms.
command.compile.*.lua=luac5.1 -o "$(FileName).luc" "$(FileNameExt)"
# Lua 5.1
# command.go.*.lua=lua5.1 "$(FileNameExt)"
# lua scite go
command.go.*.lua;*.macro=dofile $(FilePath) $(1) $(2) $(3) $(4)
command.go.subsystem.*.lua;*.macro=3

# --------------------------


# Last 2 lines -> Lua 5.1 functions
# debug.debug debug.getfenv debug.gethook debug.getinfo debug.getlocal
# debug.getmetatable debug.getregistry debug.getupvalue debug.setfenv
# debug.sethook debug.setlocal debug.setmetatable debug.setupvalue debug.traceback

# I keep keywords5, 6, 7 & 8 for other libraries
# To make the change from Lua 4 to Lua 5 as smooth as possible, I made these properties
# modular and flexible.
# If you use only Lua 4, you can remove the lua5 keywords.
# If you use only Lua 5, you can either remove the lua4 keywords, or put them
# in another property to highlight them in a warning/error style.
# If you still use both, you can keep them like below, or use separate styles.

keywords.$(file.patterns.lua)=$(keyword.lua.keywords)
keywords2.$(file.patterns.lua)=$(keyword.lua.base.functions) $(keyword.lua.base.functions.v4) $(keyword.lua.base.functions.v5)
keywords3.$(file.patterns.lua)=$(keyword.lua.StrMath.functions.v4) $(keyword.lua.StrMath.functions.v5)
keywords4.$(file.patterns.lua)=$(keyword.lua.FileSys.functions.v4) $(keyword.lua.FileSys.functions.v5)
keywords5.$(file.patterns.lua)=$(keyword.lua.scite.functions) $(keyword.lua.scite.properties)
keywords6.$(file.patterns.lua)=$(keyword.lua.scite.panes) $(keyword.scite.constants)
keywords7.$(file.patterns.lua)=$(keyword.lua.scite.miscellaneous) $(keyword.lua.extend.lib)

#~ statement.indent.$(file.patterns.lua)=5 do else function then
#~ statement.lookback.$(file.patterns.lua)=20
indent.maintain.$(file.patterns.lua)=1

comment.block.lua=--
comment.block.at.line.start.lua=1

comment.stream.start.lua=--[[
comment.stream.end.lua=]]

# Lua styles

#Default
style.lua.32=$(font.code.base),fore:#000000
# White space: Visible only in View Whitespace mode (or if it has a back colour)
style.lua.0=fore:#FF0000
# Block comment (Lua 5.0)
style.lua.1=$(colour.code.comment.box),$(font.code.comment.box),back:#D0F0F0,eolfilled
# Line comment
style.lua.2=$(colour.code.comment.line),$(font.code.comment.line)
# Doc comment -- Not used in Lua (yet?)
style.lua.3=$(colour.notused),$(font.notused)
# Number
style.lua.4=$(colour.number)
# Keyword
style.lua.5=$(colour.keyword)
# (Double quoted) String
style.lua.6=$(colour.string)
# Character (Single quoted string)
style.lua.7=$(colour.char)
# Literal string
style.lua.8=$(colour.string),$(font.code.comment.box),back:#E0FFFF
# Preprocessor (obsolete in Lua 4.0 and up)
style.lua.9=$(colour.preproc)
# Operators
style.lua.10=$(colour.operator)
# Identifier (everything else...)
style.lua.11=
# End of line where string is not closed
style.lua.12=back:#E0C0E0,eolfilled
# Keywords 2 (Basic functions)
style.lua.13=fore:#0080C0
# Keywords 3 (Strings, Tables, Math)
style.lua.14=fore:#8000FF
# Keywords 4 (Coroutine, IO, OS)
style.lua.15=fore:#FF8000
# Keywords 5 (SciTE Functions)
style.lua.16=fore:#9F0000
# Keywords 6 (SciTE Properties)
style.lua.17=fore:#999900
# Keywords 7 (Misc SciTE Functions/Properties)
style.lua.18=fore:#990099
# Keywords 8 (Lua Extension)
style.lua.19=fore:#00AAAA
# Braces are only matched in operator style
braces.lua.style=10


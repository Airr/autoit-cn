###Function###
StringRegExp

###Description###
检查字串是否符合给定的正则表达式.

###Syntax###
StringRegExp ( "字符串", "表达式" [, 标志 ] [, 偏移量 ] ] )


###Parameters###
@@ParamTable@@
字符串
	需要检查的字符串
表达式
	正则表达式比较.
标志
	[可选参数] 一个表示函数运行方式的值. 见下表详细说明. 默认 0.
偏移量
	[可选参数] 开始匹配的字符串位置 (起始于1). 默认为 1.
@@End@@
<br>
@@ParamTable@@
<b>标志</b>
	<b>值</b>
0
	返回 1(匹配) 或 0(不匹配)
1
	返回匹配项目的数组.
2
	返回包括完整匹配的数组.(Perl/ PHP 样式).
3
	返回全局匹配的数组.
4
	返回包括完整匹配(Perl/ PHP 样式)和全局匹配的数组.
@@End@@

###ReturnValue###
<i>标志 = 0 时:</i>

@@ReturnTable@@
@Error	意思
2 	正则表达式错误. @Extended = 在正则表达式中的错误偏移量.
@@End@@

<br>
<i>标志= 1 或 2 时:</i>

@@ReturnTable@@
@Error	意思
0	有效数组. 检查 @Extended 的下一个偏移量.
1	数组无效. 没有匹配项目.
2	正则表达式错误, 数组无效. @Extended = 在正则表达式中的错误偏移量.
@@End@@

<br>
<i>标志 = 3 或 4 时:</i>

@@ReturnTable@@
@Error	意思
0	有效数组.
1	数组无效. 没有匹配项目.
2	正则表达式错误, 数组无效. @Extended = 在正则表达式中的错误偏移量.
@@End@@


###Remarks###
使用正则表达式是搜寻字串的一个轻巧的方法. 正则表达式指出纯文本字符串应该在目标字串中存在, 而且有些字符有特别的意义，表示什么样的可变性是承认目标字串的. AutoIt 正则表达式通常是与大小写有关.

正则表达式由下面所列的一个或多个简单的字符规则组成. 如果字符不在下列表格中,则它只会匹配它本身.

次数修饰符 (*, +, ?, {...} ) 将尝试最大可能的匹配, 使第一次匹配之后的字符也能得到匹配, 除非被一个问号跟随; then it will find the smallest pattern that allows the following characters to match as well.

允许嵌套的组, 但必须记住所有的组, 除非不捕获组, 在返回的数组中，里面的表达式匹配的值在前，而外面的表达式匹配的值在后.

完整的描述在 <b><a href="http://www.autoitscript.com/autoit3/pcrepattern.html" target="_blank">这里</a></b>

<b>注意</b>: 错误的的正则表达式可能产生一个死循环,使 CPU even(偶校验)崩溃.

<b><u>匹配字符</u></b>

@@ParamTable@@
[ ... ]
	匹配[]内的任何字符.如 <b>[aeiou]</b> 匹配任何小写元音字母. 可以使用破折号定义起始和结束字符匹配字符集,如 <b>[a-z]</b> 匹配任何小写字母. 又如 <b>[][]</b> 可以匹配 [ or ]. 要注意的是，[]内的特殊字符需要使用转义符 \ 来匹配自身，比如 <b>\\</b>,  <b>\^</b>, <b>\-</b>,<b>\[</b> 与 <b>\]</b>.
[^ ... ]
	匹配 "..." 外的任何字符。如: <b>[^0-9]</b> 匹配任何非数字. 如果是需要匹配字符 (<b>^</b>), 则需要使用转义符，如 (\^).
[:class:]
	在字符的给定类中匹配一个字符. 有效类是: 
	alpha (任何字母字符), 
	alnum (任何字母数字字符), 
	lower (任何小写字母), 
	upper (任何大写字母), 
	digit (任何十进制数字 0-9), 
	xdigit (任何十六进制数字, 0-9, A-F, a-f), 
	space (任何空格字符), 
	blank (只有一个空格或制表符), 
	print (任何可打印字符), 
	graph (任何可打印刷字符除空格), 
	cntrl (任何控制字符 [ascii 127 或 <32]) 或 punct (任何标点符号). 因此[0-9] 相当于 [[:digit:]].
[^:class:]
	除第一个字符外,在类中不匹配任何字符.
( ... )
	组. 在组中的的元素经过排序处理，而且能一起被重复. 例如： <b>(ab)+</b> 将会匹配 "ab" 或 "abab", 但不匹配 "aba". 依赖标志值，一个组也将储存被匹配的文本，在被函数返回的数组中作为在背面-参考中的使用.
(?i)
	大小写-不敏感性标志. 这个不操作组. 它告诉正则表达式从此处开始的匹配不区分大小写.
(?-i)
	(默认) 区分大小写标志. 这个不操作组. 它告诉正则表达式从此处开始的匹配区分大小写.
(?i ... )
	忽略大小写的组. 运转在一个正常的组内, 在组内执行忽略大小写的匹配.
(?-i ... )
	区分大小写的组. 运转在一个正常的组内,但是在组里面执行大小写有关的匹配. 主要使用在 (-i) 标志之后，或在一个忽略大小写的组内.
(?: ... )
	不捕捉组. 运转在一个正常的组内, 但是不记录数组的匹配字符，被匹配的文本也不会用来做后面-参考.
(?i: ... )
	忽略大小写的不捕捉组. 运转在一个不捕捉组内, 执行不捕捉组内忽略大小写的匹配.
(?-i: ... )
	区分大小写的不捕捉组. 运转在一个不捕捉组内, 执行不捕捉组内区分大小写的匹配.
(?m)
	^ 与 $ 匹配数据里面的换行.
(?s)
	. 匹配任意字符,包括换行. (默认 "." 不匹配换行)
(?x)
	忽略空白区域和 # 注释.
(?U)
	Invert greediness of quantifiers.
<b>.</b>
	匹配任何的单字符 (除换行以外)..
|
	或(or). 可以匹配|前的字符也可以匹配|之后的字符.
\
	退出一个特殊字符 (让它匹配实际字符) 或者引用一个特殊字符类型 (见下文)..
\\
	匹配一个真实的反斜线 (\).
\a
	闹铃,即字符 BEL (chr(7)).
\A
	只在字串的开始处匹配.
\b
	在字边界的匹配.
\B
	不在字边界匹配.
\c
	匹配一个控制字符,以下一个字符为基础. 例如, <b>\cM</b> 匹配 ctrl-M.
\d
	匹配任何的数字 (0-9).
\D
	匹配任何的非数字.
\e
	匹配一个退出符 (chr(27)).
\E
	结束大小写修改.
\f
	匹配进纸符 (chr(12)).
\h
	任何的水平空白字符.
\H
	任何不是水平的空白字符.
\n
	匹配换行符 (@LF, chr(10)).
\Q
	引号(禁用)元字符模式直到 \E 为止.
\r
	匹配一个回车符 (@CR, chr(13)).
\s
	匹配任何的空白字符: Chr(9) 到 Chr(13).包括:水平制表符,换行,垂直列表符,换页,回车以及标准空格 ( Chr(32) ).
\S
	匹配任何的非空白的字符.
\t
	匹配一个制表符 (chr(9)).
\v
	任何的垂直空白字符.
\V
	任何一个不是垂直空白字符的字符.
\w
	匹配任何的"单词" 字符: a-z, A-Z, 0-9 或下划线 (_).
\W
	匹配任何的非"单词"字符.
\###
	匹配[代]码特定的 ascii 字符或背面-参考. 可以达 3个八进制数值.匹配找到的背面-参考. 匹配完全地被给予的之前的组编号. 例如, <b>([:alpha:])\1</b> 会匹配一个双重文字.
\x##
	匹配指定的ascii字符,用字符的的十六进制表示. 只能是 2 个数字.
\z
	只匹配字符串结束.
\Z
	只匹配字符串结束,或者换行之前.
@@END@@

<u><b>重复字符</u></b>

@@ParamTable@@
{<i>x</i>}
	重复匹配 x 次.
{<i>x</i>,}
	重复匹配次数 >= x.
{0,<i>x</i>}
	重复匹配 0 到 x 次.
{<i>x</i>, <i>y</i>}
	重复匹配 x 到 y 次, x、y包括在内.
*
	重复匹配次数 >= 0.  等价于 {0,}
+
	重复匹配次数 >= 1.  等价于 {1,}
?
	重复匹配 0 到 1 次.  等价于 {0, 1}
? (在一个重复字符之后)
	匹配最小的而非最大的.
@@END@@

<u><b>字符类别</u></b>

@@ParamTable@@
[:alnum:]
	字母和数字
[:alpha:]
	字母
[:ascii:]
	字符代码 0 - 127
[:blank:]
	空格或制表符
[:cntrl:]
	控制字符
[:digit:]
	十进制数字 (相同于 \d)
[:graph:]
	可打印字符, 排除空格
[:lower:]
	小写字母
[:print:]
	可打印字符,包括空格
[:punct:]
	可打印字符, 排除文字和数字
[:space:]
	空白空间 (不完全和 \s 相同, 还包括 VT: chr(11) )
[:upper:]
	大写字母
[:word:]
	"字" 字符 (相同于 \w)
[:xdigit:]
	十六进制数
@@END@@


###Related###
StringInStr, StringRegExpReplace


###Example###
@@IncludeExample@@

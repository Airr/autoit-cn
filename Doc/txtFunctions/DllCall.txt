###Function###
DllCall

###Description###
调用指定DLL(动态链接库)文件里面的函数.

###Syntax###
DllCall ( "dll", "返回值类型", "函数名称" [, "类型1", 参数1[, "类型n", 参数n]] ) 

###Parameters###
@@ParamTable@@
dll
	要使用的 DLL 文件名，例如 "user32.dll".也可使用由 DllOpen 获得的句柄(请查看下面的 注意 部分).
返回值类型
	函数的返回值类型(请查看下面的 注意 部分). 
函数名称
	调用DLL文件里面的函数名称, 如: "MessageBox" 或者使用序号, 如. 62
类型
	[可选参数] 参数的数据类型(请查看下面的 注意 部分).  
参数
	[可选参数] 实参(请查看下面的 注意 部分).
@@End@@

<br>值类型为:

@@ParamTable@@
<b>类型</b>
	<b>详细信息</b>
none
	没有值 (仅用作无返回值函数的返回类型,这点跟C语言类似)   
byte
	8 位(bit)整数 
ubyte
	无符号 8 位(bit)整数
short
	16 位整数
ushort
	无符号16 位整数 
dword
	32 位整数
udword
	无符号 32 位整数 
int
	32 位整数
uint
	无符号 32 位整数
long
	32 位整数
ulong
	无符号 32 位整数 
int64
	64 位整数
uint64
	无符号 64 位整数
str
	ANSI 字符串(不能超过 65536 个字符).
wstr
	UNICODE 宽字符串(转换 到/从 ANSI 字符串,部分CALL需要).  不能超过 65536 字符.
hwnd
	窗口句柄(pointer)
ptr
	常规指针(void *)
float
	单精度浮点指针数 
double
	双精度浮点指针数
lresult/int_ptr/long_ptr
	一个大型整数指针.(目前x86,x64版本AutoIt都可以使用).
lparam/int_ptr/long_ptr
	一个大型整数指针.(目前x86,x64版本AutoIt都可以使用).
wparam/uint_ptr/ulong_ptr
	一个大型无符号整数指针.(目前x86,x64版本AutoIt都可以使用).
*
	传递一个其它类型(添加一个*到末尾.)  例如 "int*" 传递一个指针到 "int" 类型.
@@End@@


<br>从 Windows API 类型转换为 AutoIt 类型: 

@@ParamTable@@
<b>WINDOWS API 类型</b>
	<b>AutoIt 类型</b>
LPCSTR/LPSTR
	str
LPCWSTR/LPWSTR
	wstr
LPVOID
	ptr
HWND
	hwnd
WPARAM
	wparam
LPARAM
	lparam
DWORD
	dword
LPDWORD
	dword*
HANDLE/HINSTANCE
	ptr
LONGLONG/LARGE_INTEGER
	int64
ULONGLONG/ULARGE_INTEGER
	uint64
UINT_PTR
	wparam
LONG_PTR
	lparam
@@End@@


###ReturnValue###
@@ReturnTable@@
成功:	@error = 0.
失败:	@error = 1 不能使用这个DLL文件,
	@error = 2 未知 "返回值", 
	@error = 3 未在DLL文件中发现这个"函数".
@@End@@
参考注意项目.


###Remarks###
如果dll使用的是一个文件名,这个DLL将会被自动载入,并在调用结束后关闭并卸载. 如果您想手动控制载入或者卸载一个dll文件,您需要使用 DllOpen 和 DllClose 操作DLL句柄代替dll文件名.

默认情况下, AutoIt 使用 'stdcall' 调用方式. 要使用 'cdecl' 方式调用,请在返回值类型后面加上 ':cdecl' .
DllCall("SQLite.dll", "int:cdecl", "sqlite3_open", "str", $sDatabase_Filename , "long*", 0).

默认情况下, AutoIt 尝试使用 ANSI 版本的函数名, 例如. MessageBoxA 为尝试调用 MessageBox 所得到的函数名. 要调用 unicode 版本的函数,请使用 MessageBoxW.(注意:这里是指如果存在的情况下,虽然微软的函数都带有ANSI和UNICODE版本的函数,但是不保证其它DLL也带有)

如果函数调用失败,将会设置 @error 为一 1.  另外将会返回一个包含函数返回值和所有参数拷贝的数组(包括可能被传递后修改的函数参数).
$return[0] = 函数的返回值 
$return[1] = 参数1 
$return[2] = 参数2 
...
$return[n] = 参数n 


###Related###
DllCallbackFree, DllCallbackGetPtr, DllCallbackRegister, DllOpen, DllClose, DllStructCreate, DllStructGetPtr


###Example###
@@IncludeExample@@

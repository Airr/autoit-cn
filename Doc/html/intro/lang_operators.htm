<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"><html><head><title>Language Reference - Operators</title>  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">  <link href="../css/default.css" rel="stylesheet" type="text/css"></head><body><h1>语言相关 - 运算符</h1><p>AutoIt 支持以下这些赋值符号,数学运算符,比较和逻辑运算符.</p><p>&nbsp;</p><table border="1" cellpadding="3" cellspacing="0" width="100%">  <tbody><tr bgcolor="#000099">    <td nowrap="nowrap" width="9%"><font color="#ffffff"><strong>运算符</strong></font></td>    <td width="91%"><font color="#ffffff"><strong>详细信息</strong></font></td>    <tr>      <td style="vertical-align: top;"><br>      </td>      <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>赋值运算</strong>      </td>    </tr>  </tr>  <tr>      <td style="vertical-align: top; text-align: center;">=<br>      </td>      <td style="vertical-align: top;">赋值,如<strong> $var = 5</strong>&nbsp;&nbsp;&nbsp;&nbsp; (<em>赋值数字5到 </em><em>$var</em>)</td>    </tr>    <tr>      <td style="vertical-align: top; text-align: center;">+=<br>      </td>      <td style="vertical-align: top;">自增赋值,如<strong> $var += 1</strong> &nbsp;&nbsp;&nbsp; (<span style="font-style: italic;">添加 1</span><em> 到 </em><em>$var</em>)</td>    </tr>    <tr>      <td style="vertical-align: top; text-align: center;">-=<br>      </td>      <td style="vertical-align: top;">自减赋值.</td>    </tr>    <tr>      <td style="vertical-align: top; text-align: center;">*=<br>      </td>      <td style="vertical-align: top;">自乘赋值.</td>    </tr>    <tr>      <td style="vertical-align: top; text-align: center;">/=<br>      </td>      <td style="vertical-align: top;">自除赋值.</td>    </tr>    <tr>      <td style="vertical-align: top; text-align: center;">&amp;=<br>      </td>      <td style="vertical-align: top;">连续赋值.&nbsp; 如 <strong>$var = "one"</strong>, 然后 <strong>$var &amp;=      10</strong>&nbsp;&nbsp;&nbsp; (<em>$var 的结果为 "one10"</em>)</td>    </tr>    <tr>      <td style="vertical-align: top;"><br>      </td>      <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>数学运算</strong>      </td>    </tr><tr>    <td align="center" nowrap="nowrap">+</td>    <td>使两个数相加.&nbsp;如 <strong>10 + 20</strong>&nbsp;&nbsp;&nbsp;	(<em>等于 30</em>)</td>  </tr>  <tr>    <td align="center" nowrap="nowrap">-</td>    <td>使两个数相减.如 <strong>20 - 10</strong>&nbsp;&nbsp;&nbsp;      (<em>等于 10</em>)</td>  </tr>  <tr>    <td align="center" nowrap="nowrap">*</td>    <td>使两个数相乘.如<strong> 20 * 10</strong>&nbsp;&nbsp;&nbsp;      (<em>等于 200</em>)</td>  </tr>  <tr>    <td align="center" nowrap="nowrap">/</td>    <td>使两个数相除.如<strong> 20 / 10</strong>&nbsp;&nbsp;&nbsp;      (<em>等于 2</em>)</td>  </tr>  <tr>    <td align="center" nowrap="nowrap">&amp;</td>    <td>使两个字符串连接起来.比如 <strong>"one" &amp;      10</strong>&nbsp;&nbsp;&nbsp; (<em>等于"one10"</em>)</td>  </tr>  <tr>    <td align="center" nowrap="nowrap">^</td>    <td>提高某个数的幂.比如 <strong>2 ^ 4</strong>&nbsp;&nbsp;&nbsp;      (<em>2 的 4次方,等于 16</em>) </td>  </tr>  <tr>    <td align="center" nowrap="nowrap"><br></td>    <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>比较运算</strong> (大小写敏感的字符串需要使用 == 来比较)</td>  </tr>  <tr>    <td align="center" nowrap="nowrap">=</td>    <td>判断两个值是否相等.&nbsp;      比如 <a href="../keywords/IfElseEndIf.htm"><strong>If</strong></a><strong>      $var= 5 <a href="../keywords/IfElseEndIf.htm">Then</a></strong>&nbsp;&nbsp;&nbsp;      (<em>如果变量 $var 的值为 5 则条件成立</em>). 用于字符串时<strong>不区分大小写</strong></td>  </tr>  <tr>    <td align="center" nowrap="nowrap">==</td>    <td>判断两个<strong>字符串</strong>是否相等.左方和右方的值将会转化成字符串,并<strong>区分大小写</strong>,这个运算只能用于区分字符串大小写的比较.</td>  </tr>  <tr>    <td align="center" nowrap="nowrap">&lt;&gt;</td>    <td>判断两个值是否不相等. 比较会对字符串<strong>大小写敏感</strong>. 要比较一个大小写敏感的不等于操作使用 <strong>Not ("string1" == "string2")</strong></td>  </tr>  <tr>    <td align="center" nowrap="nowrap">&gt;</td>    <td>判断第一个值(左边)是否大于第二个值(右边).Strings are compared lexicographically even if the contents of the string happen to be numeric.</td>  </tr>  <tr>    <td align="center" nowrap="nowrap">&gt;=</td>    <td>判断第一个值(左边)是否大于或等于第二个值(右边).Strings are compared lexicographically even if the contents of the string happen to be numeric.</td>  </tr>  <tr>    <td align="center" nowrap="nowrap">&lt;</td>    <td>判断第一个值(左边)是否小于第二个值(右边). Strings are compared lexicographically even if the contents of the string happen to be numeric.</td>  </tr>  <tr>    <td align="center" nowrap="nowrap">&lt;=</td>    <td>判断第一个值(左边)是否小于或等于第二个值(右边). Strings are compared lexicographically even if the contents of the string happen to be numeric.</td>  </tr>  <tr>      <td style="vertical-align: top;"><br>      </td>      <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>逻辑运算</strong>      </td>    </tr><tr>    <td align="center" nowrap="nowrap">AND</td>    <td>逻辑与运算.&nbsp;如 <strong>If $var = 5 AND $var2 &gt; 6       Then</strong>&nbsp;&nbsp;&nbsp; (如果变量<em> $var 的值为 5 <strong>而且</strong>       变量 $var2 的值大于 6 则条件成立 </em>)</td>  </tr>  <tr>    <td align="center" nowrap="nowrap">OR</td>    <td>逻辑或运算.&nbsp;如 <strong>If $var = 5 OR $var2 &gt; 6 Then</strong>&nbsp;&nbsp;&nbsp;      (如果变量<em> $var 的值为 5 <strong>或者</strong>变量 $var2 的值大于 6 则条件成立</em>)</td>  </tr><tr>      <td style="vertical-align: top; text-align: center;">NOT</td>      <td style="vertical-align: top;">逻辑非运算.&nbsp;如<strong>NOT 1</strong>&nbsp;&nbsp;&nbsp;      (<em>结果为False</em>)</td>    </tr></tbody></table><p>&nbsp;</p><p>当一个表达式内含有多个运算符时,  其结合的先后顺序由 <strong>运算符的优先级别</strong>来控制.&nbsp;  AutoIt 中运算符的优先级如下所示.处于同一优先级的两种运算符将按  <em>从左到右</em>的顺序结合</p><p>越上面的运算符则优先级越高:</p><p class="code"> <strong>&nbsp;&nbsp;&nbsp; NOT<br>  &nbsp;&nbsp;&nbsp; ^<br>  &nbsp;&nbsp;&nbsp; * /<br>  &nbsp;&nbsp;&nbsp; + -<br>  &nbsp;&nbsp;&nbsp; &amp;<br>  &nbsp;&nbsp;&nbsp; &lt; &gt; &lt;= &gt;= = &lt;&gt; ==<br>  &nbsp;&nbsp;&nbsp; AND OR</strong></p><p>&nbsp; </p><p>例如表达式 <strong>2 + 4 * 10</strong> 的值将是 <strong>42</strong>,结合顺序如下:</p><p> &nbsp;&nbsp;&nbsp; 4 * 10&nbsp;&nbsp;&nbsp; (结果为40)</p><p> &nbsp;&nbsp;&nbsp; 2 + 40&nbsp;&nbsp;&nbsp; (结果为42)</p><p>乘号 <strong>*</strong> 拥有比加号 <strong>+</strong> 更高的优先级.  会进行<strong>先</strong>乘<strong>后</strong>加</p><p>&nbsp;</p><p>您还可以使用括号来使表达式内的某些部分优先被计算.</p><p>如 <strong>(2 + 4) * 10</strong> 结果等于 <strong>60</strong>.</p><br><p>下方使用了逻辑操作 AND, OR:</p><p><span style="font-weight: bold;"><span style="font-weight: bold;"></span></span></p><p>e.g. <strong>If&nbsp; MyFunc1() OR MyFunc2() Then&nbsp;</strong> &nbsp;&nbsp; (<em>如果 MyFunc1() 返回 true 则 MyFunc2() 不会被调用</em>)</p><p><span style="font-weight: bold;"><span style="font-weight: bold;"></span></span>e.g. <strong>If&nbsp; MyFunc1() AND MyFunc2() Then</strong> &nbsp;&nbsp; (<em>如果 MyFunc1() 返回 false 则 MyFunc2() 不会被调用</em>)</p></body></html>
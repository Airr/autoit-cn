<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<head>
  <title>用户自定义函数 参考详细列表</title>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <link href="css/default.css" rel="stylesheet" type="text/css">
</head>

<body>
<h1>用户自定义函数 参考列表</h1>
<p>下面是 用户自定义函数 的详细列表.&nbsp;
点击各个用户自定义函数名称得到详细介绍.</p>
<p>&nbsp;</p>

<table bordercolor="#c0c0c0" cellpadding="3" cellspacing="0" width="100%" border="1">
<tr>
  <td height="16" bgcolor="#000099" width="25%"><font color="#ffffff"><b>用户自定义函数</b></font></td>
  <td height="16" bgcolor="#000099" width="75%"><font color="#ffffff"><b>详细信息</b></font></td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayAdd.htm">_ArrayAdd</a></td>
  <td>添加一个指定的值到已经存在的数组的末尾.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayBinarySearch.htm">_ArrayBinarySearch</a></td>
  <td>使用二进制搜索运算搜索一个一维数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayCombinations.htm">_ArrayCombinations</a></td>
  <td>返回所选数组每个元素相互可能出现的组合的一个数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayConcatenate.htm">_ArrayConcatenate</a></td>
  <td>连接两个数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayDelete.htm">_ArrayDelete</a></td>
  <td>从数组中删除指定的元素.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayDisplay.htm">_ArrayDisplay</a></td>
  <td>在列表视图(listview)中显示一维或二维数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayFindAll.htm">_ArrayFindAll</a></td>
  <td>查找一维或二维数组的两个元素之间使用 _ArraySearch() 找到的所有匹配元素</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayInsert.htm">_ArrayInsert</a></td>
  <td>添加一个新值到指定的坐标.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayMax.htm">_ArrayMax</a></td>
  <td>返回数组中的最大值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayMaxIndex.htm">_ArrayMaxIndex</a></td>
  <td>返回数组中最大值的索引.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayMin.htm">_ArrayMin</a></td>
  <td>返回数组中的最小值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayMinIndex.htm">_ArrayMinIndex</a></td>
  <td>返回数组中最低值的索引.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayPermute.htm">_ArrayPermute</a></td>
  <td>返回一个原始数组中所有元素经过改序后的数组</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayPop.htm">_ArrayPop</a></td>
  <td>返回数组中最后一个元素, 同时删除这个元素.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayPush.htm">_ArrayPush</a></td>
  <td>添加新值而不增加数组大小, 在结尾插入新值则删除第一个,反之亦然.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayReverse.htm">_ArrayReverse</a></td>
  <td>反序排列数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArraySearch.htm">_ArraySearch</a></td>
  <td>在一维或二维数组内部进行进行搜索. 类似于_ArrayBinarySearch(), 但数组不需要排序.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArraySort.htm">_ArraySort</a></td>
  <td>使用快速排序法/插入排序法对一个一维或者二维数组进行排序.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArraySwap.htm">_ArraySwap</a></td>
  <td>交换数组的两个元素.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayToClip.htm">_ArrayToClip</a></td>
  <td>发送数组内容到剪贴板, 每个元素由回车换行分隔.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayToString.htm">_ArrayToString</a></td>
  <td>将数组转化为一个由指定分隔符分割的单一字符串中.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayTrim.htm">_ArrayTrim</a></td>
  <td>从一个数组中的所有要素删除一定数目的字符.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ArrayUnique.htm">_ArrayUnique</a></td>
  <td>返回一维数组的独特元素.</td>
</tr>
<tr>
  <td><a href="libfunctions/_Assert.htm">_Assert</a></td>
  <td>插入失败时显示的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_ChooseColor.htm">_ChooseColor</a></td>
  <td>创建一个颜色对话框使用户可以选择颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_ChooseFont.htm">_ChooseFont</a></td>
  <td>创建字体选择对话框,使用户能够选择逻辑字体属性.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_ChangeChain.htm">_ClipBoard_ChangeChain</a></td>
  <td>从剪切板查看器中移除指定窗口链</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_Close.htm">_ClipBoard_Close</a></td>
  <td>关闭剪切板</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_CountFormats.htm">_ClipBoard_CountFormats</a></td>
  <td>返回当前剪切板中不同数据格式的数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_Empty.htm">_ClipBoard_Empty</a></td>
  <td>清空剪切板并释放剪切板数据句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_EnumFormats.htm">_ClipBoard_EnumFormats</a></td>
  <td>枚举剪切板中当前有效的数据格式</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_FormatStr.htm">_ClipBoard_FormatStr</a></td>
  <td>返回一个标准剪切板格式中用字符串表示的格式(返回剪切板数据格式)</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_GetData.htm">_ClipBoard_GetData</a></td>
  <td>使用返回剪切板中指定格式的数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_GetDataEx.htm">_ClipBoard_GetDataEx</a></td>
  <td>使用返回剪切板中指定格式的数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_GetFormatName.htm">_ClipBoard_GetFormatName</a></td>
  <td>返回指定注册的格式的名称</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_GetOpenWindow.htm">_ClipBoard_GetOpenWindow</a></td>
  <td>返回当前打开剪切板的程序的窗口句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_GetOwner.htm">_ClipBoard_GetOwner</a></td>
  <td>返回剪切板的当前所有者窗口句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_GetPriorityFormat.htm">_ClipBoard_GetPriorityFormat</a></td>
  <td>返回指定列表中第一个有效的剪切板格式</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_GetSequenceNumber.htm">_ClipBoard_GetSequenceNumber</a></td>
  <td>返回当前窗口状态的剪切板次序</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_GetViewer.htm">_ClipBoard_GetViewer</a></td>
  <td>检索剪贴板查看器中的第一个窗口链句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_IsFormatAvailable.htm">_ClipBoard_IsFormatAvailable</a></td>
  <td>确定剪贴板是否包含指定格式的数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_Open.htm">_ClipBoard_Open</a></td>
  <td>打开剪切板并防止其它程序修改剪切板</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_RegisterFormat.htm">_ClipBoard_RegisterFormat</a></td>
  <td>注册一个新的剪切板格式</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_SetData.htm">_ClipBoard_SetData</a></td>
  <td>使用指定格式放置一个数据到剪切板</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_SetDataEx.htm">_ClipBoard_SetDataEx</a></td>
  <td>使用一个指定的剪切板格式替换剪切板中的数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipBoard_SetViewer.htm">_ClipBoard_SetViewer</a></td>
  <td>添加指定窗口到剪贴板查看器链中</td>
</tr>
<tr>
  <td><a href="libfunctions/_ClipPutFile.htm">_ClipPutFile</a></td>
  <td>就像资源管理器一样复制文件到剪切板.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ColorConvertHSLtoRGB.htm">_ColorConvertHSLtoRGB</a></td>
  <td>转换 HSL 颜色到 RGB 颜色. 译注:要了解 HSL 颜色、RGB 颜色, 参考维基百科:</td>
</tr>
<tr>
  <td><a href="libfunctions/_ColorConvertRGBtoHSL.htm">_ColorConvertRGBtoHSL</a></td>
  <td>转换 RGB 颜色到 HSL颜色. 译注:要了解 HSL 颜色、RGB 颜色, 参考维基百科:</td>
</tr>
<tr>
  <td><a href="libfunctions/_ColorGetBlue.htm">_ColorGetBlue</a></td>
  <td>返回指定颜色的蓝色成分.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ColorGetCOLORREF.htm">_ColorGetCOLORREF</a></td>
  <td>Returns the COLORREF color.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ColorGetGreen.htm">_ColorGetGreen</a></td>
  <td>返回指定颜色的绿色成分.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ColorGetRed.htm">_ColorGetRed</a></td>
  <td>返回指定颜色的红色成分.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ColorGetRGB.htm">_ColorGetRGB</a></td>
  <td>返回 RGB 颜色中 Red,Green,Blue 值的数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ColorSetCOLORREF.htm">_ColorSetCOLORREF</a></td>
  <td>Returns the COLORREF color.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ColorSetRGB.htm">_ColorSetRGB</a></td>
  <td>返回 RGB 颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_Crypt_DecryptData.htm">_Crypt_DecryptData</a></td>
  <td>使用密钥解密数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_Crypt_DecryptFile.htm">_Crypt_DecryptFile</a></td>
  <td>使用密钥和算法解密文件</td>
</tr>
<tr>
  <td><a href="libfunctions/_Crypt_DeriveKey.htm">_Crypt_DeriveKey</a></td>
  <td>用算法和密码创建密钥</td>
</tr>
<tr>
  <td><a href="libfunctions/_Crypt_DestroyKey.htm">_Crypt_DestroyKey</a></td>
  <td>释放密钥使用的资源</td>
</tr>
<tr>
  <td><a href="libfunctions/_Crypt_EncryptData.htm">_Crypt_EncryptData</a></td>
  <td>使用提供的密钥加密数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_Crypt_EncryptFile.htm">_Crypt_EncryptFile</a></td>
  <td>指定密钥和算法加密文件</td>
</tr>
<tr>
  <td><a href="libfunctions/_Crypt_HashData.htm">_Crypt_HashData</a></td>
  <td>指定算法 Hash 数据 译注:关于 Hash 见下文注意部分</td>
</tr>
<tr>
  <td><a href="libfunctions/_Crypt_HashFile.htm">_Crypt_HashFile</a></td>
  <td>以指定算法将文件 Hash 译注:关于 Hash 见下文注意部分</td>
</tr>
<tr>
  <td><a href="libfunctions/_Crypt_Shutdown.htm">_Crypt_Shutdown</a></td>
  <td>关闭加密库</td>
</tr>
<tr>
  <td><a href="libfunctions/_Crypt_Startup.htm">_Crypt_Startup</a></td>
  <td>初始化加密库</td>
</tr>
<tr>
  <td><a href="libfunctions/_DateAdd.htm">_DateAdd</a></td>
  <td>计算一个指定的日期和间隔后的新日期.</td>
</tr>
<tr>
  <td><a href="libfunctions/_DateDayOfWeek.htm">_DateDayOfWeek</a></td>
  <td>按指定日期返回一个星期名称.</td>
</tr>
<tr>
  <td><a href="libfunctions/_DateDaysInMonth.htm">_DateDaysInMonth</a></td>
  <td>返回基于指定年的指定月的月中的天数</td>
</tr>
<tr>
  <td><a href="libfunctions/_DateDiff.htm">_DateDiff</a></td>
  <td>返回两个日期的不同, 使用指定类型表达.</td>
</tr>
<tr>
  <td><a href="libfunctions/_DateIsLeapYear.htm">_DateIsLeapYear</a></td>
  <td>检查指定年份是不是闰年.</td>
</tr>
<tr>
  <td><a href="libfunctions/_DateIsValid.htm">_DateIsValid</a></td>
  <td>检查给定的日期是否是一个有效的日期(格式).</td>
</tr>
<tr>
  <td><a href="libfunctions/_DateTimeFormat.htm">_DateTimeFormat</a></td>
  <td>返回电脑的区域设置中的日期格式</td>
</tr>
<tr>
  <td><a href="libfunctions/_DateTimeSplit.htm">_DateTimeSplit</a></td>
  <td>将包含日期和时间的字符串拆分为两个数组</td>
</tr>
<tr>
  <td><a href="libfunctions/_DateToDayOfWeek.htm">_DateToDayOfWeek</a></td>
  <td>返回给定日期在其所在周内的星期序号</td>
</tr>
<tr>
  <td><a href="libfunctions/_DateToDayOfWeekISO.htm">_DateToDayOfWeekISO</a></td>
  <td>返回一个指定日期的国际标准(ISO)星期(n)数.</td>
</tr>
<tr>
  <td><a href="libfunctions/_DateToDayValue.htm">_DateToDayValue</a></td>
  <td>返回从BC 4713 年一月一日中午至今的天数,用于得到格里日期(日常说的阳历,西历).</td>
</tr>
<tr>
  <td><a href="libfunctions/_DateToMonth.htm">_DateToMonth</a></td>
  <td>返回指定月份的名称.</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_CompareFileTime.htm">_Date_Time_CompareFileTime</a></td>
  <td>比较两个文件时间</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_DOSDateTimeToArray.htm">_Date_Time_DOSDateTimeToArray</a></td>
  <td>解码一个 DOS 日期/时间 为一个数组</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_DOSDateTimeToFileTime.htm">_Date_Time_DOSDateTimeToFileTime</a></td>
  <td>转换一个 MS-DOS 日期和时间值到一个文件时间</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_DOSDateTimeToStr.htm">_Date_Time_DOSDateTimeToStr</a></td>
  <td>解码一个 DOS 日期到一个字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_DOSDateToArray.htm">_Date_Time_DOSDateToArray</a></td>
  <td>解码一个 DOS 日期到一个数组</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_DOSDateToStr.htm">_Date_Time_DOSDateToStr</a></td>
  <td>解码一个 DOS 日期到一个字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_DOSTimeToArray.htm">_Date_Time_DOSTimeToArray</a></td>
  <td>解码一个 DOS 时间到一个数组</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_DOSTimeToStr.htm">_Date_Time_DOSTimeToStr</a></td>
  <td>解码一个 DOS 时间到字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_EncodeFileTime.htm">_Date_Time_EncodeFileTime</a></td>
  <td>编码并返回一个 $tagFILETIME 数据结构</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_EncodeSystemTime.htm">_Date_Time_EncodeSystemTime</a></td>
  <td>编码并返回一个 $tagSYSTEMTIME 数据结构</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_FileTimeToArray.htm">_Date_Time_FileTimeToArray</a></td>
  <td>解码一个文件时间到数组</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_FileTimeToDOSDateTime.htm">_Date_Time_FileTimeToDOSDateTime</a></td>
  <td>转换 MS-DOS 日期与时间值到一个文件时间</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_FileTimeToLocalFileTime.htm">_Date_Time_FileTimeToLocalFileTime</a></td>
  <td>转换一个基于全球协调时(UTC)的文件时间到本地文件时间</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_FileTimeToStr.htm">_Date_Time_FileTimeToStr</a></td>
  <td>解码一个文件时间到一个日期/时间字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_FileTimeToSystemTime.htm">_Date_Time_FileTimeToSystemTime</a></td>
  <td>转换一个文件时间到系统时间格式</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_GetFileTime.htm">_Date_Time_GetFileTime</a></td>
  <td>返回一个包含文件创建,访问,修改的日期和时间</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_GetLocalTime.htm">_Date_Time_GetLocalTime</a></td>
  <td>返回当前的本地日期和时间</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_GetSystemTime.htm">_Date_Time_GetSystemTime</a></td>
  <td>返回一个使用全球协调时(UTC)表示的当前系统时间</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_GetSystemTimeAdjustment.htm">_Date_Time_GetSystemTimeAdjustment</a></td>
  <td>确定系统是否进行定期时间调整</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_GetSystemTimeAsFileTime.htm">_Date_Time_GetSystemTimeAsFileTime</a></td>
  <td>返回一个使用全球协调时(UTC)表示的当前系统时间</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_GetSystemTimes.htm">_Date_Time_GetSystemTimes</a></td>
  <td>返回系统时间信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_GetTickCount.htm">_Date_Time_GetTickCount</a></td>
  <td>返回从系统启动到当前时间经过的毫秒数</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_GetTimeZoneInformation.htm">_Date_Time_GetTimeZoneInformation</a></td>
  <td>返回当前时区设置</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_LocalFileTimeToFileTime.htm">_Date_Time_LocalFileTimeToFileTime</a></td>
  <td>转换一个本地文件时间到一个文件时间(基于UTC)</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_SetFileTime.htm">_Date_Time_SetFileTime</a></td>
  <td>设置文件创建,访问,修改日期与时间</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_SetLocalTime.htm">_Date_Time_SetLocalTime</a></td>
  <td>设置当前本地日期与时间</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_SetSystemTime.htm">_Date_Time_SetSystemTime</a></td>
  <td>设置当前系统时间与日期, 使用 UTC 表达</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_SetSystemTimeAdjustment.htm">_Date_Time_SetSystemTimeAdjustment</a></td>
  <td>启用或禁用系统时钟定期调整</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_SetTimeZoneInformation.htm">_Date_Time_SetTimeZoneInformation</a></td>
  <td>设置当前时区设置</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_SystemTimeToArray.htm">_Date_Time_SystemTimeToArray</a></td>
  <td>解码一个系统时间到一个数组</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_SystemTimeToDateStr.htm">_Date_Time_SystemTimeToDateStr</a></td>
  <td>解码一个系统时间到一个日期字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_SystemTimeToDateTimeStr.htm">_Date_Time_SystemTimeToDateTimeStr</a></td>
  <td>解码一个系统时间到一个日期/时间字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_SystemTimeToFileTime.htm">_Date_Time_SystemTimeToFileTime</a></td>
  <td>转换一个系统时间到文件时间格式</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_SystemTimeToTimeStr.htm">_Date_Time_SystemTimeToTimeStr</a></td>
  <td>解码一个系统时间到一个时间字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_SystemTimeToTzSpecificLocalTime.htm">_Date_Time_SystemTimeToTzSpecificLocalTime</a></td>
  <td>UTC时间转换为指定时区的对应本地时间</td>
</tr>
<tr>
  <td><a href="libfunctions/_Date_Time_TzSpecificLocalTimeToSystemTime.htm">_Date_Time_TzSpecificLocalTimeToSystemTime</a></td>
  <td>将本地时间转变为UTC时间</td>
</tr>
<tr>
  <td><a href="libfunctions/_DayValueToDate.htm">_DayValueToDate</a></td>
  <td>添加一个指定的天数到BC 4713 年1月1日中午,并返回一个格利日期(Gregorian date,日常说的阳历,西历).</td>
</tr>
<tr>
  <td><a href="libfunctions/_DebugBugReportEnv.htm">_DebugBugReportEnv</a></td>
  <td>输出一个包含错误信息字符串的提交报告.</td>
</tr>
<tr>
  <td><a href="libfunctions/_DebugOut.htm">_DebugOut</a></td>
  <td>输出调试信息到 _DebugSetup() 设置的调试会话框</td>
</tr>
<tr>
  <td><a href="libfunctions/_DebugReport.htm">_DebugReport</a></td>
  <td>写调试会话</td>
</tr>
<tr>
  <td><a href="libfunctions/_DebugReportEx.htm">_DebugReportEx</a></td>
  <td>格式化写入调试会话框的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_DebugReportVar.htm">_DebugReportVar</a></td>
  <td>将变量的结果写入调试会话</td>
</tr>
<tr>
  <td><a href="libfunctions/_DebugSetup.htm">_DebugSetup</a></td>
  <td>使用指定的报告设置调试会话</td>
</tr>
<tr>
  <td><a href="libfunctions/_Degree.htm">_Degree</a></td>
  <td>将弧度转化为角度</td>
</tr>
<tr>
  <td><a href="libfunctions/_EventLog__Backup.htm">_EventLog__Backup</a></td>
  <td>将事件日志保存到一个备份文件</td>
</tr>
<tr>
  <td><a href="libfunctions/_EventLog__Clear.htm">_EventLog__Clear</a></td>
  <td>清空事件日志</td>
</tr>
<tr>
  <td><a href="libfunctions/_EventLog__Close.htm">_EventLog__Close</a></td>
  <td>关闭一个事件日志读取句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_EventLog__Count.htm">_EventLog__Count</a></td>
  <td>获取事件日志中记录的数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_EventLog__DeregisterSource.htm">_EventLog__DeregisterSource</a></td>
  <td>关闭一个事件日志写入句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_EventLog__Full.htm">_EventLog__Full</a></td>
  <td>检查事件日志是否已满</td>
</tr>
<tr>
  <td><a href="libfunctions/_EventLog__Notify.htm">_EventLog__Notify</a></td>
  <td>使应用程序接受一个事件通知</td>
</tr>
<tr>
  <td><a href="libfunctions/_EventLog__Oldest.htm">_EventLog__Oldest</a></td>
  <td>获取事件日志中最旧记录的绝对记录数</td>
</tr>
<tr>
  <td><a href="libfunctions/_EventLog__Open.htm">_EventLog__Open</a></td>
  <td>打开日志的句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_EventLog__OpenBackup.htm">_EventLog__OpenBackup</a></td>
  <td>打开一个日志文件备份的句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_EventLog__Read.htm">_EventLog__Read</a></td>
  <td>从事件日志读取一个值</td>
</tr>
<tr>
  <td><a href="libfunctions/_EventLog__RegisterSource.htm">_EventLog__RegisterSource</a></td>
  <td>获取已注册的指定事件日志的句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_EventLog__Report.htm">_EventLog__Report</a></td>
  <td>事件写入指定事件日志的末端</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelBookAttach.htm">_ExcelBookAttach</a></td>
  <td>连接到首个存在的使基于选择模式与搜索字符串相匹配的Microsoft Excel实例</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelBookClose.htm">_ExcelBookClose</a></td>
  <td>关闭活动工作表并移除指定的 Excel 对象.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelBookNew.htm">_ExcelBookNew</a></td>
  <td>创建一个新的工作表并返回一个对象标识(ID).</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelBookOpen.htm">_ExcelBookOpen</a></td>
  <td>打开一个存在的工作表并返回它的对象标识.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelBookSave.htm">_ExcelBookSave</a></td>
  <td>保存指定Excel对象的活动工作表.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelBookSaveAs.htm">_ExcelBookSaveAs</a></td>
  <td>使用新文件名或格式保存指定Excel对象的活动工作簿</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelColumnDelete.htm">_ExcelColumnDelete</a></td>
  <td>删除活动工作表中一定数量的列</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelColumnInsert.htm">_ExcelColumnInsert</a></td>
  <td>向活动工作表中插入列</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelFontSetProperties.htm">_ExcelFontSetProperties</a></td>
  <td>设置Excel对象一个范围内的粗体, 斜体, 及下划线字体属性</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelHorizontalAlignSet.htm">_ExcelHorizontalAlignSet</a></td>
  <td>设置单元格水平对齐方式.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelHyperlinkInsert.htm">_ExcelHyperlinkInsert</a></td>
  <td>活动页面中插入一个超链接.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelNumberFormat.htm">_ExcelNumberFormat</a></td>
  <td>在指定 R1C1 范围应用特定格式的单元格.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelReadArray.htm">_ExcelReadArray</a></td>
  <td>使用活动工作表的 1 行或 1 列数据创建数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelReadCell.htm">_ExcelReadCell</a></td>
  <td>从一个指定Excel对象的活动工作表读取(单元格)信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelReadSheetToArray.htm">_ExcelReadSheetToArray</a></td>
  <td>用活动工作表的行/列创建二维数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelRowDelete.htm">_ExcelRowDelete</a></td>
  <td>删除活动工作表一或多行.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelRowInsert.htm">_ExcelRowInsert</a></td>
  <td>将一定数量的行插入工作表</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelSheetActivate.htm">_ExcelSheetActivate</a></td>
  <td>使用表名称或编号激活指定工作表.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelSheetAddNew.htm">_ExcelSheetAddNew</a></td>
  <td>添加一个新的工作表到工作区 - 名称可选.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelSheetDelete.htm">_ExcelSheetDelete</a></td>
  <td>使用表名称或编号删除指定表.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelSheetList.htm">_ExcelSheetList</a></td>
  <td>返回工作簿中所有工作表名称列表的数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelSheetMove.htm">_ExcelSheetMove</a></td>
  <td>移动工作表</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelSheetNameGet.htm">_ExcelSheetNameGet</a></td>
  <td>返回活动表的名称</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelSheetNameSet.htm">_ExcelSheetNameSet</a></td>
  <td>设置活动工作表名称.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelWriteArray.htm">_ExcelWriteArray</a></td>
  <td>将数组写入到指定Excel对象活动表上的行或列</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelWriteCell.htm">_ExcelWriteCell</a></td>
  <td>将信息写入指定 Excel 对象的活动工作表单元格.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelWriteFormula.htm">_ExcelWriteFormula</a></td>
  <td>将公式写入指定 Excel 对象活动工作表单元格中.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ExcelWriteSheetFromArray.htm">_ExcelWriteSheetFromArray</a></td>
  <td>写入一个二维数组到活动工作表</td>
</tr>
<tr>
  <td><a href="libfunctions/_FileCountLines.htm">_FileCountLines</a></td>
  <td>返回指定文件的行数.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FileCreate.htm">_FileCreate</a></td>
  <td>创建或者清零指定的文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FileListToArray.htm">_FileListToArray</a></td>
  <td>列出指定路径下的文件和/或文件夹 (类似使用 Dir /B命令)</td>
</tr>
<tr>
  <td><a href="libfunctions/_FilePrint.htm">_FilePrint</a></td>
  <td>打印一个纯文本文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FileReadToArray.htm">_FileReadToArray</a></td>
  <td>读取一个指定文件到一个数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FileWriteFromArray.htm">_FileWriteFromArray</a></td>
  <td>将数组记录写入文件</td>
</tr>
<tr>
  <td><a href="libfunctions/_FileWriteLog.htm">_FileWriteLog</a></td>
  <td>写入一个当前日期,时间和一个指定文本到一个日志文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FileWriteToLine.htm">_FileWriteToLine</a></td>
  <td>写入文本到一个文件的指定行.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_Close.htm">_FTP_Close</a></td>
  <td>关闭 _FTP_Open 打开的回话.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_Command.htm">_FTP_Command</a></td>
  <td>发送一个命令到 FTP 服务器.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_Connect.htm">_FTP_Connect</a></td>
  <td>连接到一个 FTP 服务器.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_DecodeInternetStatus.htm">_FTP_DecodeInternetStatus</a></td>
  <td>解码一个接收(received) Internet 状态.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_DirCreate.htm">_FTP_DirCreate</a></td>
  <td>在 FTP 服务器上建立一个目录.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_DirDelete.htm">_FTP_DirDelete</a></td>
  <td>删除一个 FTP 服务器上的目录.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_DirGetCurrent.htm">_FTP_DirGetCurrent</a></td>
  <td>得到FTP服务器当前目录.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_DirPutContents.htm">_FTP_DirPutContents</a></td>
  <td>如果选定 Recursivley, 将文件夹放入 FTP 服务器.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_DirSetCurrent.htm">_FTP_DirSetCurrent</a></td>
  <td>设置 FTP 服务器上的当前目录.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_FileClose.htm">_FTP_FileClose</a></td>
  <td>关闭由 _FTP_FileOpen 返回的句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_FileDelete.htm">_FTP_FileDelete</a></td>
  <td>从 FTP 服务器删除一个文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_FileGet.htm">_FTP_FileGet</a></td>
  <td>从 FTP 服务器上得到一个文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_FileGetSize.htm">_FTP_FileGetSize</a></td>
  <td>得到 FTP 服务器上一个文件的文件大小.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_FileOpen.htm">_FTP_FileOpen</a></td>
  <td>打开 FTP 服务器上的远程文件供读/写.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_FilePut.htm">_FTP_FilePut</a></td>
  <td>在 FTP 服务器上放置(上传)一个文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_FileRead.htm">_FTP_FileRead</a></td>
  <td>使用 _FTP_FileOpen() 返回的文件句柄读取数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_FileRename.htm">_FTP_FileRename</a></td>
  <td>重命名一个 FTP 服务器上的文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_FileTimeLoHiToStr.htm">_FTP_FileTimeLoHiToStr</a></td>
  <td>关闭 _FTP_Open 对话.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_FindFileClose.htm">_FTP_FindFileClose</a></td>
  <td>删除查找文件句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_FindFileFirst.htm">_FTP_FindFileFirst</a></td>
  <td>查找 FTP 服务器上第一个文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_FindFileNext.htm">_FTP_FindFileNext</a></td>
  <td>查找 FTP 服务器上的下一个文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_GetLastResponseInfo.htm">_FTP_GetLastResponseInfo</a></td>
  <td>线程调用这个函数检索最后一个错误描述或服务器的响应</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_ListToArray.htm">_FTP_ListToArray</a></td>
  <td>获取当前远程目录的文件名, 目录或两项.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_ListToArray2D.htm">_FTP_ListToArray2D</a></td>
  <td>获取当前远程目录文件名和文件大小.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_ListToArrayEx.htm">_FTP_ListToArrayEx</a></td>
  <td>获取当前远程目录的文件/目录的名称, 大小, 属性和时间.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_Open.htm">_FTP_Open</a></td>
  <td>打开一个 FTP 会话.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_ProgressDownload.htm">_FTP_ProgressDownload</a></td>
  <td>以二进制模式下载文件,并显示(或通过调用用户自定义函数)进度窗口.</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_ProgressUpload.htm">_FTP_ProgressUpload</a></td>
  <td>以二进制模式上传文件,并显示(或通过调用用户自定义函数)进度窗口</td>
</tr>
<tr>
  <td><a href="libfunctions/_FTP_SetStatusCallback.htm">_FTP_SetStatusCallback</a></td>
  <td>注册回调函数,WinInet 函数可以调用一项操作中的进度.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ArrowCapCreate.htm">_GDIPlus_ArrowCapCreate</a></td>
  <td>创建高度和宽度可调的箭头线帽</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ArrowCapDispose.htm">_GDIPlus_ArrowCapDispose</a></td>
  <td>释放可调节箭头线帽对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ArrowCapGetFillState.htm">_GDIPlus_ArrowCapGetFillState</a></td>
  <td>获取箭头帽填充状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ArrowCapGetHeight.htm">_GDIPlus_ArrowCapGetHeight</a></td>
  <td>获取箭头帽高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ArrowCapGetMiddleInset.htm">_GDIPlus_ArrowCapGetMiddleInset</a></td>
  <td>获取插入值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ArrowCapGetWidth.htm">_GDIPlus_ArrowCapGetWidth</a></td>
  <td>获取箭头帽宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ArrowCapSetFillState.htm">_GDIPlus_ArrowCapSetFillState</a></td>
  <td>设置箭头帽填充状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ArrowCapSetHeight.htm">_GDIPlus_ArrowCapSetHeight</a></td>
  <td>设置箭头帽高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ArrowCapSetMiddleInset.htm">_GDIPlus_ArrowCapSetMiddleInset</a></td>
  <td>获取插入值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ArrowCapSetWidth.htm">_GDIPlus_ArrowCapSetWidth</a></td>
  <td>设置箭头帽宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_BitmapCloneArea.htm">_GDIPlus_BitmapCloneArea</a></td>
  <td>创建指定坐标和格式的位图对象克隆</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_BitmapCreateFromFile.htm">_GDIPlus_BitmapCreateFromFile</a></td>
  <td>从文件中创建位图对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_BitmapCreateFromGraphics.htm">_GDIPlus_BitmapCreateFromGraphics</a></td>
  <td>在一个图形对象上创建基于宽度和高度的位图对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_BitmapCreateFromHBITMAP.htm">_GDIPlus_BitmapCreateFromHBITMAP</a></td>
  <td>从位图句柄创建位图对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_BitmapCreateHBITMAPFromBitmap.htm">_GDIPlus_BitmapCreateHBITMAPFromBitmap</a></td>
  <td>从位图对象创建位图句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_BitmapDispose.htm">_GDIPlus_BitmapDispose</a></td>
  <td>释放一个位图对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_BitmapLockBits.htm">_GDIPlus_BitmapLockBits</a></td>
  <td>为读/写操作锁定部分位图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_BitmapUnlockBits.htm">_GDIPlus_BitmapUnlockBits</a></td>
  <td>解锁 _GDIPlus_BitmapLockBits 锁定的部分位图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_BrushClone.htm">_GDIPlus_BrushClone</a></td>
  <td>克隆画笔对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_BrushCreateSolid.htm">_GDIPlus_BrushCreateSolid</a></td>
  <td>创建实心画笔对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_BrushDispose.htm">_GDIPlus_BrushDispose</a></td>
  <td>释放画笔对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_BrushGetSolidColor.htm">_GDIPlus_BrushGetSolidColor</a></td>
  <td>获取实心画笔对象颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_BrushGetType.htm">_GDIPlus_BrushGetType</a></td>
  <td>检索画笔对象类型</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_BrushSetSolidColor.htm">_GDIPlus_BrushSetSolidColor</a></td>
  <td>设置实心画笔对象颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_CustomLineCapDispose.htm">_GDIPlus_CustomLineCapDispose</a></td>
  <td>释放一个自定义线 cap 对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_Decoders.htm">_GDIPlus_Decoders</a></td>
  <td>获取包含图像解码器信息的数组</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_DecodersGetCount.htm">_GDIPlus_DecodersGetCount</a></td>
  <td>获取图像解码器数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_DecodersGetSize.htm">_GDIPlus_DecodersGetSize</a></td>
  <td>获取 _GDIPlus_GetImageDecoders 返回结构总的大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_DrawImagePoints.htm">_GDIPlus_DrawImagePoints</a></td>
  <td>图像绘制到指定的位置.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_Encoders.htm">_GDIPlus_Encoders</a></td>
  <td>获取编码器图像信息的数组</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_EncodersGetCLSID.htm">_GDIPlus_EncodersGetCLSID</a></td>
  <td>返回指定图像文件类型的编码器 CLSID</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_EncodersGetCount.htm">_GDIPlus_EncodersGetCount</a></td>
  <td>获取图像编码器数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_EncodersGetParamList.htm">_GDIPlus_EncodersGetParamList</a></td>
  <td>获取图像编码器参数列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_EncodersGetParamListSize.htm">_GDIPlus_EncodersGetParamListSize</a></td>
  <td>获取图像编码器参数列表的大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_EncodersGetSize.htm">_GDIPlus_EncodersGetSize</a></td>
  <td>获取 _GDIPlus_GetImageEncoders 返回的结构总大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_FontCreate.htm">_GDIPlus_FontCreate</a></td>
  <td>创建一个字体对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_FontDispose.htm">_GDIPlus_FontDispose</a></td>
  <td>释放一个字体对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_FontFamilyCreate.htm">_GDIPlus_FontFamilyCreate</a></td>
  <td>创建字体族对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_FontFamilyDispose.htm">_GDIPlus_FontFamilyDispose</a></td>
  <td>释放一个字体家族(Font Family)对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsClear.htm">_GDIPlus_GraphicsClear</a></td>
  <td>清除图形对象指定颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsCreateFromHDC.htm">_GDIPlus_GraphicsCreateFromHDC</a></td>
  <td>从一个设备上下文(DC)创建图形对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsCreateFromHWND.htm">_GDIPlus_GraphicsCreateFromHWND</a></td>
  <td>从窗口句柄创建图形对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsDispose.htm">_GDIPlus_GraphicsDispose</a></td>
  <td>释放一个图形对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsDrawArc.htm">_GDIPlus_GraphicsDrawArc</a></td>
  <td>绘制弧线</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsDrawBezier.htm">_GDIPlus_GraphicsDrawBezier</a></td>
  <td>绘制贝塞尔样条线</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsDrawClosedCurve.htm">_GDIPlus_GraphicsDrawClosedCurve</a></td>
  <td>绘制封闭曲线</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsDrawCurve.htm">_GDIPlus_GraphicsDrawCurve</a></td>
  <td>绘制曲线</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsDrawEllipse.htm">_GDIPlus_GraphicsDrawEllipse</a></td>
  <td>绘制椭圆</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsDrawImage.htm">_GDIPlus_GraphicsDrawImage</a></td>
  <td>绘制图像对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsDrawImageRect.htm">_GDIPlus_GraphicsDrawImageRect</a></td>
  <td>图像绘制到指定的位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsDrawImageRectRect.htm">_GDIPlus_GraphicsDrawImageRectRect</a></td>
  <td>绘制图像对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsDrawLine.htm">_GDIPlus_GraphicsDrawLine</a></td>
  <td>绘制直线</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsDrawPie.htm">_GDIPlus_GraphicsDrawPie</a></td>
  <td>绘制饼图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsDrawPolygon.htm">_GDIPlus_GraphicsDrawPolygon</a></td>
  <td>绘制多边形</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsDrawRect.htm">_GDIPlus_GraphicsDrawRect</a></td>
  <td>绘制一个矩形区域</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsDrawString.htm">_GDIPlus_GraphicsDrawString</a></td>
  <td>绘制字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsDrawStringEx.htm">_GDIPlus_GraphicsDrawStringEx</a></td>
  <td>使用数据结构绘制字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsFillClosedCurve.htm">_GDIPlus_GraphicsFillClosedCurve</a></td>
  <td>填充封闭曲线</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsFillEllipse.htm">_GDIPlus_GraphicsFillEllipse</a></td>
  <td>填充椭圆</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsFillPie.htm">_GDIPlus_GraphicsFillPie</a></td>
  <td>填充饼图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsFillPolygon.htm">_GDIPlus_GraphicsFillPolygon</a></td>
  <td>填充多边形</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsFillRect.htm">_GDIPlus_GraphicsFillRect</a></td>
  <td>填充矩形</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsGetDC.htm">_GDIPlus_GraphicsGetDC</a></td>
  <td>获取图形的设备环境句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsGetSmoothingMode.htm">_GDIPlus_GraphicsGetSmoothingMode</a></td>
  <td>获取图形对象的渲染质量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsMeasureString.htm">_GDIPlus_GraphicsMeasureString</a></td>
  <td>测量字符串尺寸</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsReleaseDC.htm">_GDIPlus_GraphicsReleaseDC</a></td>
  <td>释放图形对象的设备环境</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsSetSmoothingMode.htm">_GDIPlus_GraphicsSetSmoothingMode</a></td>
  <td>设置图形对象绘制质量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_GraphicsSetTransform.htm">_GDIPlus_GraphicsSetTransform</a></td>
  <td>设置图像对象的世界坐标空间</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ImageDispose.htm">_GDIPlus_ImageDispose</a></td>
  <td>释放一个图像对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ImageGetFlags.htm">_GDIPlus_ImageGetFlags</a></td>
  <td>枚举图像的像素数据属性</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ImageGetGraphicsContext.htm">_GDIPlus_ImageGetGraphicsContext</a></td>
  <td>获取图像的图形环境</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ImageGetHeight.htm">_GDIPlus_ImageGetHeight</a></td>
  <td>获取图像高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ImageGetHorizontalResolution.htm">_GDIPlus_ImageGetHorizontalResolution</a></td>
  <td>获取图像水平分辨率的 DPI(每英寸像素)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ImageGetPixelFormat.htm">_GDIPlus_ImageGetPixelFormat</a></td>
  <td>获取图像的像素格式: 每像素位, Alpha 通道, RGB, 灰度, 索引等.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ImageGetRawFormat.htm">_GDIPlus_ImageGetRawFormat</a></td>
  <td>返回文件格式的 GUID 和图像的图像格式名称</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ImageGetType.htm">_GDIPlus_ImageGetType</a></td>
  <td>返回图像类型(位图或图元文件)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ImageGetVerticalResolution.htm">_GDIPlus_ImageGetVerticalResolution</a></td>
  <td>获取图像水平分辨率的 DPI(每英寸像素)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ImageGetWidth.htm">_GDIPlus_ImageGetWidth</a></td>
  <td>获取图像宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ImageLoadFromFile.htm">_GDIPlus_ImageLoadFromFile</a></td>
  <td>创建基于文件的图像对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ImageSaveToFile.htm">_GDIPlus_ImageSaveToFile</a></td>
  <td>将图像保存到文件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ImageSaveToFileEx.htm">_GDIPlus_ImageSaveToFileEx</a></td>
  <td>将图像保存到文件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_MatrixCreate.htm">_GDIPlus_MatrixCreate</a></td>
  <td>创建并初始化矩阵对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_MatrixDispose.htm">_GDIPlus_MatrixDispose</a></td>
  <td>释放矩阵对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_MatrixRotate.htm">_GDIPlus_MatrixRotate</a></td>
  <td>旋转矩阵</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_MatrixScale.htm">_GDIPlus_MatrixScale</a></td>
  <td>缩放矩阵</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_MatrixTranslate.htm">_GDIPlus_MatrixTranslate</a></td>
  <td>移动矩阵</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ParamAdd.htm">_GDIPlus_ParamAdd</a></td>
  <td>添加值到编码器参数列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_ParamInit.htm">_GDIPlus_ParamInit</a></td>
  <td>初始化编码器的参数列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_PenCreate.htm">_GDIPlus_PenCreate</a></td>
  <td>创建画笔对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_PenDispose.htm">_GDIPlus_PenDispose</a></td>
  <td>释放一个画笔对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_PenGetAlignment.htm">_GDIPlus_PenGetAlignment</a></td>
  <td>获取画笔对齐方式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_PenGetColor.htm">_GDIPlus_PenGetColor</a></td>
  <td>得到画笔颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_PenGetCustomEndCap.htm">_GDIPlus_PenGetCustomEndCap</a></td>
  <td>获取自定义画笔终端线帽</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_PenGetDashCap.htm">_GDIPlus_PenGetDashCap</a></td>
  <td>获取短划线线帽样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_PenGetDashStyle.htm">_GDIPlus_PenGetDashStyle</a></td>
  <td>获取短划线样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_PenGetEndCap.htm">_GDIPlus_PenGetEndCap</a></td>
  <td>获取画笔终点线帽</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_PenGetWidth.htm">_GDIPlus_PenGetWidth</a></td>
  <td>Retrieve the width of a pen</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_PenSetAlignment.htm">_GDIPlus_PenSetAlignment</a></td>
  <td>设置画笔对齐方式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_PenSetColor.htm">_GDIPlus_PenSetColor</a></td>
  <td>设置画笔颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_PenSetCustomEndCap.htm">_GDIPlus_PenSetCustomEndCap</a></td>
  <td>自定义画笔终点线帽</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_PenSetDashCap.htm">_GDIPlus_PenSetDashCap</a></td>
  <td>设置短划线线帽样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_PenSetDashStyle.htm">_GDIPlus_PenSetDashStyle</a></td>
  <td>设置画笔短划线样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_PenSetEndCap.htm">_GDIPlus_PenSetEndCap</a></td>
  <td>设置画笔终点线帽</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_PenSetWidth.htm">_GDIPlus_PenSetWidth</a></td>
  <td>设置画笔宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_RectFCreate.htm">_GDIPlus_RectFCreate</a></td>
  <td>创建 $tagGDIPRECTF 结构</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_Shutdown.htm">_GDIPlus_Shutdown</a></td>
  <td>清理微软 Windows GDI+ 使用的资源</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_Startup.htm">_GDIPlus_Startup</a></td>
  <td>初始化微软 Windows GDI+</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_StringFormatCreate.htm">_GDIPlus_StringFormatCreate</a></td>
  <td>创建字符串格式对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_StringFormatDispose.htm">_GDIPlus_StringFormatDispose</a></td>
  <td>释放字符串格式对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GDIPlus_StringFormatSetAlign.htm">_GDIPlus_StringFormatSetAlign</a></td>
  <td>设置字符串格式对象的文本对齐</td>
</tr>
<tr>
  <td><a href="libfunctions/_GetIP.htm">_GetIP</a></td>
  <td>获取网络/计算机的公网IP地址.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlAVI_Close.htm">_GUICtrlAVI_Close</a></td>
  <td>关闭 AVI 影片</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlAVI_Create.htm">_GUICtrlAVI_Create</a></td>
  <td>创建一个 AVI 控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlAVI_Destroy.htm">_GUICtrlAVI_Destroy</a></td>
  <td>删除AVI控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlAVI_IsPlaying.htm">_GUICtrlAVI_IsPlaying</a></td>
  <td>检查一个AVI剪辑是否正在播放</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlAVI_Open.htm">_GUICtrlAVI_Open</a></td>
  <td>在动画控件中打开并播放AVI剪辑</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlAVI_OpenEx.htm">_GUICtrlAVI_OpenEx</a></td>
  <td>打开AVI剪辑并在控件中显示首帧</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlAVI_Play.htm">_GUICtrlAVI_Play</a></td>
  <td>播放AVI影片于动画控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlAVI_Seek.htm">_GUICtrlAVI_Seek</a></td>
  <td>引导控件播放剪辑中的特殊帧</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlAVI_Show.htm">_GUICtrlAVI_Show</a></td>
  <td>像素/隐藏 AVI 控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlAVI_Stop.htm">_GUICtrlAVI_Stop</a></td>
  <td>停止播放一个 AVI 影片</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_Click.htm">_GUICtrlButton_Click</a></td>
  <td>模拟用户点击按钮</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_Create.htm">_GUICtrlButton_Create</a></td>
  <td>创建一个按钮控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_Destroy.htm">_GUICtrlButton_Destroy</a></td>
  <td>删除按钮控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_Enable.htm">_GUICtrlButton_Enable</a></td>
  <td>应用或者禁用鼠标和键盘对指定按钮的输入</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_GetCheck.htm">_GUICtrlButton_GetCheck</a></td>
  <td>得到单选按钮或者复选框选中状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_GetFocus.htm">_GUICtrlButton_GetFocus</a></td>
  <td>赋予按钮一个键盘焦点</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_GetIdealSize.htm">_GUICtrlButton_GetIdealSize</a></td>
  <td>获取按钮适配文本和图像的最佳尺寸</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_GetImage.htm">_GUICtrlButton_GetImage</a></td>
  <td>返回一个关联于按钮的图像(图标或者位图)句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_GetImageList.htm">_GUICtrlButton_GetImageList</a></td>
  <td>获取图像列表对按钮控件分配状态的数组</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_GetNote.htm">_GUICtrlButton_GetNote</a></td>
  <td>获取命令链接按钮关联的注释文字</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_GetNoteLength.htm">_GUICtrlButton_GetNoteLength</a></td>
  <td>获取命令链接按钮提示文本的长度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_GetSplitInfo.htm">_GUICtrlButton_GetSplitInfo</a></td>
  <td>获取分割(split)按钮控件的信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_GetState.htm">_GUICtrlButton_GetState</a></td>
  <td>获取按钮或复选框的状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_GetText.htm">_GUICtrlButton_GetText</a></td>
  <td>返回按钮上的文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_GetTextMargin.htm">_GUICtrlButton_GetTextMargin</a></td>
  <td>获取按钮中文本的页边距</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_SetCheck.htm">_GUICtrlButton_SetCheck</a></td>
  <td>设置单选按钮或复选框的选取状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_SetDontClick.htm">_GUICtrlButton_SetDontClick</a></td>
  <td>设置按钮的 $BST_DONTCLICK 状态标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_SetFocus.htm">_GUICtrlButton_SetFocus</a></td>
  <td>设置键盘焦点到指定的按钮</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_SetImage.htm">_GUICtrlButton_SetImage</a></td>
  <td>设置单选按钮或复选框的选取状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_SetImageList.htm">_GUICtrlButton_SetImageList</a></td>
  <td>分配一个图像列表到一个按钮控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_SetNote.htm">_GUICtrlButton_SetNote</a></td>
  <td>设置命令链接按钮相关的注释文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_SetShield.htm">_GUICtrlButton_SetShield</a></td>
  <td>设置指定按钮或命令链接是否需要系统特定图标(elevated icon)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_SetSize.htm">_GUICtrlButton_SetSize</a></td>
  <td>设置按钮大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_SetSplitInfo.htm">_GUICtrlButton_SetSplitInfo</a></td>
  <td>获取分割按钮控件的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_SetState.htm">_GUICtrlButton_SetState</a></td>
  <td>设置按钮的加亮状态. 加亮状态表明按钮是否突出显示,就像鼠标停留在按钮上.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_SetStyle.htm">_GUICtrlButton_SetStyle</a></td>
  <td>设置按钮样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_SetText.htm">_GUICtrlButton_SetText</a></td>
  <td>设置按钮文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_SetTextMargin.htm">_GUICtrlButton_SetTextMargin</a></td>
  <td>在按钮控件上设置一个空白用于绘制文本.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlButton_Show.htm">_GUICtrlButton_Show</a></td>
  <td>显示/隐藏 按钮</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_AddDir.htm">_GUICtrlComboBoxEx_AddDir</a></td>
  <td>添加目录和文件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_AddString.htm">_GUICtrlComboBoxEx_AddString</a></td>
  <td>添加字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_BeginUpdate.htm">_GUICtrlComboBoxEx_BeginUpdate</a></td>
  <td>启动控件更新直到调用 EndUpdate 函数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_Create.htm">_GUICtrlComboBoxEx_Create</a></td>
  <td>创建扩展组合控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_CreateSolidBitMap.htm">_GUICtrlComboBoxEx_CreateSolidBitMap</a></td>
  <td>创建单色位图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_DeleteString.htm">_GUICtrlComboBoxEx_DeleteString</a></td>
  <td>移除组合控件(Ex)项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_Destroy.htm">_GUICtrlComboBoxEx_Destroy</a></td>
  <td>删除控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_EndUpdate.htm">_GUICtrlComboBoxEx_EndUpdate</a></td>
  <td>结束组合控件更新,关闭 BeginUpdate 函数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_FindStringExact.htm">_GUICtrlComboBoxEx_FindStringExact</a></td>
  <td>搜索字符串(全匹配)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetComboBoxInfo.htm">_GUICtrlComboBoxEx_GetComboBoxInfo</a></td>
  <td>得到关于指定组合框(ComboBox)的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetComboControl.htm">_GUICtrlComboBoxEx_GetComboControl</a></td>
  <td>获取扩展组合控件 ComboBoxEx 句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetCount.htm">_GUICtrlComboBoxEx_GetCount</a></td>
  <td>返回项目数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetCurSel.htm">_GUICtrlComboBoxEx_GetCurSel</a></td>
  <td>检索当前选择项目的索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetDroppedControlRect.htm">_GUICtrlComboBoxEx_GetDroppedControlRect</a></td>
  <td>检索控件中列表框在展开状态时的屏幕坐标,返回数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetDroppedControlRectEx.htm">_GUICtrlComboBoxEx_GetDroppedControlRectEx</a></td>
  <td>检索控件中列表框在展开状态时的屏幕坐标,返回数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetDroppedState.htm">_GUICtrlComboBoxEx_GetDroppedState</a></td>
  <td>确定组合控件中的列表框是否展开</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetDroppedWidth.htm">_GUICtrlComboBoxEx_GetDroppedWidth</a></td>
  <td>Retrieve the minimum allowable width, of the ListBox of a ComboBox</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetEditControl.htm">_GUICtrlComboBoxEx_GetEditControl</a></td>
  <td>获取组合控件 ComboBoxEx 编辑框句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetEditSel.htm">_GUICtrlComboBoxEx_GetEditSel</a></td>
  <td>获取组合控件编辑框当前选项字符的开始和结束位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetEditText.htm">_GUICtrlComboBoxEx_GetEditText</a></td>
  <td>获取组合控件中编辑框的文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetExtendedStyle.htm">_GUICtrlComboBoxEx_GetExtendedStyle</a></td>
  <td>获取组合控件 ComboBoxEx 的扩展样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetExtendedUI.htm">_GUICtrlComboBoxEx_GetExtendedUI</a></td>
  <td>确定组合控件是否为默认或扩展的用户界面</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetImageList.htm">_GUICtrlComboBoxEx_GetImageList</a></td>
  <td>获取分配给扩展组合控件的图像列表句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetItem.htm">_GUICtrlComboBoxEx_GetItem</a></td>
  <td>检索项目的属性</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetItemEx.htm">_GUICtrlComboBoxEx_GetItemEx</a></td>
  <td>返回一些或者所有项目的属性</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetItemHeight.htm">_GUICtrlComboBoxEx_GetItemHeight</a></td>
  <td>获取组合框中项目或选择区段的高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetItemImage.htm">_GUICtrlComboBoxEx_GetItemImage</a></td>
  <td>检索项目的图标索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetItemIndent.htm">_GUICtrlComboBoxEx_GetItemIndent</a></td>
  <td>检索项目缩进的图像宽度数.一个缩进量等于一个图像宽度.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetItemOverlayImage.htm">_GUICtrlComboBoxEx_GetItemOverlayImage</a></td>
  <td>获取项目覆盖状态图像的索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetItemParam.htm">_GUICtrlComboBoxEx_GetItemParam</a></td>
  <td>返回一个项目的应用程序定义的特殊值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetItemSelectedImage.htm">_GUICtrlComboBoxEx_GetItemSelectedImage</a></td>
  <td>检索项目选定状态的图像图标索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetItemText.htm">_GUICtrlComboBoxEx_GetItemText</a></td>
  <td>检索组合控件列表框项目字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetItemTextLen.htm">_GUICtrlComboBoxEx_GetItemTextLen</a></td>
  <td>获取组合控件列表框项目字符串长度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetList.htm">_GUICtrlComboBoxEx_GetList</a></td>
  <td>检索组合控件列表框全部项目,返回项目文本字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetListArray.htm">_GUICtrlComboBoxEx_GetListArray</a></td>
  <td>检索组合控件列表框全部项目,返回包含项目字符串的数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetLocale.htm">_GUICtrlComboBoxEx_GetLocale</a></td>
  <td>获取当前地区</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetLocaleCountry.htm">_GUICtrlComboBoxEx_GetLocaleCountry</a></td>
  <td>检索当前国家代码.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetLocaleLang.htm">_GUICtrlComboBoxEx_GetLocaleLang</a></td>
  <td>检索当前语言标识符</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetLocalePrimLang.htm">_GUICtrlComboBoxEx_GetLocalePrimLang</a></td>
  <td>从语言 ID 中提取主语言 ID</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetLocaleSubLang.htm">_GUICtrlComboBoxEx_GetLocaleSubLang</a></td>
  <td>从语言 ID 提取子语言 ID</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetMinVisible.htm">_GUICtrlComboBoxEx_GetMinVisible</a></td>
  <td>检索组合控件下拉列表中可见项目的最小数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetTopIndex.htm">_GUICtrlComboBoxEx_GetTopIndex</a></td>
  <td>获取组合控件列表框中第一个可见项的 0 基索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_GetUnicode.htm">_GUICtrlComboBoxEx_GetUnicode</a></td>
  <td>检索使用 Unicode 的控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_InitStorage.htm">_GUICtrlComboBoxEx_InitStorage</a></td>
  <td>分配用于存储列表框项目的内存</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_InsertString.htm">_GUICtrlComboBoxEx_InsertString</a></td>
  <td>插入新项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_LimitText.htm">_GUICtrlComboBoxEx_LimitText</a></td>
  <td>限制组合控件编辑框文本输入长度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_ReplaceEditSel.htm">_GUICtrlComboBoxEx_ReplaceEditSel</a></td>
  <td>替换编辑框中选定文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_ResetContent.htm">_GUICtrlComboBoxEx_ResetContent</a></td>
  <td>移除所有项目.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_SetCurSel.htm">_GUICtrlComboBoxEx_SetCurSel</a></td>
  <td>在组合控件列表框中选择字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_SetDroppedWidth.htm">_GUICtrlComboBoxEx_SetDroppedWidth</a></td>
  <td>设置列表框最大允许像素宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_SetEditSel.htm">_GUICtrlComboBoxEx_SetEditSel</a></td>
  <td>选择编辑框字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_SetEditText.htm">_GUICtrlComboBoxEx_SetEditText</a></td>
  <td>设置ComboBox控件中的编辑(edit)控件的文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_SetExtendedStyle.htm">_GUICtrlComboBoxEx_SetExtendedStyle</a></td>
  <td>设置组合控件(Ex)的扩展样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_SetExtendedUI.htm">_GUICtrlComboBoxEx_SetExtendedUI</a></td>
  <td>选择默认或扩展的用户界面</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_SetImageList.htm">_GUICtrlComboBoxEx_SetImageList</a></td>
  <td>设置组合控件(Ex)图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_SetItem.htm">_GUICtrlComboBoxEx_SetItem</a></td>
  <td>设置部分或全部项目的属性(使用参数)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_SetItemEx.htm">_GUICtrlComboBoxEx_SetItemEx</a></td>
  <td>Sets some or all of a item's attributes</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_SetItemHeight.htm">_GUICtrlComboBoxEx_SetItemHeight</a></td>
  <td>设置列表框项目或选择区段的高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_SetItemImage.htm">_GUICtrlComboBoxEx_SetItemImage</a></td>
  <td>设置项目图标在图像列表中的索引.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_SetItemIndent.htm">_GUICtrlComboBoxEx_SetItemIndent</a></td>
  <td>设置项目缩进图像宽度数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_SetItemOverlayImage.htm">_GUICtrlComboBoxEx_SetItemOverlayImage</a></td>
  <td>设置项目覆盖图标在图像列表中的索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_SetItemParam.htm">_GUICtrlComboBoxEx_SetItemParam</a></td>
  <td>设置项目的具体值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_SetItemSelectedImage.htm">_GUICtrlComboBoxEx_SetItemSelectedImage</a></td>
  <td>设置项目选中状态图标在图像列表中的索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_SetMinVisible.htm">_GUICtrlComboBoxEx_SetMinVisible</a></td>
  <td>设置组合控件下拉列表中可见项目的最小数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_SetTopIndex.htm">_GUICtrlComboBoxEx_SetTopIndex</a></td>
  <td>确保特定项目在组合控件列表框中可见</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_SetUnicode.htm">_GUICtrlComboBoxEx_SetUnicode</a></td>
  <td>设置控件使用 Unicode</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBoxEx_ShowDropDown.htm">_GUICtrlComboBoxEx_ShowDropDown</a></td>
  <td>显示或隐藏列表框</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_AddDir.htm">_GUICtrlComboBox_AddDir</a></td>
  <td>添加目录与文件的名称</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_AddString.htm">_GUICtrlComboBox_AddString</a></td>
  <td>添加一个字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_AutoComplete.htm">_GUICtrlComboBox_AutoComplete</a></td>
  <td>使 ComboBox 编辑框拥有自动完成功能.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_BeginUpdate.htm">_GUICtrlComboBox_BeginUpdate</a></td>
  <td>启动控件更新直到调用 EndUpdate 函数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_Create.htm">_GUICtrlComboBox_Create</a></td>
  <td>创建一个组合对话框控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_DeleteString.htm">_GUICtrlComboBox_DeleteString</a></td>
  <td>删除一个字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_Destroy.htm">_GUICtrlComboBox_Destroy</a></td>
  <td>删除控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_EndUpdate.htm">_GUICtrlComboBox_EndUpdate</a></td>
  <td>Enables screen repainting that was turned off with the BeginUpdate function</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_FindString.htm">_GUICtrlComboBox_FindString</a></td>
  <td>搜索字符串(部分匹配)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_FindStringExact.htm">_GUICtrlComboBox_FindStringExact</a></td>
  <td>搜索字符串(完全匹配)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetComboBoxInfo.htm">_GUICtrlComboBox_GetComboBoxInfo</a></td>
  <td>得到关于指定组合框(ComboBox)的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetCount.htm">_GUICtrlComboBox_GetCount</a></td>
  <td>返回项目数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetCueBanner.htm">_GUICtrlComboBox_GetCueBanner</a></td>
  <td>获取编辑框的文本显示提示标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetCurSel.htm">_GUICtrlComboBox_GetCurSel</a></td>
  <td>返回当前选择项目索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetDroppedControlRect.htm">_GUICtrlComboBox_GetDroppedControlRect</a></td>
  <td>检索控件中列表框在展开状态时的屏幕坐标,返回数据数组</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetDroppedControlRectEx.htm">_GUICtrlComboBox_GetDroppedControlRectEx</a></td>
  <td>检索控件中列表框在展开状态时的屏幕坐标,返回数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetDroppedState.htm">_GUICtrlComboBox_GetDroppedState</a></td>
  <td>确定组合控件中的列表框是否展开</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetDroppedWidth.htm">_GUICtrlComboBox_GetDroppedWidth</a></td>
  <td>检索组合控件中列表框最小允许宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetEditSel.htm">_GUICtrlComboBox_GetEditSel</a></td>
  <td>获取组合控件编辑框当前选项字符的开始和结束位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetEditText.htm">_GUICtrlComboBox_GetEditText</a></td>
  <td>获取组合控件中编辑框的文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetExtendedUI.htm">_GUICtrlComboBox_GetExtendedUI</a></td>
  <td>确定组合控件是否为默认或扩展的用户界面</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetHorizontalExtent.htm">_GUICtrlComboBox_GetHorizontalExtent</a></td>
  <td>获取列表框水平滚动的象素宽度.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetItemHeight.htm">_GUICtrlComboBox_GetItemHeight</a></td>
  <td>获取组合框中项目或选择区段的高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetLBText.htm">_GUICtrlComboBox_GetLBText</a></td>
  <td>检索组合控件列表框项目字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetLBTextLen.htm">_GUICtrlComboBox_GetLBTextLen</a></td>
  <td>获取组合控件列表框项目字符串长度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetList.htm">_GUICtrlComboBox_GetList</a></td>
  <td>检索组合控件列表框全部项目,返回项目文本字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetListArray.htm">_GUICtrlComboBox_GetListArray</a></td>
  <td>检索组合控件列表框全部项目,返回项目文本数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetLocale.htm">_GUICtrlComboBox_GetLocale</a></td>
  <td>获取当前地区</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetLocaleCountry.htm">_GUICtrlComboBox_GetLocaleCountry</a></td>
  <td>返回当前国家代码.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetLocaleLang.htm">_GUICtrlComboBox_GetLocaleLang</a></td>
  <td>检索当前语言标识符</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetLocalePrimLang.htm">_GUICtrlComboBox_GetLocalePrimLang</a></td>
  <td>从语言 ID 中提取主语言 ID</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetLocaleSubLang.htm">_GUICtrlComboBox_GetLocaleSubLang</a></td>
  <td>从语言 ID 提取子语言 ID</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetMinVisible.htm">_GUICtrlComboBox_GetMinVisible</a></td>
  <td>检索组合控件下拉列表中可见项目的最小数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_GetTopIndex.htm">_GUICtrlComboBox_GetTopIndex</a></td>
  <td>获取组合控件列表框中第一个可见项的 0 基索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_InitStorage.htm">_GUICtrlComboBox_InitStorage</a></td>
  <td>分配用于存储列表框项目的内存</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_InsertString.htm">_GUICtrlComboBox_InsertString</a></td>
  <td>插入字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_LimitText.htm">_GUICtrlComboBox_LimitText</a></td>
  <td>限制组合控件编辑框文本输入长度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_ReplaceEditSel.htm">_GUICtrlComboBox_ReplaceEditSel</a></td>
  <td>替换编辑框中选定文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_ResetContent.htm">_GUICtrlComboBox_ResetContent</a></td>
  <td>移除组合控件编辑框、列表框全部项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_SelectString.htm">_GUICtrlComboBox_SelectString</a></td>
  <td>搜索列表框中指定开头字符的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_SetCueBanner.htm">_GUICtrlComboBox_SetCueBanner</a></td>
  <td>设置编辑框的显示提示标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_SetCurSel.htm">_GUICtrlComboBox_SetCurSel</a></td>
  <td>在组合对话框列表中选中一个字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_SetDroppedWidth.htm">_GUICtrlComboBox_SetDroppedWidth</a></td>
  <td>设置列表框最大允许像素宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_SetEditSel.htm">_GUICtrlComboBox_SetEditSel</a></td>
  <td>选择编辑框字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_SetEditText.htm">_GUICtrlComboBox_SetEditText</a></td>
  <td>设置编辑框文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_SetExtendedUI.htm">_GUICtrlComboBox_SetExtendedUI</a></td>
  <td>选择默认或扩展的用户界面</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_SetHorizontalExtent.htm">_GUICtrlComboBox_SetHorizontalExtent</a></td>
  <td>为带有水平滚动条的列表框(ListBox)设置宽度,单位为像素.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_SetItemHeight.htm">_GUICtrlComboBox_SetItemHeight</a></td>
  <td>设置列表框项目或选择区段的高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_SetMinVisible.htm">_GUICtrlComboBox_SetMinVisible</a></td>
  <td>设置组合控件下拉列表中可见项目的最小数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_SetTopIndex.htm">_GUICtrlComboBox_SetTopIndex</a></td>
  <td>确保特定项目在组合控件列表框中可见</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlComboBox_ShowDropDown.htm">_GUICtrlComboBox_ShowDropDown</a></td>
  <td>显示或隐藏列表框</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlDTP_Create.htm">_GUICtrlDTP_Create</a></td>
  <td>创建日期/时间选择器(DTP)控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlDTP_Destroy.htm">_GUICtrlDTP_Destroy</a></td>
  <td>删除日期时间选取器控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlDTP_GetMCColor.htm">_GUICtrlDTP_GetMCColor</a></td>
  <td>检索指定的颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlDTP_GetMCFont.htm">_GUICtrlDTP_GetMCFont</a></td>
  <td>返回月历控件字体句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlDTP_GetMonthCal.htm">_GUICtrlDTP_GetMonthCal</a></td>
  <td>返回子月历控件句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlDTP_GetRange.htm">_GUICtrlDTP_GetRange</a></td>
  <td>检索当前系统允许的最低和最高时间值,返回相关数据的数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlDTP_GetRangeEx.htm">_GUICtrlDTP_GetRangeEx</a></td>
  <td>检索当前系统允许的最低和最高时间值,返回相关值的数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlDTP_GetSystemTime.htm">_GUICtrlDTP_GetSystemTime</a></td>
  <td>检索当前选定的日期/时间,返回相关值的数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlDTP_GetSystemTimeEx.htm">_GUICtrlDTP_GetSystemTimeEx</a></td>
  <td>检索当前选定的日期/时间,返回相关值的数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlDTP_SetFormat.htm">_GUICtrlDTP_SetFormat</a></td>
  <td>设置日期/时间显示格式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlDTP_SetMCColor.htm">_GUICtrlDTP_SetMCColor</a></td>
  <td>设置月(日)历给定部分的颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlDTP_SetMCFont.htm">_GUICtrlDTP_SetMCFont</a></td>
  <td>设置月(日)历字体</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlDTP_SetRange.htm">_GUICtrlDTP_SetRange</a></td>
  <td>设置系统最小和最大允许时间,使用数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlDTP_SetRangeEx.htm">_GUICtrlDTP_SetRangeEx</a></td>
  <td>设置系统最小和最大允许时间,使用数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlDTP_SetSystemTime.htm">_GUICtrlDTP_SetSystemTime</a></td>
  <td>设置当前选定的日期和时间,使用数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlDTP_SetSystemTimeEx.htm">_GUICtrlDTP_SetSystemTimeEx</a></td>
  <td>设置当前选定的日期和时间,使用数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_AppendText.htm">_GUICtrlEdit_AppendText</a></td>
  <td>展开文本.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_BeginUpdate.htm">_GUICtrlEdit_BeginUpdate</a></td>
  <td>开始控件更新,直到 EndUpdate 函数被调用.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_CanUndo.htm">_GUICtrlEdit_CanUndo</a></td>
  <td>确定编辑控件的撤消队列是否有任何操作.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_CharFromPos.htm">_GUICtrlEdit_CharFromPos</a></td>
  <td>检索距客户区指定点最近的字符信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_Create.htm">_GUICtrlEdit_Create</a></td>
  <td>创建一个编辑框控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_Destroy.htm">_GUICtrlEdit_Destroy</a></td>
  <td>删除编辑控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_EmptyUndoBuffer.htm">_GUICtrlEdit_EmptyUndoBuffer</a></td>
  <td>重置编辑控件撤消标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_EndUpdate.htm">_GUICtrlEdit_EndUpdate</a></td>
  <td>结束更新并关闭 BeginUpdate 函数.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_Find.htm">_GUICtrlEdit_Find</a></td>
  <td>启动查找对话框</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_FmtLines.htm">_GUICtrlEdit_FmtLines</a></td>
  <td>确定编辑控件是否包括软换行字符</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_GetFirstVisibleLine.htm">_GUICtrlEdit_GetFirstVisibleLine</a></td>
  <td>检索多行编辑控件顶部可见行的 0 基索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_GetLimitText.htm">_GUICtrlEdit_GetLimitText</a></td>
  <td>获取编辑控件文本限制</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_GetLine.htm">_GUICtrlEdit_GetLine</a></td>
  <td>检索编辑控件文本行</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_GetLineCount.htm">_GUICtrlEdit_GetLineCount</a></td>
  <td>检索行数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_GetMargins.htm">_GUICtrlEdit_GetMargins</a></td>
  <td>检索左,右边距的宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_GetModify.htm">_GUICtrlEdit_GetModify</a></td>
  <td>检索编辑控件的修改标志状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_GetPasswordChar.htm">_GUICtrlEdit_GetPasswordChar</a></td>
  <td>获取编辑控件显示当用户输入文本的密码字符</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_GetRECT.htm">_GUICtrlEdit_GetRECT</a></td>
  <td>检索编辑控件的格式化矩形,返回坐标值数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_GetRECTEx.htm">_GUICtrlEdit_GetRECTEx</a></td>
  <td>检索编辑控件的格式化矩形,返回坐标值数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_GetSel.htm">_GUICtrlEdit_GetSel</a></td>
  <td>检索当前选择字符的开始和结束位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_GetText.htm">_GUICtrlEdit_GetText</a></td>
  <td>得到编辑控件文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_GetTextLen.htm">_GUICtrlEdit_GetTextLen</a></td>
  <td>得到编辑(Edit)控件中所有文本的长度.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_HideBalloonTip.htm">_GUICtrlEdit_HideBalloonTip</a></td>
  <td>隐藏编辑控件关联的气球提示</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_InsertText.htm">_GUICtrlEdit_InsertText</a></td>
  <td>插入文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_LineFromChar.htm">_GUICtrlEdit_LineFromChar</a></td>
  <td>检索指定索引字符所在行的索引.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_LineIndex.htm">_GUICtrlEdit_LineIndex</a></td>
  <td>检索指定行第一个字符的索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_LineLength.htm">_GUICtrlEdit_LineLength</a></td>
  <td>检索行字符长度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_LineScroll.htm">_GUICtrlEdit_LineScroll</a></td>
  <td>滚动文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_PosFromChar.htm">_GUICtrlEdit_PosFromChar</a></td>
  <td>检索编辑控件客户区指定字符的坐标</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_ReplaceSel.htm">_GUICtrlEdit_ReplaceSel</a></td>
  <td>替换当前的选择</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_Scroll.htm">_GUICtrlEdit_Scroll</a></td>
  <td>垂直滚动文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_SetLimitText.htm">_GUICtrlEdit_SetLimitText</a></td>
  <td>设置文本限制值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_SetMargins.htm">_GUICtrlEdit_SetMargins</a></td>
  <td>设置左、右边距的宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_SetModify.htm">_GUICtrlEdit_SetModify</a></td>
  <td>设置或清除修改标志.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_SetPasswordChar.htm">_GUICtrlEdit_SetPasswordChar</a></td>
  <td>设置或清除编辑控件的密码字符</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_SetReadOnly.htm">_GUICtrlEdit_SetReadOnly</a></td>
  <td>设置或删除只读样式 ($ES_READONLY)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_SetRECT.htm">_GUICtrlEdit_SetRECT</a></td>
  <td>设置多行编辑控件的矩形格式,使用坐标值数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_SetRECTEx.htm">_GUICtrlEdit_SetRECTEx</a></td>
  <td>设置多行编辑控件的矩形格式,使用坐标值数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_SetRECTNP.htm">_GUICtrlEdit_SetRECTNP</a></td>
  <td>设置多行编辑控件的矩形格式,使用坐标值数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_SetRectNPEx.htm">_GUICtrlEdit_SetRectNPEx</a></td>
  <td>设置多行编辑控件的矩形格式,使用坐标值数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_SetSel.htm">_GUICtrlEdit_SetSel</a></td>
  <td>选择字符中的一个范围(选择一段字符串)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_SetTabStops.htm">_GUICtrlEdit_SetTabStops</a></td>
  <td>设置制表位</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_SetText.htm">_GUICtrlEdit_SetText</a></td>
  <td>设置控件文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_ShowBalloonTip.htm">_GUICtrlEdit_ShowBalloonTip</a></td>
  <td>显示编辑控件关联的气球提示</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlEdit_Undo.htm">_GUICtrlEdit_Undo</a></td>
  <td>取消编辑控件撤销队列中的最后操作</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_AddItem.htm">_GUICtrlHeader_AddItem</a></td>
  <td>添加标题项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_ClearFilter.htm">_GUICtrlHeader_ClearFilter</a></td>
  <td>清除筛选</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_ClearFilterAll.htm">_GUICtrlHeader_ClearFilterAll</a></td>
  <td>清除所有筛选</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_Create.htm">_GUICtrlHeader_Create</a></td>
  <td>创建标题控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_CreateDragImage.htm">_GUICtrlHeader_CreateDragImage</a></td>
  <td>创建半透明图像作为项目拖动图像</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_DeleteItem.htm">_GUICtrlHeader_DeleteItem</a></td>
  <td>删除标题项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_Destroy.htm">_GUICtrlHeader_Destroy</a></td>
  <td>删除标题控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_EditFilter.htm">_GUICtrlHeader_EditFilter</a></td>
  <td>启动编辑指定的过滤器</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_GetBitmapMargin.htm">_GUICtrlHeader_GetBitmapMargin</a></td>
  <td>检索位图边距宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_GetImageList.htm">_GUICtrlHeader_GetImageList</a></td>
  <td>检索图像列表句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_GetItem.htm">_GUICtrlHeader_GetItem</a></td>
  <td>检索项目信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_GetItemAlign.htm">_GUICtrlHeader_GetItemAlign</a></td>
  <td>检索标题项目文本对齐方式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_GetItemBitmap.htm">_GUICtrlHeader_GetItemBitmap</a></td>
  <td>检索项目位图句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_GetItemCount.htm">_GUICtrlHeader_GetItemCount</a></td>
  <td>返回项目数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_GetItemDisplay.htm">_GUICtrlHeader_GetItemDisplay</a></td>
  <td>返回项目显示信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_GetItemFlags.htm">_GUICtrlHeader_GetItemFlags</a></td>
  <td>返回项目标志信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_GetItemFormat.htm">_GUICtrlHeader_GetItemFormat</a></td>
  <td>返回项目格式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_GetItemImage.htm">_GUICtrlHeader_GetItemImage</a></td>
  <td>检索图像列表中的图像索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_GetItemOrder.htm">_GUICtrlHeader_GetItemOrder</a></td>
  <td>检索项目出现的次序</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_GetItemParam.htm">_GUICtrlHeader_GetItemParam</a></td>
  <td>检索项目参数值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_GetItemRect.htm">_GUICtrlHeader_GetItemRect</a></td>
  <td>检索给定项目的边界矩形,返回矩形数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_GetItemRectEx.htm">_GUICtrlHeader_GetItemRectEx</a></td>
  <td>检索给定项目的边界矩形,返回矩形数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_GetItemText.htm">_GUICtrlHeader_GetItemText</a></td>
  <td>返回一个项目文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_GetItemWidth.htm">_GUICtrlHeader_GetItemWidth</a></td>
  <td>检索项目的宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_GetOrderArray.htm">_GUICtrlHeader_GetOrderArray</a></td>
  <td>检索当前项目从左到右的顺序</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_GetUnicodeFormat.htm">_GUICtrlHeader_GetUnicodeFormat</a></td>
  <td>检索控件的 Unicode 字符格式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_HitTest.htm">_GUICtrlHeader_HitTest</a></td>
  <td>检索指定点的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_InsertItem.htm">_GUICtrlHeader_InsertItem</a></td>
  <td>插入新的标题项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_Layout.htm">_GUICtrlHeader_Layout</a></td>
  <td>返回控件正确大小与坐标</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_OrderToIndex.htm">_GUICtrlHeader_OrderToIndex</a></td>
  <td>检索项目基于其顺序的索引值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_SetBitmapMargin.htm">_GUICtrlHeader_SetBitmapMargin</a></td>
  <td>指定项目中位图边距的象素宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_SetFilterChangeTimeout.htm">_GUICtrlHeader_SetFilterChangeTimeout</a></td>
  <td>设置过滤器变动超时间隔</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_SetHotDivider.htm">_GUICtrlHeader_SetHotDivider</a></td>
  <td>改变热分隔符的颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_SetImageList.htm">_GUICtrlHeader_SetImageList</a></td>
  <td>分配图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_SetItem.htm">_GUICtrlHeader_SetItem</a></td>
  <td>设置项目信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_SetItemAlign.htm">_GUICtrlHeader_SetItemAlign</a></td>
  <td>设置项目文本对齐方式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_SetItemBitmap.htm">_GUICtrlHeader_SetItemBitmap</a></td>
  <td>设置项目位图句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_SetItemDisplay.htm">_GUICtrlHeader_SetItemDisplay</a></td>
  <td>返回项目显示信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_SetItemFlags.htm">_GUICtrlHeader_SetItemFlags</a></td>
  <td>返回项目标志信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_SetItemFormat.htm">_GUICtrlHeader_SetItemFormat</a></td>
  <td>设置项目格式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_SetItemImage.htm">_GUICtrlHeader_SetItemImage</a></td>
  <td>设置图像列表内图像的索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_SetItemOrder.htm">_GUICtrlHeader_SetItemOrder</a></td>
  <td>设置项目出现的顺序</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_SetItemParam.htm">_GUICtrlHeader_SetItemParam</a></td>
  <td>设置项目参数值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_SetItemText.htm">_GUICtrlHeader_SetItemText</a></td>
  <td>设置标题项目文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_SetItemWidth.htm">_GUICtrlHeader_SetItemWidth</a></td>
  <td>设置项目的宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_SetOrderArray.htm">_GUICtrlHeader_SetOrderArray</a></td>
  <td>设置当前项目从左到右的顺序</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlHeader_SetUnicodeFormat.htm">_GUICtrlHeader_SetUnicodeFormat</a></td>
  <td>设置控件的 Unicode 字符格式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlIpAddress_ClearAddress.htm">_GUICtrlIpAddress_ClearAddress</a></td>
  <td>清除IP地址控件内容.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlIpAddress_Create.htm">_GUICtrlIpAddress_Create</a></td>
  <td>创建一个GUI IP地址控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlIpAddress_Destroy.htm">_GUICtrlIpAddress_Destroy</a></td>
  <td>删除控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlIpAddress_Get.htm">_GUICtrlIpAddress_Get</a></td>
  <td>从IP地址控件返回一个IP地址</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlIpAddress_GetArray.htm">_GUICtrlIpAddress_GetArray</a></td>
  <td>检索控件内的 IP 地址,返回地址字段数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlIpAddress_GetEx.htm">_GUICtrlIpAddress_GetEx</a></td>
  <td>检索控件内的 IP 地址,返回地址数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlIpAddress_IsBlank.htm">_GUICtrlIpAddress_IsBlank</a></td>
  <td>检测IP地址控件的所有段都不为空</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlIpAddress_Set.htm">_GUICtrlIpAddress_Set</a></td>
  <td>设置IP地址控件中的IP地址</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlIpAddress_SetArray.htm">_GUICtrlIpAddress_SetArray</a></td>
  <td>设置IP地址控件中的地址</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlIpAddress_SetEx.htm">_GUICtrlIpAddress_SetEx</a></td>
  <td>设置 IP 地址,使用地址数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlIpAddress_SetFocus.htm">_GUICtrlIpAddress_SetFocus</a></td>
  <td>设置键盘焦点到IP地址控件中指定的字段.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlIpAddress_SetFont.htm">_GUICtrlIpAddress_SetFont</a></td>
  <td>设置IP地址控件字体</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlIpAddress_SetRange.htm">_GUICtrlIpAddress_SetRange</a></td>
  <td>设置 IP 地址指定字段的有效范围</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlIpAddress_ShowHide.htm">_GUICtrlIpAddress_ShowHide</a></td>
  <td>显示/隐藏 IP 地址控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_AddFile.htm">_GUICtrlListBox_AddFile</a></td>
  <td>添加文件到列表控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_AddString.htm">_GUICtrlListBox_AddString</a></td>
  <td>添加字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_BeginUpdate.htm">_GUICtrlListBox_BeginUpdate</a></td>
  <td>开始控件更新,直到 EndUpdate 函数被调用.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_ClickItem.htm">_GUICtrlListBox_ClickItem</a></td>
  <td>点击一个项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_Create.htm">_GUICtrlListBox_Create</a></td>
  <td>创建 ListBox (列表框)控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_DeleteString.htm">_GUICtrlListBox_DeleteString</a></td>
  <td>删除字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_Destroy.htm">_GUICtrlListBox_Destroy</a></td>
  <td>删除字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_Dir.htm">_GUICtrlListBox_Dir</a></td>
  <td>添加目录和文件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_EndUpdate.htm">_GUICtrlListBox_EndUpdate</a></td>
  <td>关闭由 BeginUpdate 函数启用的屏幕重绘功能.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_FindInText.htm">_GUICtrlListBox_FindInText</a></td>
  <td>搜索包含指定文本的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_FindString.htm">_GUICtrlListBox_FindString</a></td>
  <td>查找字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetAnchorIndex.htm">_GUICtrlListBox_GetAnchorIndex</a></td>
  <td>检索锚(固定)项目的索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetCaretIndex.htm">_GUICtrlListBox_GetCaretIndex</a></td>
  <td>返回焦点项目的索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetCount.htm">_GUICtrlListBox_GetCount</a></td>
  <td>返回项目数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetCurSel.htm">_GUICtrlListBox_GetCurSel</a></td>
  <td>检索当前选定项的索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetHorizontalExtent.htm">_GUICtrlListBox_GetHorizontalExtent</a></td>
  <td>检索列表框的滚动宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetItemData.htm">_GUICtrlListBox_GetItemData</a></td>
  <td>检索应用程序定义的项目关联值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetItemHeight.htm">_GUICtrlListBox_GetItemHeight</a></td>
  <td>返回项目的高度.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetItemRect.htm">_GUICtrlListBox_GetItemRect</a></td>
  <td>检索项目的矩形范围,返回数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetItemRectEx.htm">_GUICtrlListBox_GetItemRectEx</a></td>
  <td>检索项目的矩形范围,返回数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetListBoxInfo.htm">_GUICtrlListBox_GetListBoxInfo</a></td>
  <td>检索列表框中每列项目数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetLocale.htm">_GUICtrlListBox_GetLocale</a></td>
  <td>检索当前地区代码</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetLocaleCountry.htm">_GUICtrlListBox_GetLocaleCountry</a></td>
  <td>返回当前国家代码</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetLocaleLang.htm">_GUICtrlListBox_GetLocaleLang</a></td>
  <td>返回当前语言标识符(ID)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetLocalePrimLang.htm">_GUICtrlListBox_GetLocalePrimLang</a></td>
  <td>从语言ID释放(解压缩)主语言ID.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetLocaleSubLang.htm">_GUICtrlListBox_GetLocaleSubLang</a></td>
  <td>从语言ID释放(解压缩)一个子语言ID</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetSel.htm">_GUICtrlListBox_GetSel</a></td>
  <td>检索项目的选择状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetSelCount.htm">_GUICtrlListBox_GetSelCount</a></td>
  <td>返回已选择项目的总数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetSelItems.htm">_GUICtrlListBox_GetSelItems</a></td>
  <td>填充选定项的数组缓冲区</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetSelItemsText.htm">_GUICtrlListBox_GetSelItemsText</a></td>
  <td>检索选定项的文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetText.htm">_GUICtrlListBox_GetText</a></td>
  <td>返回指定索引的项目(字符串)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetTextLen.htm">_GUICtrlListBox_GetTextLen</a></td>
  <td>得到列表框中字符串长度.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_GetTopIndex.htm">_GUICtrlListBox_GetTopIndex</a></td>
  <td>返回列表中第一个可见项目的所在的索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_InitStorage.htm">_GUICtrlListBox_InitStorage</a></td>
  <td>分配存储项目的内存</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_InsertString.htm">_GUICtrlListBox_InsertString</a></td>
  <td>在列表中插入字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_ItemFromPoint.htm">_GUICtrlListBox_ItemFromPoint</a></td>
  <td>检索距指定点最近项目的 0 基索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_ReplaceString.htm">_GUICtrlListBox_ReplaceString</a></td>
  <td>替换项目文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_ResetContent.htm">_GUICtrlListBox_ResetContent</a></td>
  <td>从列表框中移除所有项目.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_SelectString.htm">_GUICtrlListBox_SelectString</a></td>
  <td>搜索项目文本以指定字符串开始的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_SelItemRange.htm">_GUICtrlListBox_SelItemRange</a></td>
  <td>在一个多选择列表框中选择一或多个连续的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_SelItemRangeEx.htm">_GUICtrlListBox_SelItemRangeEx</a></td>
  <td>在一个多选择列表框中选择一或多个连续的项目,兼有删除选中项功能.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_SetAnchorIndex.htm">_GUICtrlListBox_SetAnchorIndex</a></td>
  <td>设置锚项目, 多项选择从该项目开始.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_SetCaretIndex.htm">_GUICtrlListBox_SetCaretIndex</a></td>
  <td>设置多选择列表框指定索引项目的焦点矩形</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_SetColumnWidth.htm">_GUICtrlListBox_SetColumnWidth</a></td>
  <td>设置全部列的像素宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_SetCurSel.htm">_GUICtrlListBox_SetCurSel</a></td>
  <td>选择字符串,如有必要,则滚动到控件可见区.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_SetHorizontalExtent.htm">_GUICtrlListBox_SetHorizontalExtent</a></td>
  <td>设置列表框水平滚动的像素宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_SetItemData.htm">_GUICtrlListBox_SetItemData</a></td>
  <td>设置指定项目的关联值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_SetItemHeight.htm">_GUICtrlListBox_SetItemHeight</a></td>
  <td>设置项目的像素高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_SetLocale.htm">_GUICtrlListBox_SetLocale</a></td>
  <td>当前地区设置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_SetSel.htm">_GUICtrlListBox_SetSel</a></td>
  <td>选择多选择列表框中的字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_SetTabStops.htm">_GUICtrlListBox_SetTabStops</a></td>
  <td>设置制表符停止位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_SetTopIndex.htm">_GUICtrlListBox_SetTopIndex</a></td>
  <td>确保特定项目在列表框可见视图中.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_Sort.htm">_GUICtrlListBox_Sort</a></td>
  <td>重新排序列表框.控件需具有 $LBS_SORT 样式.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_SwapString.htm">_GUICtrlListBox_SwapString</a></td>
  <td>互换两个指定索引的项目文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListBox_UpdateHScroll.htm">_GUICtrlListBox_UpdateHScroll</a></td>
  <td>根据最长的字符串更新水平滚动条.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_AddArray.htm">_GUICtrlListView_AddArray</a></td>
  <td>从一个数字添加项目到控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_AddColumn.htm">_GUICtrlListView_AddColumn</a></td>
  <td>添加列</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_AddItem.htm">_GUICtrlListView_AddItem</a></td>
  <td>添加项目到列表的末尾</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_AddSubItem.htm">_GUICtrlListView_AddSubItem</a></td>
  <td>添加子项</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_ApproximateViewHeight.htm">_GUICtrlListView_ApproximateViewHeight</a></td>
  <td>计算显示给定数量项目所需的近似高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_ApproximateViewRect.htm">_GUICtrlListView_ApproximateViewRect</a></td>
  <td>计算显示给定数量项目所需的近似大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_ApproximateViewWidth.htm">_GUICtrlListView_ApproximateViewWidth</a></td>
  <td>计算用以显示给定数量项目所需的近似宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_Arrange.htm">_GUICtrlListView_Arrange</a></td>
  <td>排列视图项目图标</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_BeginUpdate.htm">_GUICtrlListView_BeginUpdate</a></td>
  <td>开始控件更新,直到 EndUpdate 函数被调用.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_CancelEditLabel.htm">_GUICtrlListView_CancelEditLabel</a></td>
  <td>取消项目的文本编辑操作</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_ClickItem.htm">_GUICtrlListView_ClickItem</a></td>
  <td>点击项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_CopyItems.htm">_GUICtrlListView_CopyItems</a></td>
  <td>在两个 list-view 空间之间复制项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_Create.htm">_GUICtrlListView_Create</a></td>
  <td>创建一个列表查看(ListView)控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_CreateDragImage.htm">_GUICtrlListView_CreateDragImage</a></td>
  <td>为指定项目创建拖动图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_CreateSolidBitMap.htm">_GUICtrlListView_CreateSolidBitMap</a></td>
  <td>创建单色位图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_DeleteAllItems.htm">_GUICtrlListView_DeleteAllItems</a></td>
  <td>从 List-view 控件中移除所有项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_DeleteColumn.htm">_GUICtrlListView_DeleteColumn</a></td>
  <td>从List-View控件中移除某一列.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_DeleteItem.htm">_GUICtrlListView_DeleteItem</a></td>
  <td>删除项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_DeleteItemsSelected.htm">_GUICtrlListView_DeleteItemsSelected</a></td>
  <td>删除所选项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_Destroy.htm">_GUICtrlListView_Destroy</a></td>
  <td>删除 ListView 控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_DrawDragImage.htm">_GUICtrlListView_DrawDragImage</a></td>
  <td>绘制拖动图像</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_EditLabel.htm">_GUICtrlListView_EditLabel</a></td>
  <td>编辑指定项的文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_EnableGroupView.htm">_GUICtrlListView_EnableGroupView</a></td>
  <td>启用或禁用控件项目分组</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_EndUpdate.htm">_GUICtrlListView_EndUpdate</a></td>
  <td>结束控件更新,并关闭 BeginUpdate 函数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_EnsureVisible.htm">_GUICtrlListView_EnsureVisible</a></td>
  <td>确保列表视图项目全部或部分可见</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_FindInText.htm">_GUICtrlListView_FindInText</a></td>
  <td>搜索包含指定文本的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_FindItem.htm">_GUICtrlListView_FindItem</a></td>
  <td>搜索指定特点的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_FindNearest.htm">_GUICtrlListView_FindNearest</a></td>
  <td>查找最接近指定位置的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_FindParam.htm">_GUICtrlListView_FindParam</a></td>
  <td>搜索指定参数值的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_FindText.htm">_GUICtrlListView_FindText</a></td>
  <td>搜索指定文本的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetBkColor.htm">_GUICtrlListView_GetBkColor</a></td>
  <td>检索列表视图控件的背景颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetBkImage.htm">_GUICtrlListView_GetBkImage</a></td>
  <td>检索控件背景图像</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetCallbackMask.htm">_GUICtrlListView_GetCallbackMask</a></td>
  <td>检索控件的回叫掩码</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetColumn.htm">_GUICtrlListView_GetColumn</a></td>
  <td>检索列的属性</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetColumnCount.htm">_GUICtrlListView_GetColumnCount</a></td>
  <td>返回列数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetColumnOrder.htm">_GUICtrlListView_GetColumnOrder</a></td>
  <td>检索当前列的左到右顺序,返回分隔的序号字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetColumnOrderArray.htm">_GUICtrlListView_GetColumnOrderArray</a></td>
  <td>检索当前列的左到右顺序,返回数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetColumnWidth.htm">_GUICtrlListView_GetColumnWidth</a></td>
  <td>检索报表视图或列表视图的列宽</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetCounterPage.htm">_GUICtrlListView_GetCounterPage</a></td>
  <td>计算在可视区域中,垂直显示的项目数量.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetEditControl.htm">_GUICtrlListView_GetEditControl</a></td>
  <td>检索编辑项目文本的编辑控件句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetExtendedListViewStyle.htm">_GUICtrlListView_GetExtendedListViewStyle</a></td>
  <td>检索当前使用的扩展样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetFocusedGroup.htm">_GUICtrlListView_GetFocusedGroup</a></td>
  <td>获取具有焦点的组</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetGroupCount.htm">_GUICtrlListView_GetGroupCount</a></td>
  <td>获取分组数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetGroupInfo.htm">_GUICtrlListView_GetGroupInfo</a></td>
  <td>检索组信息,使用组 ID.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetGroupInfoByIndex.htm">_GUICtrlListView_GetGroupInfoByIndex</a></td>
  <td>检索组信息,使用组索引.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetGroupRect.htm">_GUICtrlListView_GetGroupRect</a></td>
  <td>获取指定组的矩形</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetGroupViewEnabled.htm">_GUICtrlListView_GetGroupViewEnabled</a></td>
  <td>检查是否启用组视图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetHeader.htm">_GUICtrlListView_GetHeader</a></td>
  <td>返回标题(header)控件句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetHotCursor.htm">_GUICtrlListView_GetHotCursor</a></td>
  <td>检索热跟踪项目时的鼠标指针 HCURSOR 值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetHotItem.htm">_GUICtrlListView_GetHotItem</a></td>
  <td>检索热项目的索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetHoverTime.htm">_GUICtrlListView_GetHoverTime</a></td>
  <td>检索项目选中时,鼠标悬停的时间量.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetImageList.htm">_GUICtrlListView_GetImageList</a></td>
  <td>检索绘制 ListView 项目的图像列表句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetISearchString.htm">_GUICtrlListView_GetISearchString</a></td>
  <td>检索控件的增量搜索字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItem.htm">_GUICtrlListView_GetItem</a></td>
  <td>Retrieves an item's attributes</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemChecked.htm">_GUICtrlListView_GetItemChecked</a></td>
  <td>返回列表视图中项目选择状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemCount.htm">_GUICtrlListView_GetItemCount</a></td>
  <td>检索列表视图的项目数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemCut.htm">_GUICtrlListView_GetItemCut</a></td>
  <td>确定项目是否有剪切/粘贴操作标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemDropHilited.htm">_GUICtrlListView_GetItemDropHilited</a></td>
  <td>确定项目是否高亮显示为拖放目标</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemEx.htm">_GUICtrlListView_GetItemEx</a></td>
  <td>检索项目的部分或全部属性</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemFocused.htm">_GUICtrlListView_GetItemFocused</a></td>
  <td>确定项目是否高亮显示为拖放目标</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemGroupID.htm">_GUICtrlListView_GetItemGroupID</a></td>
  <td>获取项目组 ID</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemImage.htm">_GUICtrlListView_GetItemImage</a></td>
  <td>检索项目的图标索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemIndent.htm">_GUICtrlListView_GetItemIndent</a></td>
  <td>检索项目缩进的图像宽度数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemParam.htm">_GUICtrlListView_GetItemParam</a></td>
  <td>检索项目特定应用值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemPosition.htm">_GUICtrlListView_GetItemPosition</a></td>
  <td>检索项目的位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemPositionX.htm">_GUICtrlListView_GetItemPositionX</a></td>
  <td>检索项目的 X 位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemPositionY.htm">_GUICtrlListView_GetItemPositionY</a></td>
  <td>检索项目的 Y 位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemRect.htm">_GUICtrlListView_GetItemRect</a></td>
  <td>检索项目的全部或部分矩形,返回数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemRectEx.htm">_GUICtrlListView_GetItemRectEx</a></td>
  <td>检索项目的全部或部分矩形,返回数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemSelected.htm">_GUICtrlListView_GetItemSelected</a></td>
  <td>确定项目是否被选中</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemSpacing.htm">_GUICtrlListView_GetItemSpacing</a></td>
  <td>确定控件中项目的间距</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemSpacingX.htm">_GUICtrlListView_GetItemSpacingX</a></td>
  <td>确定项目之间的水平间距.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemSpacingY.htm">_GUICtrlListView_GetItemSpacingY</a></td>
  <td>确定项目之间的垂直间距</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemState.htm">_GUICtrlListView_GetItemState</a></td>
  <td>返回 ListView 项目状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemStateImage.htm">_GUICtrlListView_GetItemStateImage</a></td>
  <td>获取图像的显示状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemText.htm">_GUICtrlListView_GetItemText</a></td>
  <td>取得一个项目或者子项目的文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemTextArray.htm">_GUICtrlListView_GetItemTextArray</a></td>
  <td>添加所有列表视图控件项目的文本到一个数组</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetItemTextString.htm">_GUICtrlListView_GetItemTextString</a></td>
  <td>检索指定项目及其子项的全部文本,返回分隔的字符串.(译注:依据示例脚本翻译)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetNextItem.htm">_GUICtrlListView_GetNextItem</a></td>
  <td>搜索指定属性的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetNumberOfWorkAreas.htm">_GUICtrlListView_GetNumberOfWorkAreas</a></td>
  <td>检索控件工作区的数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetOrigin.htm">_GUICtrlListView_GetOrigin</a></td>
  <td>检索控件当前视图的起点</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetOriginX.htm">_GUICtrlListView_GetOriginX</a></td>
  <td>检索控件当前视图水平源点</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetOriginY.htm">_GUICtrlListView_GetOriginY</a></td>
  <td>检索控件当前视图水平源点</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetOutlineColor.htm">_GUICtrlListView_GetOutlineColor</a></td>
  <td>检索控件的边框颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetSelectedColumn.htm">_GUICtrlListView_GetSelectedColumn</a></td>
  <td>检索选定列的索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetSelectedCount.htm">_GUICtrlListView_GetSelectedCount</a></td>
  <td>检测选择的项目的数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetSelectedIndices.htm">_GUICtrlListView_GetSelectedIndices</a></td>
  <td>检索选定项目的索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetSelectionMark.htm">_GUICtrlListView_GetSelectionMark</a></td>
  <td>检索控件选择标记</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetStringWidth.htm">_GUICtrlListView_GetStringWidth</a></td>
  <td>确定指定字符串的宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetSubItemRect.htm">_GUICtrlListView_GetSubItemRect</a></td>
  <td>检索项目的子项边界矩形</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetTextBkColor.htm">_GUICtrlListView_GetTextBkColor</a></td>
  <td>检索控件的文本背景颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetTextColor.htm">_GUICtrlListView_GetTextColor</a></td>
  <td>返回控件的文本颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetToolTips.htm">_GUICtrlListView_GetToolTips</a></td>
  <td>检索工具提示控件句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetTopIndex.htm">_GUICtrlListView_GetTopIndex</a></td>
  <td>检索列表或报表视图顶部可见项目的索引.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetUnicodeFormat.htm">_GUICtrlListView_GetUnicodeFormat</a></td>
  <td>检索 UNICODE 字符格式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetView.htm">_GUICtrlListView_GetView</a></td>
  <td>检索控件的当前视图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetViewDetails.htm">_GUICtrlListView_GetViewDetails</a></td>
  <td>确定控件是否为报表视图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetViewLarge.htm">_GUICtrlListView_GetViewLarge</a></td>
  <td>确定控件是否为大图标视图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetViewList.htm">_GUICtrlListView_GetViewList</a></td>
  <td>确定控件是否为列表视图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetViewRect.htm">_GUICtrlListView_GetViewRect</a></td>
  <td>检索控件全部项目的边界矩形</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetViewSmall.htm">_GUICtrlListView_GetViewSmall</a></td>
  <td>确定控件是否为小图标模式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_GetViewTile.htm">_GUICtrlListView_GetViewTile</a></td>
  <td>确定控件是否为平铺显示视图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_HideColumn.htm">_GUICtrlListView_HideColumn</a></td>
  <td>隐藏列. "设置列宽为0”</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_HitTest.htm">_GUICtrlListView_HitTest</a></td>
  <td>确定指定位置的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_InsertColumn.htm">_GUICtrlListView_InsertColumn</a></td>
  <td>插入列</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_InsertGroup.htm">_GUICtrlListView_InsertGroup</a></td>
  <td>插入组</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_InsertItem.htm">_GUICtrlListView_InsertItem</a></td>
  <td>插入项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_JustifyColumn.htm">_GUICtrlListView_JustifyColumn</a></td>
  <td>设置控件列对齐</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_MapIDToIndex.htm">_GUICtrlListView_MapIDToIndex</a></td>
  <td>映射项目 ID 到索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_MapIndexToID.htm">_GUICtrlListView_MapIndexToID</a></td>
  <td>映射项目索引到 ID</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_RedrawItems.htm">_GUICtrlListView_RedrawItems</a></td>
  <td>强制刷新控件范围内的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_RegisterSortCallBack.htm">_GUICtrlListView_RegisterSortCallBack</a></td>
  <td>注册简单排序回调函数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_RemoveAllGroups.htm">_GUICtrlListView_RemoveAllGroups</a></td>
  <td>移除全部组</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_RemoveGroup.htm">_GUICtrlListView_RemoveGroup</a></td>
  <td>移除组</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_Scroll.htm">_GUICtrlListView_Scroll</a></td>
  <td>滚动列表视图的内容</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetBkColor.htm">_GUICtrlListView_SetBkColor</a></td>
  <td>设置控件的背景颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetBkImage.htm">_GUICtrlListView_SetBkImage</a></td>
  <td>设置控件背景图像</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetCallBackMask.htm">_GUICtrlListView_SetCallBackMask</a></td>
  <td>更改控件的回调掩码</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetColumn.htm">_GUICtrlListView_SetColumn</a></td>
  <td>设置列的属性</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetColumnOrder.htm">_GUICtrlListView_SetColumnOrder</a></td>
  <td>设置列的左到右顺序,使用分隔字符.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetColumnOrderArray.htm">_GUICtrlListView_SetColumnOrderArray</a></td>
  <td>设置列的左到右顺序,使用数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetColumnWidth.htm">_GUICtrlListView_SetColumnWidth</a></td>
  <td>更改列宽</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetExtendedListViewStyle.htm">_GUICtrlListView_SetExtendedListViewStyle</a></td>
  <td>设置扩展样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetGroupInfo.htm">_GUICtrlListView_SetGroupInfo</a></td>
  <td>设置组信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetHotItem.htm">_GUICtrlListView_SetHotItem</a></td>
  <td>设置热项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetHoverTime.htm">_GUICtrlListView_SetHoverTime</a></td>
  <td>设置项目选中前,鼠标光标悬停该项目的时间</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetIconSpacing.htm">_GUICtrlListView_SetIconSpacing</a></td>
  <td>设置大图标视图的图标间距</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetImageList.htm">_GUICtrlListView_SetImageList</a></td>
  <td>分配图像列表到控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetItem.htm">_GUICtrlListView_SetItem</a></td>
  <td>设置项目的部分或全部属性,使用参数.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetItemChecked.htm">_GUICtrlListView_SetItemChecked</a></td>
  <td>设置选中状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetItemCount.htm">_GUICtrlListView_SetItemCount</a></td>
  <td>为列表视图控件的指定数量项目分配内存</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetItemCut.htm">_GUICtrlListView_SetItemCut</a></td>
  <td>设置是否将项目标记为剪切/粘贴操作</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetItemDropHilited.htm">_GUICtrlListView_SetItemDropHilited</a></td>
  <td>设置是否将项目高亮显示为拖放目标</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetItemEx.htm">_GUICtrlListView_SetItemEx</a></td>
  <td>设置项目的部分或全部属性,使用数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetItemFocused.htm">_GUICtrlListView_SetItemFocused</a></td>
  <td>设置项目是否具有焦点</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetItemGroupID.htm">_GUICtrlListView_SetItemGroupID</a></td>
  <td>设置项目组 ID</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetItemImage.htm">_GUICtrlListView_SetItemImage</a></td>
  <td>设置一个项目图标的索引于控件图像列表.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetItemIndent.htm">_GUICtrlListView_SetItemIndent</a></td>
  <td>设置项目缩进的图像宽度数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetItemParam.htm">_GUICtrlListView_SetItemParam</a></td>
  <td>设置项目的具体值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetItemPosition.htm">_GUICtrlListView_SetItemPosition</a></td>
  <td>移动项目到控件指定位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetItemPosition32.htm">_GUICtrlListView_SetItemPosition32</a></td>
  <td>移动项目到控件指定位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetItemSelected.htm">_GUICtrlListView_SetItemSelected</a></td>
  <td>设置项目是否被选中</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetItemState.htm">_GUICtrlListView_SetItemState</a></td>
  <td>更改控件项目状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetItemStateImage.htm">_GUICtrlListView_SetItemStateImage</a></td>
  <td>设置状态图像</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetItemText.htm">_GUICtrlListView_SetItemText</a></td>
  <td>更改项目或子项文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetOutlineColor.htm">_GUICtrlListView_SetOutlineColor</a></td>
  <td>设置边框颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetSelectedColumn.htm">_GUICtrlListView_SetSelectedColumn</a></td>
  <td>设置选定列的索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetSelectionMark.htm">_GUICtrlListView_SetSelectionMark</a></td>
  <td>设置选择标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetTextBkColor.htm">_GUICtrlListView_SetTextBkColor</a></td>
  <td>设置控件文本的背景颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetTextColor.htm">_GUICtrlListView_SetTextColor</a></td>
  <td>设置控件中文本的颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetToolTips.htm">_GUICtrlListView_SetToolTips</a></td>
  <td>设置工具提示控件,该控件将用于显示工具提示</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetUnicodeFormat.htm">_GUICtrlListView_SetUnicodeFormat</a></td>
  <td>设置控件的 UNICODE 字符格式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetView.htm">_GUICtrlListView_SetView</a></td>
  <td>设置控件的视图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SetWorkAreas.htm">_GUICtrlListView_SetWorkAreas</a></td>
  <td>创建控件工作区</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SimpleSort.htm">_GUICtrlListView_SimpleSort</a></td>
  <td>排序列表视图控件（有限）</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SortItems.htm">_GUICtrlListView_SortItems</a></td>
  <td>启动回叫排序,并设置标题中的箭头</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_SubItemHitTest.htm">_GUICtrlListView_SubItemHitTest</a></td>
  <td>确定哪些项目或子项目在控件的给定位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlListView_UnRegisterSortCallBack.htm">_GUICtrlListView_UnRegisterSortCallBack</a></td>
  <td>反注册排序回调函数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_AddMenuItem.htm">_GUICtrlMenu_AddMenuItem</a></td>
  <td>添加新菜单项到菜单末尾</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_AppendMenu.htm">_GUICtrlMenu_AppendMenu</a></td>
  <td>追加一个新项目到指定菜单栏,下拉菜单,子菜单或快捷菜单的末尾,</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_CheckMenuItem.htm">_GUICtrlMenu_CheckMenuItem</a></td>
  <td>设置菜单项复选标记 (√) 的选中或清除选中状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_CheckRadioItem.htm">_GUICtrlMenu_CheckRadioItem</a></td>
  <td>选中指定菜单项,并使其成为单选项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_CreateMenu.htm">_GUICtrlMenu_CreateMenu</a></td>
  <td>创建菜单</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_CreatePopup.htm">_GUICtrlMenu_CreatePopup</a></td>
  <td>创建下拉菜单, 子菜单或快捷菜单</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_DeleteMenu.htm">_GUICtrlMenu_DeleteMenu</a></td>
  <td>从指定菜单删除一个项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_DestroyMenu.htm">_GUICtrlMenu_DestroyMenu</a></td>
  <td>销毁指定菜单,并释放菜单占用的内存</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_DrawMenuBar.htm">_GUICtrlMenu_DrawMenuBar</a></td>
  <td>刷新指定窗口的菜单栏</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_EnableMenuItem.htm">_GUICtrlMenu_EnableMenuItem</a></td>
  <td>启用,禁用或灰色指定的菜单项</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_FindItem.htm">_GUICtrlMenu_FindItem</a></td>
  <td>检索基于文本的菜单项</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_FindParent.htm">_GUICtrlMenu_FindParent</a></td>
  <td>返回菜单属于哪个窗口</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemBmp.htm">_GUICtrlMenu_GetItemBmp</a></td>
  <td>检索项目显示的位图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemBmpChecked.htm">_GUICtrlMenu_GetItemBmpChecked</a></td>
  <td>检索显示项目选中状态的位图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemBmpUnchecked.htm">_GUICtrlMenu_GetItemBmpUnchecked</a></td>
  <td>检索显示项目未选中状态的位图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemChecked.htm">_GUICtrlMenu_GetItemChecked</a></td>
  <td>检索菜单项的选中状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemCount.htm">_GUICtrlMenu_GetItemCount</a></td>
  <td>检索指定菜单项的数目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemData.htm">_GUICtrlMenu_GetItemData</a></td>
  <td>检索应用程序定义的菜单项关联值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemDefault.htm">_GUICtrlMenu_GetItemDefault</a></td>
  <td>检索菜单项的默认状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemDisabled.htm">_GUICtrlMenu_GetItemDisabled</a></td>
  <td>检索菜单项的禁用状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemEnabled.htm">_GUICtrlMenu_GetItemEnabled</a></td>
  <td>检索菜单项的启用状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemGrayed.htm">_GUICtrlMenu_GetItemGrayed</a></td>
  <td>检索菜单项灰色状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemHighlighted.htm">_GUICtrlMenu_GetItemHighlighted</a></td>
  <td>检索菜单项的高亮状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemID.htm">_GUICtrlMenu_GetItemID</a></td>
  <td>检索菜单项的 ID</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemInfo.htm">_GUICtrlMenu_GetItemInfo</a></td>
  <td>检索菜单项的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemRect.htm">_GUICtrlMenu_GetItemRect</a></td>
  <td>检索指定菜单项的矩形范围,返回矩形坐标数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemRectEx.htm">_GUICtrlMenu_GetItemRectEx</a></td>
  <td>检索指定菜单项的矩形范围,返回矩形坐标数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemState.htm">_GUICtrlMenu_GetItemState</a></td>
  <td>检索菜单项的状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemStateEx.htm">_GUICtrlMenu_GetItemStateEx</a></td>
  <td>检索关联指定菜单项的标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemSubMenu.htm">_GUICtrlMenu_GetItemSubMenu</a></td>
  <td>检索指定项目的激活子菜单</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemText.htm">_GUICtrlMenu_GetItemText</a></td>
  <td>返回指定菜单项目的文本.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetItemType.htm">_GUICtrlMenu_GetItemType</a></td>
  <td>检索菜单项类型</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetMenu.htm">_GUICtrlMenu_GetMenu</a></td>
  <td>返回指定窗口的菜单句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetMenuBackground.htm">_GUICtrlMenu_GetMenuBackground</a></td>
  <td>检索菜单背景的画笔刷</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetMenuBarInfo.htm">_GUICtrlMenu_GetMenuBarInfo</a></td>
  <td>检索指定菜单栏的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetMenuContextHelpID.htm">_GUICtrlMenu_GetMenuContextHelpID</a></td>
  <td>检索上下文帮助标识符</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetMenuData.htm">_GUICtrlMenu_GetMenuData</a></td>
  <td>返回应用程序定义的值(菜单数据)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetMenuDefaultItem.htm">_GUICtrlMenu_GetMenuDefaultItem</a></td>
  <td>检索指定菜单的默认菜单项</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetMenuHeight.htm">_GUICtrlMenu_GetMenuHeight</a></td>
  <td>检索菜单的最大高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetMenuInfo.htm">_GUICtrlMenu_GetMenuInfo</a></td>
  <td>检索指定菜单的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetMenuStyle.htm">_GUICtrlMenu_GetMenuStyle</a></td>
  <td>检索菜单样式信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_GetSystemMenu.htm">_GUICtrlMenu_GetSystemMenu</a></td>
  <td>允许应用程序访问、复制和修改窗口菜单</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_InsertMenuItem.htm">_GUICtrlMenu_InsertMenuItem</a></td>
  <td>插入一个新菜单项到指定位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_InsertMenuItemEx.htm">_GUICtrlMenu_InsertMenuItemEx</a></td>
  <td>插入一个新菜单项到指定位置(Ex)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_IsMenu.htm">_GUICtrlMenu_IsMenu</a></td>
  <td>确定句柄是否为菜单句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_LoadMenu.htm">_GUICtrlMenu_LoadMenu</a></td>
  <td>从与应用程序实例相关联的可执行文件加载指定菜单资源</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_MapAccelerator.htm">_GUICtrlMenu_MapAccelerator</a></td>
  <td>映射菜单快捷键到它的菜单位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_MenuItemFromPoint.htm">_GUICtrlMenu_MenuItemFromPoint</a></td>
  <td>确定哪个菜单项在指定的位置.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_RemoveMenu.htm">_GUICtrlMenu_RemoveMenu</a></td>
  <td>从指定菜单删除菜单项或分离子菜单</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetItemBitmaps.htm">_GUICtrlMenu_SetItemBitmaps</a></td>
  <td>关联指定位图与一个菜单项</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetItemBmp.htm">_GUICtrlMenu_SetItemBmp</a></td>
  <td>设置显示项目的位图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetItemBmpChecked.htm">_GUICtrlMenu_SetItemBmpChecked</a></td>
  <td>设置显示项目被选中状态的位图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetItemBmpUnchecked.htm">_GUICtrlMenu_SetItemBmpUnchecked</a></td>
  <td>设置显示项目未选中状态的位图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetItemChecked.htm">_GUICtrlMenu_SetItemChecked</a></td>
  <td>设置菜单项的选中状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetItemData.htm">_GUICtrlMenu_SetItemData</a></td>
  <td>设置应用程序定义的菜单项值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetItemDefault.htm">_GUICtrlMenu_SetItemDefault</a></td>
  <td>设置菜单项的默认状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetItemDisabled.htm">_GUICtrlMenu_SetItemDisabled</a></td>
  <td>设置菜单项的禁用状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetItemEnabled.htm">_GUICtrlMenu_SetItemEnabled</a></td>
  <td>设置菜单项的启用状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetItemGrayed.htm">_GUICtrlMenu_SetItemGrayed</a></td>
  <td>设置菜单项的灰色状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetItemHighlighted.htm">_GUICtrlMenu_SetItemHighlighted</a></td>
  <td>设置菜单项的高亮状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetItemID.htm">_GUICtrlMenu_SetItemID</a></td>
  <td>设置菜单项的 ID</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetItemInfo.htm">_GUICtrlMenu_SetItemInfo</a></td>
  <td>更改菜单项的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetItemState.htm">_GUICtrlMenu_SetItemState</a></td>
  <td>设置菜单项的状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetItemSubMenu.htm">_GUICtrlMenu_SetItemSubMenu</a></td>
  <td>设置菜单项关联的下拉菜单或子菜单</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetItemText.htm">_GUICtrlMenu_SetItemText</a></td>
  <td>设置菜单项目文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetItemType.htm">_GUICtrlMenu_SetItemType</a></td>
  <td>设置菜单项目类型</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetMenu.htm">_GUICtrlMenu_SetMenu</a></td>
  <td>分配一个新菜单到指定窗口.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetMenuBackground.htm">_GUICtrlMenu_SetMenuBackground</a></td>
  <td>为菜单设置一个背景刷子(brush).</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetMenuContextHelpID.htm">_GUICtrlMenu_SetMenuContextHelpID</a></td>
  <td>为菜单设置一个上下文帮助ID(标识)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetMenuData.htm">_GUICtrlMenu_SetMenuData</a></td>
  <td>设置菜单定义的应用</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetMenuDefaultItem.htm">_GUICtrlMenu_SetMenuDefaultItem</a></td>
  <td>设置默认菜单项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetMenuHeight.htm">_GUICtrlMenu_SetMenuHeight</a></td>
  <td>设置菜单最大高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetMenuInfo.htm">_GUICtrlMenu_SetMenuInfo</a></td>
  <td>设置指定菜单信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_SetMenuStyle.htm">_GUICtrlMenu_SetMenuStyle</a></td>
  <td>设置菜单样式.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMenu_TrackPopupMenu.htm">_GUICtrlMenu_TrackPopupMenu</a></td>
  <td>在指定区域显示一个快捷菜单(弹出菜单)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_Create.htm">_GUICtrlMonthCal_Create</a></td>
  <td>创建月份日历控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_Destroy.htm">_GUICtrlMonthCal_Destroy</a></td>
  <td>删除 MonthCal 控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetCalendarBorder.htm">_GUICtrlMonthCal_GetCalendarBorder</a></td>
  <td>获取边框的像素大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetCalendarCount.htm">_GUICtrlMonthCal_GetCalendarCount</a></td>
  <td>获取控件当前显示的日历数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetColor.htm">_GUICtrlMonthCal_GetColor</a></td>
  <td>检索控件的特定颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetColorArray.htm">_GUICtrlMonthCal_GetColorArray</a></td>
  <td>检索控件指定部分的颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetCurSel.htm">_GUICtrlMonthCal_GetCurSel</a></td>
  <td>返回当前选择的日期</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetCurSelStr.htm">_GUICtrlMonthCal_GetCurSelStr</a></td>
  <td>检索当前选定日期的字符串格式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetFirstDOW.htm">_GUICtrlMonthCal_GetFirstDOW</a></td>
  <td>检索周的第一天</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetFirstDOWStr.htm">_GUICtrlMonthCal_GetFirstDOWStr</a></td>
  <td>检索周的第一天的字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetMaxSelCount.htm">_GUICtrlMonthCal_GetMaxSelCount</a></td>
  <td>检索控件中最大可选择日期范围</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetMaxTodayWidth.htm">_GUICtrlMonthCal_GetMaxTodayWidth</a></td>
  <td>检索月历控件中“今天”字符串的最大宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetMinReqHeight.htm">_GUICtrlMonthCal_GetMinReqHeight</a></td>
  <td>检索显示完整月历所需的最低高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetMinReqRect.htm">_GUICtrlMonthCal_GetMinReqRect</a></td>
  <td>检索显示完整月历所需的最低尺寸</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetMinReqRectArray.htm">_GUICtrlMonthCal_GetMinReqRectArray</a></td>
  <td>检索显示完整月历所需的最低尺寸</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetMinReqWidth.htm">_GUICtrlMonthCal_GetMinReqWidth</a></td>
  <td>检索显示完整月历所需的最小宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetMonthDelta.htm">_GUICtrlMonthCal_GetMonthDelta</a></td>
  <td>检索月日历控件滚动速度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetMonthRange.htm">_GUICtrlMonthCal_GetMonthRange</a></td>
  <td>检索日期的高,低界限范围</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetMonthRangeMax.htm">_GUICtrlMonthCal_GetMonthRangeMax</a></td>
  <td>检索控件日期显示范围的上限</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetMonthRangeMaxStr.htm">_GUICtrlMonthCal_GetMonthRangeMaxStr</a></td>
  <td>检索控件日期显示范围的上限值格式字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetMonthRangeMin.htm">_GUICtrlMonthCal_GetMonthRangeMin</a></td>
  <td>检索控件日期显示范围的下限</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetMonthRangeMinStr.htm">_GUICtrlMonthCal_GetMonthRangeMinStr</a></td>
  <td>检索控件日期显示范围的下限值格式字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetMonthRangeSpan.htm">_GUICtrlMonthCal_GetMonthRangeSpan</a></td>
  <td>检索月历中全部显示日历天的月份跨度(译注:臆测翻译,参考原文罢!)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetRange.htm">_GUICtrlMonthCal_GetRange</a></td>
  <td>检索最大和最小允许日期</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetRangeMax.htm">_GUICtrlMonthCal_GetRangeMax</a></td>
  <td>检索日期范围的上限</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetRangeMaxStr.htm">_GUICtrlMonthCal_GetRangeMaxStr</a></td>
  <td>检索日期范围的上限值格式字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetRangeMin.htm">_GUICtrlMonthCal_GetRangeMin</a></td>
  <td>检索日期范围的下限</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetRangeMinStr.htm">_GUICtrlMonthCal_GetRangeMinStr</a></td>
  <td>检索日期范围的下限值格式字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetSelRange.htm">_GUICtrlMonthCal_GetSelRange</a></td>
  <td>检索当前选定日期范围的上限和下限</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetSelRangeMax.htm">_GUICtrlMonthCal_GetSelRangeMax</a></td>
  <td>检索用户选择日期范围的上限</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetSelRangeMaxStr.htm">_GUICtrlMonthCal_GetSelRangeMaxStr</a></td>
  <td>检索用户(字符串形式)选定当前日期范围的上限</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetSelRangeMin.htm">_GUICtrlMonthCal_GetSelRangeMin</a></td>
  <td>检索用户当前选定日期的下限范围</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetSelRangeMinStr.htm">_GUICtrlMonthCal_GetSelRangeMinStr</a></td>
  <td>检索用户当前选定日期下限范围的格式字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetToday.htm">_GUICtrlMonthCal_GetToday</a></td>
  <td>检索指定为“今天”的日期信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetTodayStr.htm">_GUICtrlMonthCal_GetTodayStr</a></td>
  <td>检索指定为“今天”的日期信息格式字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_GetUnicodeFormat.htm">_GUICtrlMonthCal_GetUnicodeFormat</a></td>
  <td>检索控件的 Unicode 字符格式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_HitTest.htm">_GUICtrlMonthCal_HitTest</a></td>
  <td>确定指定点位置的控件部分</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_SetCalendarBorder.htm">_GUICtrlMonthCal_SetCalendarBorder</a></td>
  <td>设置边框的像素大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_SetColor.htm">_GUICtrlMonthCal_SetColor</a></td>
  <td>设置月日历特定部分的颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_SetCurSel.htm">_GUICtrlMonthCal_SetCurSel</a></td>
  <td>设置当前选定的日期</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_SetDayState.htm">_GUICtrlMonthCal_SetDayState</a></td>
  <td>设置月份中当前可见天的状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_SetFirstDOW.htm">_GUICtrlMonthCal_SetFirstDOW</a></td>
  <td>设置月日历控件中周的第一天</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_SetMaxSelCount.htm">_GUICtrlMonthCal_SetMaxSelCount</a></td>
  <td>设置日历控件中可供选择的最大天数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_SetMonthDelta.htm">_GUICtrlMonthCal_SetMonthDelta</a></td>
  <td>设置了月的日历控件滚动速度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_SetRange.htm">_GUICtrlMonthCal_SetRange</a></td>
  <td>设置代表高低限的日期信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_SetSelRange.htm">_GUICtrlMonthCal_SetSelRange</a></td>
  <td>设置月日历控件特定日期的选择范围</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_SetToday.htm">_GUICtrlMonthCal_SetToday</a></td>
  <td>设置指定日期的“今天”日期信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlMonthCal_SetUnicodeFormat.htm">_GUICtrlMonthCal_SetUnicodeFormat</a></td>
  <td>设置控件的 Unicode 字符格式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_AddBand.htm">_GUICtrlRebar_AddBand</a></td>
  <td>添加带区控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_AddToolBarBand.htm">_GUICtrlRebar_AddToolBarBand</a></td>
  <td>添加带区控件.(附带工具栏)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_BeginDrag.htm">_GUICtrlRebar_BeginDrag</a></td>
  <td>添加带区控件.(允许拖动操作)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_Create.htm">_GUICtrlRebar_Create</a></td>
  <td>创建伸缩条控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_DeleteBand.htm">_GUICtrlRebar_DeleteBand</a></td>
  <td>删除伸缩条控件带区</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_Destroy.htm">_GUICtrlRebar_Destroy</a></td>
  <td>删除控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_DragMove.htm">_GUICtrlRebar_DragMove</a></td>
  <td>更新 _GUICtrlRebar_BeginDrag 消息后的伸缩条控件拖动位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_EndDrag.htm">_GUICtrlRebar_EndDrag</a></td>
  <td>终止伸缩条控件的拖动操作.不发送 $RBN_ENDDRAG 通知消息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandBackColor.htm">_GUICtrlRebar_GetBandBackColor</a></td>
  <td>检索带区的背景颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandBorders.htm">_GUICtrlRebar_GetBandBorders</a></td>
  <td>检索带区的边界.此消息的结果可以用于计算带区的实用面积,返回数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandBordersEx.htm">_GUICtrlRebar_GetBandBordersEx</a></td>
  <td>检索带区的边界.此消息的结果可以用于计算带区的实用面积,返回数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandChildHandle.htm">_GUICtrlRebar_GetBandChildHandle</a></td>
  <td>检索带区子窗口句柄(如果存在)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandChildSize.htm">_GUICtrlRebar_GetBandChildSize</a></td>
  <td>检索带区设置的子尺寸</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandCount.htm">_GUICtrlRebar_GetBandCount</a></td>
  <td>检索伸缩条控件当前带区数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandForeColor.htm">_GUICtrlRebar_GetBandForeColor</a></td>
  <td>检索带区前景色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandHeaderSize.htm">_GUICtrlRebar_GetBandHeaderSize</a></td>
  <td>检索带区的标头大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandID.htm">_GUICtrlRebar_GetBandID</a></td>
  <td>获取控件用于识别自定义绘制带区通知消息的值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandIdealSize.htm">_GUICtrlRebar_GetBandIdealSize</a></td>
  <td>获得带区理想的像素宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandLength.htm">_GUICtrlRebar_GetBandLength</a></td>
  <td>获取带区像素长度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandLParam.htm">_GUICtrlRebar_GetBandLParam</a></td>
  <td>得到应用程序定义的值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandMargins.htm">_GUICtrlRebar_GetBandMargins</a></td>
  <td>获取带区页边距,返回数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandMarginsEx.htm">_GUICtrlRebar_GetBandMarginsEx</a></td>
  <td>获取带区页边距,返回数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandRect.htm">_GUICtrlRebar_GetBandRect</a></td>
  <td>检索伸缩条控件特定带区的边界矩形,返回数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandRectEx.htm">_GUICtrlRebar_GetBandRectEx</a></td>
  <td>检索伸缩条控件特定带区的边界矩形,返回数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandStyle.htm">_GUICtrlRebar_GetBandStyle</a></td>
  <td>获取带区样式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandStyleBreak.htm">_GUICtrlRebar_GetBandStyleBreak</a></td>
  <td>确定被设置的(带区在新行)标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandStyleChildEdge.htm">_GUICtrlRebar_GetBandStyleChildEdge</a></td>
  <td>确定被设置的(带区有顶底部边缘子窗口)标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandStyleFixedBMP.htm">_GUICtrlRebar_GetBandStyleFixedBMP</a></td>
  <td>确定被设置的(调整大小不移动背景位图)标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandStyleFixedSize.htm">_GUICtrlRebar_GetBandStyleFixedSize</a></td>
  <td>确定被设置的(带区不能调整大小)标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandStyleGripperAlways.htm">_GUICtrlRebar_GetBandStyleGripperAlways</a></td>
  <td>确定被设置的(带区具有尺寸控制)标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandStyleHidden.htm">_GUICtrlRebar_GetBandStyleHidden</a></td>
  <td>确定被设置的(带区不可见)标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandStyleHideTitle.htm">_GUICtrlRebar_GetBandStyleHideTitle</a></td>
  <td>确定被设置的(带区标题隐藏)标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandStyleNoGripper.htm">_GUICtrlRebar_GetBandStyleNoGripper</a></td>
  <td>确定被设置的(带区没有尺寸控制)标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandStyleTopAlign.htm">_GUICtrlRebar_GetBandStyleTopAlign</a></td>
  <td>确定被设置的(带区置于顶行)标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandStyleUseChevron.htm">_GUICtrlRebar_GetBandStyleUseChevron</a></td>
  <td>确定被设置的(显示下拉按钮)标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandStyleVariableHeight.htm">_GUICtrlRebar_GetBandStyleVariableHeight</a></td>
  <td>确定被设置的(带区可由伸缩条改变大小)标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBandText.htm">_GUICtrlRebar_GetBandText</a></td>
  <td>检索带区文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBarHeight.htm">_GUICtrlRebar_GetBarHeight</a></td>
  <td>检索伸缩条控件高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBarInfo.htm">_GUICtrlRebar_GetBarInfo</a></td>
  <td>检索伸缩条使用的图像列表信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetBKColor.htm">_GUICtrlRebar_GetBKColor</a></td>
  <td>检索伸缩条控件的默认背景色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetColorScheme.htm">_GUICtrlRebar_GetColorScheme</a></td>
  <td>检索伸缩条配色方案信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetRowCount.htm">_GUICtrlRebar_GetRowCount</a></td>
  <td>检索伸缩条带区行数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetRowHeight.htm">_GUICtrlRebar_GetRowHeight</a></td>
  <td>检索指定带区的高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetTextColor.htm">_GUICtrlRebar_GetTextColor</a></td>
  <td>检索控件默认文本颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetToolTips.htm">_GUICtrlRebar_GetToolTips</a></td>
  <td>检索控件关联的工具提示控件句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_GetUnicodeFormat.htm">_GUICtrlRebar_GetUnicodeFormat</a></td>
  <td>检索控件的 Unicode 字符格式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_HitTest.htm">_GUICtrlRebar_HitTest</a></td>
  <td>确定指定位置的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_IDToIndex.htm">_GUICtrlRebar_IDToIndex</a></td>
  <td>带区标识符转换为带区索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_MaximizeBand.htm">_GUICtrlRebar_MaximizeBand</a></td>
  <td>调整带区的理想或最大尺寸</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_MinimizeBand.htm">_GUICtrlRebar_MinimizeBand</a></td>
  <td>调整带区的最小尺寸</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_MoveBand.htm">_GUICtrlRebar_MoveBand</a></td>
  <td>移动带区索引为另一索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandBackColor.htm">_GUICtrlRebar_SetBandBackColor</a></td>
  <td>设置带区的背景颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandForeColor.htm">_GUICtrlRebar_SetBandForeColor</a></td>
  <td>设置带区前景颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandHeaderSize.htm">_GUICtrlRebar_SetBandHeaderSize</a></td>
  <td>设置带区标题大小的像素值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandID.htm">_GUICtrlRebar_SetBandID</a></td>
  <td>设置控件用于识别带区的值,以便于通知客户自定义绘制带区</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandIdealSize.htm">_GUICtrlRebar_SetBandIdealSize</a></td>
  <td>设置带区理想宽度的像素值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandLength.htm">_GUICtrlRebar_SetBandLength</a></td>
  <td>设置带区长度(译注:按该函数名称直译,留原文如下)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandLParam.htm">_GUICtrlRebar_SetBandLParam</a></td>
  <td>设置应用程序定义的值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandStyle.htm">_GUICtrlRebar_SetBandStyle</a></td>
  <td>设置带区样式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandStyleBreak.htm">_GUICtrlRebar_SetBandStyleBreak</a></td>
  <td>设置带区是否新起一行</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandStyleChildEdge.htm">_GUICtrlRebar_SetBandStyleChildEdge</a></td>
  <td>设置带区子窗口是否有顶部和底部边缘</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandStyleFixedBMP.htm">_GUICtrlRebar_SetBandStyleFixedBMP</a></td>
  <td>设置带区调整大小时,背景位图是否不移动</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandStyleFixedSize.htm">_GUICtrlRebar_SetBandStyleFixedSize</a></td>
  <td>设置带区是否不能调整大小.不显示尺寸控制柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandStyleGripperAlways.htm">_GUICtrlRebar_SetBandStyleGripperAlways</a></td>
  <td>设置带区是否具有尺寸控制柄, 即使伸缩条上仅有一个带区</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandStyleHidden.htm">_GUICtrlRebar_SetBandStyleHidden</a></td>
  <td>设置带区是否不可见</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandStyleHideTitle.htm">_GUICtrlRebar_SetBandStyleHideTitle</a></td>
  <td>设置带区是否隐藏标题</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandStyleNoGripper.htm">_GUICtrlRebar_SetBandStyleNoGripper</a></td>
  <td>设置带区是否没有尺寸控制柄, 即使伸缩条上有多个带区</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandStyleTopAlign.htm">_GUICtrlRebar_SetBandStyleTopAlign</a></td>
  <td>设置带区是否置于顶行</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandStyleUseChevron.htm">_GUICtrlRebar_SetBandStyleUseChevron</a></td>
  <td>设置是否显示下拉按钮</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandStyleVariableHeight.htm">_GUICtrlRebar_SetBandStyleVariableHeight</a></td>
  <td>设置带区是否可由伸缩条改变大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBandText.htm">_GUICtrlRebar_SetBandText</a></td>
  <td>Sets the display text for the band of a rebar control</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBarInfo.htm">_GUICtrlRebar_SetBarInfo</a></td>
  <td>设置 rebar 控件的特性</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetBKColor.htm">_GUICtrlRebar_SetBKColor</a></td>
  <td>设置Rebar控件的默认背景色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetColorScheme.htm">_GUICtrlRebar_SetColorScheme</a></td>
  <td>设置Rebar控件的颜色方案</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetTextColor.htm">_GUICtrlRebar_SetTextColor</a></td>
  <td>设置 rebar 控件的默认文本颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetToolTips.htm">_GUICtrlRebar_SetToolTips</a></td>
  <td>设置 rebar 控件关联的工具提示控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_SetUnicodeFormat.htm">_GUICtrlRebar_SetUnicodeFormat</a></td>
  <td>设置控件 Unicode 字符格式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRebar_ShowBand.htm">_GUICtrlRebar_ShowBand</a></td>
  <td>显示或隐藏 rebar 控件的某个带区</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_AppendText.htm">_GUICtrlRichEdit_AppendText</a></td>
  <td>追加文本到客户区尾端</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_AutoDetectURL.htm">_GUICtrlRichEdit_AutoDetectURL</a></td>
  <td>启用或禁用自动检测网址(URL)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_CanPaste.htm">_GUICtrlRichEdit_CanPaste</a></td>
  <td>确定剪贴板内容可否粘贴到控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_CanPasteSpecial.htm">_GUICtrlRichEdit_CanPasteSpecial</a></td>
  <td>确定剪贴板内容粘贴到控件的是两种格式的哪一种</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_CanRedo.htm">_GUICtrlRichEdit_CanRedo</a></td>
  <td>确定撤销操作能否能重做</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_CanUndo.htm">_GUICtrlRichEdit_CanUndo</a></td>
  <td>确定是否有撤销操作</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_ChangeFontSize.htm">_GUICtrlRichEdit_ChangeFontSize</a></td>
  <td>递增或递减选定文本的字体大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_Copy.htm">_GUICtrlRichEdit_Copy</a></td>
  <td>复制文本到剪贴板</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_Create.htm">_GUICtrlRichEdit_Create</a></td>
  <td>创建编辑控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_Cut.htm">_GUICtrlRichEdit_Cut</a></td>
  <td>剪切文本到剪贴板</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_Deselect.htm">_GUICtrlRichEdit_Deselect</a></td>
  <td>取消选择的文本,没有选择地离开</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_Destroy.htm">_GUICtrlRichEdit_Destroy</a></td>
  <td>删除 RichEdit 控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_EmptyUndoBuffer.htm">_GUICtrlRichEdit_EmptyUndoBuffer</a></td>
  <td>重置控件撤消标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_FindText.htm">_GUICtrlRichEdit_FindText</a></td>
  <td>搜索插入点或定位点的选择文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_FindTextInRange.htm">_GUICtrlRichEdit_FindTextInRange</a></td>
  <td>搜索字符区间范围内的文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetBkColor.htm">_GUICtrlRichEdit_GetBkColor</a></td>
  <td>获取控件的背景颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetCharAttributes.htm">_GUICtrlRichEdit_GetCharAttributes</a></td>
  <td>返回选中文本的属性</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetCharBkColor.htm">_GUICtrlRichEdit_GetCharBkColor</a></td>
  <td>检索所选文本的背景颜色,如果没有选定文本,则检索插入点右边的字符</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetCharColor.htm">_GUICtrlRichEdit_GetCharColor</a></td>
  <td>检索所选文本的颜色,如果没有选定文本,则检索插入点右边的字符</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetCharPosFromXY.htm">_GUICtrlRichEdit_GetCharPosFromXY</a></td>
  <td>获取最接近客户区指定点的字符区间位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetCharPosOfNextWord.htm">_GUICtrlRichEdit_GetCharPosOfNextWord</a></td>
  <td>获取下一个单词之前的字符区间位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetCharPosOfPreviousWord.htm">_GUICtrlRichEdit_GetCharPosOfPreviousWord</a></td>
  <td>获取上一个单词之前的字符区间位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetCharWordBreakInfo.htm">_GUICtrlRichEdit_GetCharWordBreakInfo</a></td>
  <td>获取上一个单词之前的字符区间位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetFirstCharPosOnLine.htm">_GUICtrlRichEdit_GetFirstCharPosOnLine</a></td>
  <td>检索字符区间位置上一行的第一个字符</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetFont.htm">_GUICtrlRichEdit_GetFont</a></td>
  <td>获取选定字体的属性,如果没有选择,则获取插入点的字体属性</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetLineCount.htm">_GUICtrlRichEdit_GetLineCount</a></td>
  <td>检索多行编辑控件的行数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetLineLength.htm">_GUICtrlRichEdit_GetLineLength</a></td>
  <td>检索行的字符长度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetLineNumberFromCharPos.htm">_GUICtrlRichEdit_GetLineNumberFromCharPos</a></td>
  <td>检索字符区间位置的行数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetNextRedo.htm">_GUICtrlRichEdit_GetNextRedo</a></td>
  <td>检索下一个可能的"重做"动作名称或类型 ID</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetNextUndo.htm">_GUICtrlRichEdit_GetNextUndo</a></td>
  <td>检索下一个可能的"撤消"动作名称或类型 ID</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetNumberOfFirstVisibleLine.htm">_GUICtrlRichEdit_GetNumberOfFirstVisibleLine</a></td>
  <td>获取控件可见行的第一行</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetParaAlignment.htm">_GUICtrlRichEdit_GetParaAlignment</a></td>
  <td>获取选定段落的对齐方式,或如果没有选择,则获取当前段落</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetParaAttributes.htm">_GUICtrlRichEdit_GetParaAttributes</a></td>
  <td>获取(第一)选中段落;或没有选择时的当前段落属性</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetParaBorder.htm">_GUICtrlRichEdit_GetParaBorder</a></td>
  <td>获取第一选中段落;或没有选择时的当前段落的边框设置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetParaIndents.htm">_GUICtrlRichEdit_GetParaIndents</a></td>
  <td>获取第一个选定段落;或者没有选择时的当前段落的边框缩进设置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetParaNumbering.htm">_GUICtrlRichEdit_GetParaNumbering</a></td>
  <td>获获取第一个选定段落; 或者没有选择时的当前段落的编号方式类型</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetParaShading.htm">_GUICtrlRichEdit_GetParaShading</a></td>
  <td>获取获取(第一)选定的;或者如果没有选择时的当前段落的明暗处理</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetParaSpacing.htm">_GUICtrlRichEdit_GetParaSpacing</a></td>
  <td>获取（第一）选定段落;或者没有选择时的当前段落的间距设置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetParaTabStops.htm">_GUICtrlRichEdit_GetParaTabStops</a></td>
  <td>获取(第一)选中段落;或者没有选择时的当前段落的制表位</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetPasswordChar.htm">_GUICtrlRichEdit_GetPasswordChar</a></td>
  <td>获取 RichEdit 控件显示当用户输入文本的密码字符</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetRECT.htm">_GUICtrlRichEdit_GetRECT</a></td>
  <td>检索控件的格式化矩形</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetScrollPos.htm">_GUICtrlRichEdit_GetScrollPos</a></td>
  <td>获取控件的滚动位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetSel.htm">_GUICtrlRichEdit_GetSel</a></td>
  <td>获取选中字符区间的低、高位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetSelAA.htm">_GUICtrlRichEdit_GetSelAA</a></td>
  <td>获取选中字符区间按顺序的当前锚点</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetSelText.htm">_GUICtrlRichEdit_GetSelText</a></td>
  <td>检索当前选定的文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetSpaceUnit.htm">_GUICtrlRichEdit_GetSpaceUnit</a></td>
  <td>获取水平和垂直空间计算单位,供 _GUICtrlRichEdit 函数的参数使用</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetText.htm">_GUICtrlRichEdit_GetText</a></td>
  <td>获取控件中的全部文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetTextInLine.htm">_GUICtrlRichEdit_GetTextInLine</a></td>
  <td>获取一行文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetTextInRange.htm">_GUICtrlRichEdit_GetTextInRange</a></td>
  <td>获取字符区间位置的另一个文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetTextLength.htm">_GUICtrlRichEdit_GetTextLength</a></td>
  <td>获取控件中的整个文本的长度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetVersion.htm">_GUICtrlRichEdit_GetVersion</a></td>
  <td>检索 RichEdit 的版本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetXYFromCharPos.htm">_GUICtrlRichEdit_GetXYFromCharPos</a></td>
  <td>检索字符区间位置的 X、Y 坐标</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GetZoom.htm">_GUICtrlRichEdit_GetZoom</a></td>
  <td>获取控件文本区间缩放级别</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_GotoCharPos.htm">_GUICtrlRichEdit_GotoCharPos</a></td>
  <td>移动插入点到字符区间位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_HideSelection.htm">_GUICtrlRichEdit_HideSelection</a></td>
  <td>隐藏(或显示)选区</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_InsertText.htm">_GUICtrlRichEdit_InsertText</a></td>
  <td>在插入点或定位点插入文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_IsModified.htm">_GUICtrlRichEdit_IsModified</a></td>
  <td>检索 RichEdit 控件的修改标志状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_IsTextSelected.htm">_GUICtrlRichEdit_IsTextSelected</a></td>
  <td>确定文本是否选中</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_Paste.htm">_GUICtrlRichEdit_Paste</a></td>
  <td>从剪贴板粘贴 RTF 或 RTF 格式的对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_PasteSpecial.htm">_GUICtrlRichEdit_PasteSpecial</a></td>
  <td>从剪贴板粘贴 RTF 或 RTF 格式的对象(专用)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_PauseRedraw.htm">_GUICtrlRichEdit_PauseRedraw</a></td>
  <td>暂停控件的重绘</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_Redo.htm">_GUICtrlRichEdit_Redo</a></td>
  <td>对最后的撤消作重做操作</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_ReplaceText.htm">_GUICtrlRichEdit_ReplaceText</a></td>
  <td>替换所选的文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_ResumeRedraw.htm">_GUICtrlRichEdit_ResumeRedraw</a></td>
  <td>恢复控件刷新</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_ScrollLineOrPage.htm">_GUICtrlRichEdit_ScrollLineOrPage</a></td>
  <td>滚动一行或一页的文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_ScrollLines.htm">_GUICtrlRichEdit_ScrollLines</a></td>
  <td>滚动多行文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_ScrollToCaret.htm">_GUICtrlRichEdit_ScrollToCaret</a></td>
  <td>滚动到插入符号所在行</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetBkColor.htm">_GUICtrlRichEdit_SetBkColor</a></td>
  <td>设置控件的背景颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetCharAttributes.htm">_GUICtrlRichEdit_SetCharAttributes</a></td>
  <td>打开或关闭选定文本,(或者没有选择时,则取插入点的文本) 的属性</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetCharBkColor.htm">_GUICtrlRichEdit_SetCharBkColor</a></td>
  <td>设置选定文本 (或没有选定时,设置插入点插入文本) 的背景颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetCharColor.htm">_GUICtrlRichEdit_SetCharColor</a></td>
  <td>设置所选文本 (或者没有选中时,设置插入点插入文本) 的颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetEventMask.htm">_GUICtrlRichEdit_SetEventMask</a></td>
  <td>发送通知消息到指定的父窗口</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetFont.htm">_GUICtrlRichEdit_SetFont</a></td>
  <td>设置选定文本(或者没有选定时,设置插入点插入文本) 的字体属性</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetLimitOnText.htm">_GUICtrlRichEdit_SetLimitOnText</a></td>
  <td>修改可以键入的字符数,粘贴或将流(streamed)作为 Rich 文本格式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetModified.htm">_GUICtrlRichEdit_SetModified</a></td>
  <td>设置或清除修改标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetParaAlignment.htm">_GUICtrlRichEdit_SetParaAlignment</a></td>
  <td>设置当前选定段落 (或者没有选择时,设置插入点所在段落) 的对齐方式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetParaAttributes.htm">_GUICtrlRichEdit_SetParaAttributes</a></td>
  <td>设置(第一)当前选择(或没有选择时的插入点所在段落)的属性</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetParaBorder.htm">_GUICtrlRichEdit_SetParaBorder</a></td>
  <td>设置(第一)当前选择(或没有选择时的插入点所在段落)的边框</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetParaIndents.htm">_GUICtrlRichEdit_SetParaIndents</a></td>
  <td>设置(第一)当前选择(或没有选择时的插入点所在段落)的缩进</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetParaNumbering.htm">_GUICtrlRichEdit_SetParaNumbering</a></td>
  <td>设置(第一)当前选择(或没有选择时的插入点所在段落)的编号方式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetParaShading.htm">_GUICtrlRichEdit_SetParaShading</a></td>
  <td>设置(第一)当前选择(或没有选择时的插入点所在段落)的明暗处理</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetParaSpacing.htm">_GUICtrlRichEdit_SetParaSpacing</a></td>
  <td>设置(第一)当前选择(或没有选择时的插入点所在段落)的段落间距</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetParaTabStops.htm">_GUICtrlRichEdit_SetParaTabStops</a></td>
  <td>设置(第一)当前选择(或没有选择时的插入点所在段落)的制表位</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetPasswordChar.htm">_GUICtrlRichEdit_SetPasswordChar</a></td>
  <td>设置代替用户输入文本显示的密码字符</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetReadOnly.htm">_GUICtrlRichEdit_SetReadOnly</a></td>
  <td>设置或删除只读状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetRECT.htm">_GUICtrlRichEdit_SetRECT</a></td>
  <td>设置控件的格式化矩形</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetScrollPos.htm">_GUICtrlRichEdit_SetScrollPos</a></td>
  <td>设置滚动起始点 ($ix,$iY) 在控件的左上角</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetSel.htm">_GUICtrlRichEdit_SetSel</a></td>
  <td>设置选择字符的高、低位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetSpaceUnit.htm">_GUICtrlRichEdit_SetSpaceUnit</a></td>
  <td>设置水平和垂直空间计算单位,供 _GUICtrlRichEdit 函数的参数使用</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetTabStops.htm">_GUICtrlRichEdit_SetTabStops</a></td>
  <td>设置控件制表位</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetText.htm">_GUICtrlRichEdit_SetText</a></td>
  <td>设置控件的文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetUndoLimit.htm">_GUICtrlRichEdit_SetUndoLimit</a></td>
  <td>设置撤消队列可以存储的最大数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_SetZoom.htm">_GUICtrlRichEdit_SetZoom</a></td>
  <td>设置控件缩放级别</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_StreamFromFile.htm">_GUICtrlRichEdit_StreamFromFile</a></td>
  <td>从文件中设置控件的文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_StreamFromVar.htm">_GUICtrlRichEdit_StreamFromVar</a></td>
  <td>从变量设置控件中的文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_StreamToFile.htm">_GUICtrlRichEdit_StreamToFile</a></td>
  <td>控件的内容写入到文件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_StreamToVar.htm">_GUICtrlRichEdit_StreamToVar</a></td>
  <td>控件内容写入到变量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlRichEdit_Undo.htm">_GUICtrlRichEdit_Undo</a></td>
  <td>撤消控件的撤消队列中的最后编辑操作</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_ClearSel.htm">_GUICtrlSlider_ClearSel</a></td>
  <td>清除当前选择范围</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_ClearTics.htm">_GUICtrlSlider_ClearTics</a></td>
  <td>移除滑块中当前刻度线</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_Create.htm">_GUICtrlSlider_Create</a></td>
  <td>创建滑块控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_Destroy.htm">_GUICtrlSlider_Destroy</a></td>
  <td>删除控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetBuddy.htm">_GUICtrlSlider_GetBuddy</a></td>
  <td>检索特定位置与平滑调节控件合作的窗口句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetChannelRect.htm">_GUICtrlSlider_GetChannelRect</a></td>
  <td>检索滑块通道矩形边界的大小和位置,返回数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetChannelRectEx.htm">_GUICtrlSlider_GetChannelRectEx</a></td>
  <td>检索滑块通道矩形边界的大小和位置,返回数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetLineSize.htm">_GUICtrlSlider_GetLineSize</a></td>
  <td>检索滑动条的通道大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetLogicalTics.htm">_GUICtrlSlider_GetLogicalTics</a></td>
  <td>检索包含滑块刻度逻辑位置的数组</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetNumTics.htm">_GUICtrlSlider_GetNumTics</a></td>
  <td>检索滑块的刻度数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetPageSize.htm">_GUICtrlSlider_GetPageSize</a></td>
  <td>检索滑块页面大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetPos.htm">_GUICtrlSlider_GetPos</a></td>
  <td>检索滑块逻辑位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetRange.htm">_GUICtrlSlider_GetRange</a></td>
  <td>检索滑块的最高和最低位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetRangeMax.htm">_GUICtrlSlider_GetRangeMax</a></td>
  <td>检索滑块的最大位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetRangeMin.htm">_GUICtrlSlider_GetRangeMin</a></td>
  <td>检索滑块的最低位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetSel.htm">_GUICtrlSlider_GetSel</a></td>
  <td>检索当前选择范围的起始和结束位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetSelEnd.htm">_GUICtrlSlider_GetSelEnd</a></td>
  <td>检索当前选择范围的结束位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetSelStart.htm">_GUICtrlSlider_GetSelStart</a></td>
  <td>检索当前选择范围的起始位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetThumbLength.htm">_GUICtrlSlider_GetThumbLength</a></td>
  <td>检索滑块(指针)的长度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetThumbRect.htm">_GUICtrlSlider_GetThumbRect</a></td>
  <td>检索滑块边界矩形的大小和位置,返回数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetThumbRectEx.htm">_GUICtrlSlider_GetThumbRectEx</a></td>
  <td>检索滑块边界矩形的大小和位置,返回数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetTic.htm">_GUICtrlSlider_GetTic</a></td>
  <td>检索刻度标记的逻辑位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetTicPos.htm">_GUICtrlSlider_GetTicPos</a></td>
  <td>检索刻度标记的当前物理位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetToolTips.htm">_GUICtrlSlider_GetToolTips</a></td>
  <td>检索分配给滑块的工具提示控件句柄(如果存在时).</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_GetUnicodeFormat.htm">_GUICtrlSlider_GetUnicodeFormat</a></td>
  <td>检索控件的 Unicode 字符格式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_SetBuddy.htm">_GUICtrlSlider_SetBuddy</a></td>
  <td>指定滑块控件合作窗口</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_SetLineSize.htm">_GUICtrlSlider_SetLineSize</a></td>
  <td>检索滑动条的通道大小 （此处依据示例脚本汉化）</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_SetPageSize.htm">_GUICtrlSlider_SetPageSize</a></td>
  <td>检索滑动条的页面大小 （此处依据示例脚本汉化）</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_SetPos.htm">_GUICtrlSlider_SetPos</a></td>
  <td>设置当前滑块的逻辑位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_SetRange.htm">_GUICtrlSlider_SetRange</a></td>
  <td>设置滑块最低和最高逻辑位置范围</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_SetRangeMax.htm">_GUICtrlSlider_SetRangeMax</a></td>
  <td>设置滑块的最大逻辑位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_SetRangeMin.htm">_GUICtrlSlider_SetRangeMin</a></td>
  <td>Sets the minimum logical position for the slider</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_SetSel.htm">_GUICtrlSlider_SetSel</a></td>
  <td>设置控件有效选择范围的开始和结束位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_SetSelEnd.htm">_GUICtrlSlider_SetSelEnd</a></td>
  <td>设置当前选择范围的逻辑结束位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_SetSelStart.htm">_GUICtrlSlider_SetSelStart</a></td>
  <td>设置当前选择范围的逻辑起点位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_SetThumbLength.htm">_GUICtrlSlider_SetThumbLength</a></td>
  <td>设置滑块(指针)长度.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_SetTic.htm">_GUICtrlSlider_SetTic</a></td>
  <td>设置滑块指定逻辑位置的刻度标记</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_SetTicFreq.htm">_GUICtrlSlider_SetTicFreq</a></td>
  <td>设置滑块刻度间隔频率</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_SetTipSide.htm">_GUICtrlSlider_SetTipSide</a></td>
  <td>设置工具提示控件位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_SetToolTips.htm">_GUICtrlSlider_SetToolTips</a></td>
  <td>分配工具提示控件到滑块控件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlSlider_SetUnicodeFormat.htm">_GUICtrlSlider_SetUnicodeFormat</a></td>
  <td>设置控件 Unicode 字符格式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_Create.htm">_GUICtrlStatusBar_Create</a></td>
  <td>创建状态栏</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_Destroy.htm">_GUICtrlStatusBar_Destroy</a></td>
  <td>删除控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_EmbedControl.htm">_GUICtrlStatusBar_EmbedControl</a></td>
  <td>嵌入子控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_GetBorders.htm">_GUICtrlStatusBar_GetBorders</a></td>
  <td>检索水平/垂直边框的当前宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_GetBordersHorz.htm">_GUICtrlStatusBar_GetBordersHorz</a></td>
  <td>检索当前水平边框宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_GetBordersRect.htm">_GUICtrlStatusBar_GetBordersRect</a></td>
  <td>检索当前矩形边框宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_GetBordersVert.htm">_GUICtrlStatusBar_GetBordersVert</a></td>
  <td>检索当前垂直边框宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_GetCount.htm">_GUICtrlStatusBar_GetCount</a></td>
  <td>返回(状态栏)各部分数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_GetHeight.htm">_GUICtrlStatusBar_GetHeight</a></td>
  <td>检索部件高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_GetIcon.htm">_GUICtrlStatusBar_GetIcon</a></td>
  <td>检索部件图标</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_GetParts.htm">_GUICtrlStatusBar_GetParts</a></td>
  <td>检索部件的数量和界限</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_GetRect.htm">_GUICtrlStatusBar_GetRect</a></td>
  <td>检索部件边界矩形,返回数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_GetRectEx.htm">_GUICtrlStatusBar_GetRectEx</a></td>
  <td>检索部件边界矩形,返回数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_GetText.htm">_GUICtrlStatusBar_GetText</a></td>
  <td>返回指定部分文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_GetTextFlags.htm">_GUICtrlStatusBar_GetTextFlags</a></td>
  <td>检索部件文本长度标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_GetTextLength.htm">_GUICtrlStatusBar_GetTextLength</a></td>
  <td>检索部件文本长度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_GetTextLengthEx.htm">_GUICtrlStatusBar_GetTextLengthEx</a></td>
  <td>检索部件的 uFlag</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_GetTipText.htm">_GUICtrlStatusBar_GetTipText</a></td>
  <td>检索部件工具提示文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_GetUnicodeFormat.htm">_GUICtrlStatusBar_GetUnicodeFormat</a></td>
  <td>检索 Unicode 字符格式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_GetWidth.htm">_GUICtrlStatusBar_GetWidth</a></td>
  <td>检索部件的宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_IsSimple.htm">_GUICtrlStatusBar_IsSimple</a></td>
  <td>检查状态栏控件是否为简单模式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_Resize.htm">_GUICtrlStatusBar_Resize</a></td>
  <td>重新定义状态栏大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_SetBkColor.htm">_GUICtrlStatusBar_SetBkColor</a></td>
  <td>设置背景颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_SetIcon.htm">_GUICtrlStatusBar_SetIcon</a></td>
  <td>设置部件图标</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_SetMinHeight.htm">_GUICtrlStatusBar_SetMinHeight</a></td>
  <td>设置状态窗口绘图区域最低高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_SetParts.htm">_GUICtrlStatusBar_SetParts</a></td>
  <td>设置部件数量与边框</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_SetSimple.htm">_GUICtrlStatusBar_SetSimple</a></td>
  <td>指定是否显示简单文本状态窗口, 或显示所有窗口部件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_SetText.htm">_GUICtrlStatusBar_SetText</a></td>
  <td>设置状态窗口指定部件的文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_SetTipText.htm">_GUICtrlStatusBar_SetTipText</a></td>
  <td>设置部件的工具提示文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_SetUnicodeFormat.htm">_GUICtrlStatusBar_SetUnicodeFormat</a></td>
  <td>设置 Unicode 字符格式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlStatusBar_ShowHide.htm">_GUICtrlStatusBar_ShowHide</a></td>
  <td>显示/隐藏状态栏控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_ActivateTab.htm">_GUICtrlTab_ActivateTab</a></td>
  <td>Activates a tab by its index</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_ClickTab.htm">_GUICtrlTab_ClickTab</a></td>
  <td>点击一个标签</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_Create.htm">_GUICtrlTab_Create</a></td>
  <td>创建一个标签控件(TabControl)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_DeleteAllItems.htm">_GUICtrlTab_DeleteAllItems</a></td>
  <td>删除所有标签</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_DeleteItem.htm">_GUICtrlTab_DeleteItem</a></td>
  <td>删除一个标签</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_DeselectAll.htm">_GUICtrlTab_DeselectAll</a></td>
  <td>复位标签选项卡,清除任何被设置为按下的状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_Destroy.htm">_GUICtrlTab_Destroy</a></td>
  <td>删除控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_FindTab.htm">_GUICtrlTab_FindTab</a></td>
  <td>通过指定的文本搜索一个标签.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_GetCurFocus.htm">_GUICtrlTab_GetCurFocus</a></td>
  <td>返回控件中焦点标签的索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_GetCurSel.htm">_GUICtrlTab_GetCurSel</a></td>
  <td>检测当前选择的标签</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_GetDisplayRect.htm">_GUICtrlTab_GetDisplayRect</a></td>
  <td>检索客户区显示的矩形,返回数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_GetDisplayRectEx.htm">_GUICtrlTab_GetDisplayRectEx</a></td>
  <td>检索客户区显示的矩形,返回数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_GetExtendedStyle.htm">_GUICtrlTab_GetExtendedStyle</a></td>
  <td>检索当前正在使用的扩展样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_GetImageList.htm">_GUICtrlTab_GetImageList</a></td>
  <td>返回标签控件图像列表.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_GetItem.htm">_GUICtrlTab_GetItem</a></td>
  <td>返回一个Tab标签信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_GetItemCount.htm">_GUICtrlTab_GetItemCount</a></td>
  <td>返回标签的数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_GetItemImage.htm">_GUICtrlTab_GetItemImage</a></td>
  <td>检索标签图像索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_GetItemParam.htm">_GUICtrlTab_GetItemParam</a></td>
  <td>检索标签的 Param 参数数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_GetItemRect.htm">_GUICtrlTab_GetItemRect</a></td>
  <td>检索标签的边界矩形,返回数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_GetItemRectEx.htm">_GUICtrlTab_GetItemRectEx</a></td>
  <td>检索标签的边界矩形,返回数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_GetItemState.htm">_GUICtrlTab_GetItemState</a></td>
  <td>检索标签的状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_GetItemText.htm">_GUICtrlTab_GetItemText</a></td>
  <td>返回一个标签控件的文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_GetRowCount.htm">_GUICtrlTab_GetRowCount</a></td>
  <td>检索当前标签行数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_GetToolTips.htm">_GUICtrlTab_GetToolTips</a></td>
  <td>检索控件关联的工具提示控件句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_GetUnicodeFormat.htm">_GUICtrlTab_GetUnicodeFormat</a></td>
  <td>检索控件的 Unicode 字符格式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_HighlightItem.htm">_GUICtrlTab_HighlightItem</a></td>
  <td>设置标签项目高亮状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_HitTest.htm">_GUICtrlTab_HitTest</a></td>
  <td>确定测试点位于控件何处</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_InsertItem.htm">_GUICtrlTab_InsertItem</a></td>
  <td>插入新标签</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_RemoveImage.htm">_GUICtrlTab_RemoveImage</a></td>
  <td>删除控件图像列表的图像</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_SetCurFocus.htm">_GUICtrlTab_SetCurFocus</a></td>
  <td>设置指定标签的焦点</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_SetCurSel.htm">_GUICtrlTab_SetCurSel</a></td>
  <td>选择标签</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_SetExtendedStyle.htm">_GUICtrlTab_SetExtendedStyle</a></td>
  <td>设置当前使用的扩展样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_SetImageList.htm">_GUICtrlTab_SetImageList</a></td>
  <td>设置与标签控件关联的图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_SetItem.htm">_GUICtrlTab_SetItem</a></td>
  <td>设置标签选项卡的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_SetItemImage.htm">_GUICtrlTab_SetItemImage</a></td>
  <td>设置标签选项卡图像</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_SetItemParam.htm">_GUICtrlTab_SetItemParam</a></td>
  <td>设置标签 param 数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_SetItemSize.htm">_GUICtrlTab_SetItemSize</a></td>
  <td>设置固定宽度制表符或所有者绘制控件的宽度和高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_SetItemState.htm">_GUICtrlTab_SetItemState</a></td>
  <td>设置标签状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_SetItemText.htm">_GUICtrlTab_SetItemText</a></td>
  <td>设置标签文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_SetMinTabWidth.htm">_GUICtrlTab_SetMinTabWidth</a></td>
  <td>设置标签项目的最小宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_SetPadding.htm">_GUICtrlTab_SetPadding</a></td>
  <td>设置标签图标和标签文本周围的填充空间</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_SetToolTips.htm">_GUICtrlTab_SetToolTips</a></td>
  <td>设置控件关联的工具提示控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTab_SetUnicodeFormat.htm">_GUICtrlTab_SetUnicodeFormat</a></td>
  <td>设置控件 Unicode 字符格式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_AddBitmap.htm">_GUICtrlToolbar_AddBitmap</a></td>
  <td>添加图像到图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_AddButton.htm">_GUICtrlToolbar_AddButton</a></td>
  <td>添加按钮</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_AddButtonSep.htm">_GUICtrlToolbar_AddButtonSep</a></td>
  <td>添加一个分隔符</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_AddString.htm">_GUICtrlToolbar_AddString</a></td>
  <td>添加新字符串到工具栏的字符串池</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_ButtonCount.htm">_GUICtrlToolbar_ButtonCount</a></td>
  <td>检索按钮数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_CheckButton.htm">_GUICtrlToolbar_CheckButton</a></td>
  <td>选中或取消选中某个按钮</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_ClickAccel.htm">_GUICtrlToolbar_ClickAccel</a></td>
  <td>使用快捷键点击特定按钮</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_ClickButton.htm">_GUICtrlToolbar_ClickButton</a></td>
  <td>点击特定按钮</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_ClickIndex.htm">_GUICtrlToolbar_ClickIndex</a></td>
  <td>使用索引点击特定按钮</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_CommandToIndex.htm">_GUICtrlToolbar_CommandToIndex</a></td>
  <td>检索指定命令标识符相关联的按钮索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_Create.htm">_GUICtrlToolbar_Create</a></td>
  <td>创建一个工具栏控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_Customize.htm">_GUICtrlToolbar_Customize</a></td>
  <td>显示自定义工具栏对话框</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_DeleteButton.htm">_GUICtrlToolbar_DeleteButton</a></td>
  <td>删除工具栏按钮</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_Destroy.htm">_GUICtrlToolbar_Destroy</a></td>
  <td>删除控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_EnableButton.htm">_GUICtrlToolbar_EnableButton</a></td>
  <td>启用或禁用指定按钮</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_FindToolbar.htm">_GUICtrlToolbar_FindToolbar</a></td>
  <td>查找一个指定工具栏</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetAnchorHighlight.htm">_GUICtrlToolbar_GetAnchorHighlight</a></td>
  <td>检索定位高亮设置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetBitmapFlags.htm">_GUICtrlToolbar_GetBitmapFlags</a></td>
  <td>检索位图类型标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetButtonBitmap.htm">_GUICtrlToolbar_GetButtonBitmap</a></td>
  <td>检索按钮相关位图的索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetButtonInfo.htm">_GUICtrlToolbar_GetButtonInfo</a></td>
  <td>检索按钮信息,返回数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetButtonInfoEx.htm">_GUICtrlToolbar_GetButtonInfoEx</a></td>
  <td>检索按钮信息,返回数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetButtonParam.htm">_GUICtrlToolbar_GetButtonParam</a></td>
  <td>检索按钮参数值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetButtonRect.htm">_GUICtrlToolbar_GetButtonRect</a></td>
  <td>检索按钮的矩形,返回数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetButtonRectEx.htm">_GUICtrlToolbar_GetButtonRectEx</a></td>
  <td>检索按钮的矩形,返回数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetButtonSize.htm">_GUICtrlToolbar_GetButtonSize</a></td>
  <td>检索当前按钮宽度和高度的像素值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetButtonState.htm">_GUICtrlToolbar_GetButtonState</a></td>
  <td>检索指定按钮的状态信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetButtonStyle.htm">_GUICtrlToolbar_GetButtonStyle</a></td>
  <td>检索按钮的样式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetButtonText.htm">_GUICtrlToolbar_GetButtonText</a></td>
  <td>检索按钮的显示文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetColorScheme.htm">_GUICtrlToolbar_GetColorScheme</a></td>
  <td>检索配色方案信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetDisabledImageList.htm">_GUICtrlToolbar_GetDisabledImageList</a></td>
  <td>检索按钮禁用状态的图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetExtendedStyle.htm">_GUICtrlToolbar_GetExtendedStyle</a></td>
  <td>检索扩展样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetHotImageList.htm">_GUICtrlToolbar_GetHotImageList</a></td>
  <td>检索热按钮状态图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetHotItem.htm">_GUICtrlToolbar_GetHotItem</a></td>
  <td>检索热项目索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetImageList.htm">_GUICtrlToolbar_GetImageList</a></td>
  <td>检索默认(常规)状态图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetInsertMark.htm">_GUICtrlToolbar_GetInsertMark</a></td>
  <td>检索当前插入标记</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetInsertMarkColor.htm">_GUICtrlToolbar_GetInsertMarkColor</a></td>
  <td>检索绘制插入标记的颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetMaxSize.htm">_GUICtrlToolbar_GetMaxSize</a></td>
  <td>检索所有可见按钮和分隔符的总大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetMetrics.htm">_GUICtrlToolbar_GetMetrics</a></td>
  <td>检索工具栏控件规格</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetPadding.htm">_GUICtrlToolbar_GetPadding</a></td>
  <td>检索水平与垂直填充</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetRows.htm">_GUICtrlToolbar_GetRows</a></td>
  <td>返回按钮排(行)数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetString.htm">_GUICtrlToolbar_GetString</a></td>
  <td>从字符串池得到字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetStyle.htm">_GUICtrlToolbar_GetStyle</a></td>
  <td>检索工具栏的样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetStyleAltDrag.htm">_GUICtrlToolbar_GetStyleAltDrag</a></td>
  <td>检索控件是否具有按钮可以拖动样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetStyleCustomErase.htm">_GUICtrlToolbar_GetStyleCustomErase</a></td>
  <td>检索控件是否具有生成 NM_CUSTOMDRAW 通知消息的样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetStyleFlat.htm">_GUICtrlToolbar_GetStyleFlat</a></td>
  <td>检索控件是否为平面控件样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetStyleList.htm">_GUICtrlToolbar_GetStyleList</a></td>
  <td>检索控件是否为按钮文本在位图右边的样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetStyleRegisterDrop.htm">_GUICtrlToolbar_GetStyleRegisterDrop</a></td>
  <td>检索控件是否具有生成 TBN_GETOBJECT 通知消息的样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetStyleToolTips.htm">_GUICtrlToolbar_GetStyleToolTips</a></td>
  <td>检索控件是否为具有工具提示控件的样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetStyleTransparent.htm">_GUICtrlToolbar_GetStyleTransparent</a></td>
  <td>检索控件是否为透明的样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetStyleWrapable.htm">_GUICtrlToolbar_GetStyleWrapable</a></td>
  <td>检索控件是否具有换行样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetTextRows.htm">_GUICtrlToolbar_GetTextRows</a></td>
  <td>检索按钮显示文本行的最大行数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetToolTips.htm">_GUICtrlToolbar_GetToolTips</a></td>
  <td>返回 ToolTip 控件句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_GetUnicodeFormat.htm">_GUICtrlToolbar_GetUnicodeFormat</a></td>
  <td>检索 Unicode 字符格式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_HideButton.htm">_GUICtrlToolbar_HideButton</a></td>
  <td>隐藏或显示指定的按钮</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_HighlightButton.htm">_GUICtrlToolbar_HighlightButton</a></td>
  <td>设置按钮高亮状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_HitTest.htm">_GUICtrlToolbar_HitTest</a></td>
  <td>确定测试点的位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_IndexToCommand.htm">_GUICtrlToolbar_IndexToCommand</a></td>
  <td>检索按钮相关的命令标识符</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_InsertButton.htm">_GUICtrlToolbar_InsertButton</a></td>
  <td>插入按钮</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_InsertMarkHitTest.htm">_GUICtrlToolbar_InsertMarkHitTest</a></td>
  <td>检索点的插入标记信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_IsButtonChecked.htm">_GUICtrlToolbar_IsButtonChecked</a></td>
  <td>检索按钮是否被选中</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_IsButtonEnabled.htm">_GUICtrlToolbar_IsButtonEnabled</a></td>
  <td>检索按钮是否启用</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_IsButtonHidden.htm">_GUICtrlToolbar_IsButtonHidden</a></td>
  <td>检索按钮是否隐藏</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_IsButtonHighlighted.htm">_GUICtrlToolbar_IsButtonHighlighted</a></td>
  <td>检索按钮是否高亮</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_IsButtonIndeterminate.htm">_GUICtrlToolbar_IsButtonIndeterminate</a></td>
  <td>检索按钮是否为不确定状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_IsButtonPressed.htm">_GUICtrlToolbar_IsButtonPressed</a></td>
  <td>检索按钮是否被按下</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_LoadBitmap.htm">_GUICtrlToolbar_LoadBitmap</a></td>
  <td>从文件添加位图的图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_LoadImages.htm">_GUICtrlToolbar_LoadImages</a></td>
  <td>加载系统定义的按钮图像到工具栏控件的图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_MapAccelerator.htm">_GUICtrlToolbar_MapAccelerator</a></td>
  <td>检索按钮对应的快捷键 ID</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_MoveButton.htm">_GUICtrlToolbar_MoveButton</a></td>
  <td>使用索引移动按钮的位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_PressButton.htm">_GUICtrlToolbar_PressButton</a></td>
  <td>按压或释放指定的按钮</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetAnchorHighlight.htm">_GUICtrlToolbar_SetAnchorHighlight</a></td>
  <td>设置定位高亮</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetBitmapSize.htm">_GUICtrlToolbar_SetBitmapSize</a></td>
  <td>设置工具栏位图图像的大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetButtonBitMap.htm">_GUICtrlToolbar_SetButtonBitMap</a></td>
  <td>设置按钮相关的位图索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetButtonInfo.htm">_GUICtrlToolbar_SetButtonInfo</a></td>
  <td>设置按钮扩展信息,使用参数.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetButtonInfoEx.htm">_GUICtrlToolbar_SetButtonInfoEx</a></td>
  <td>设置按钮扩展信息,使用数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetButtonParam.htm">_GUICtrlToolbar_SetButtonParam</a></td>
  <td>设置按钮参数值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetButtonSize.htm">_GUICtrlToolbar_SetButtonSize</a></td>
  <td>设置工具栏按钮的大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetButtonState.htm">_GUICtrlToolbar_SetButtonState</a></td>
  <td>设置按钮的状态信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetButtonStyle.htm">_GUICtrlToolbar_SetButtonStyle</a></td>
  <td>设置按钮的样式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetButtonText.htm">_GUICtrlToolbar_SetButtonText</a></td>
  <td>设置按钮的显示文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetButtonWidth.htm">_GUICtrlToolbar_SetButtonWidth</a></td>
  <td>设置工具栏按钮宽度最小和最大值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetCmdID.htm">_GUICtrlToolbar_SetCmdID</a></td>
  <td>设置工具栏按钮命令标识符</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetColorScheme.htm">_GUICtrlToolbar_SetColorScheme</a></td>
  <td>设置配色方案信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetDisabledImageList.htm">_GUICtrlToolbar_SetDisabledImageList</a></td>
  <td>设置禁用状态图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetDrawTextFlags.htm">_GUICtrlToolbar_SetDrawTextFlags</a></td>
  <td>设置工具栏文本绘制标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetExtendedStyle.htm">_GUICtrlToolbar_SetExtendedStyle</a></td>
  <td>设置控件扩展样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetHotImageList.htm">_GUICtrlToolbar_SetHotImageList</a></td>
  <td>设置热按钮状态图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetHotItem.htm">_GUICtrlToolbar_SetHotItem</a></td>
  <td>设置热项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetImageList.htm">_GUICtrlToolbar_SetImageList</a></td>
  <td>设置默认(常规)状态按钮的图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetIndent.htm">_GUICtrlToolbar_SetIndent</a></td>
  <td>设置第一按钮缩进</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetIndeterminate.htm">_GUICtrlToolbar_SetIndeterminate</a></td>
  <td>设置或清除按钮的不确定状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetInsertMark.htm">_GUICtrlToolbar_SetInsertMark</a></td>
  <td>设置工具栏当前插入标记</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetInsertMarkColor.htm">_GUICtrlToolbar_SetInsertMarkColor</a></td>
  <td>设置绘制插入标记的颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetMaxTextRows.htm">_GUICtrlToolbar_SetMaxTextRows</a></td>
  <td>设置显示按钮文本的最大行数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetMetrics.htm">_GUICtrlToolbar_SetMetrics</a></td>
  <td>检索工具栏控件规格</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetPadding.htm">_GUICtrlToolbar_SetPadding</a></td>
  <td>设置控件填充</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetParent.htm">_GUICtrlToolbar_SetParent</a></td>
  <td>设置窗口控件发送通知消息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetRows.htm">_GUICtrlToolbar_SetRows</a></td>
  <td>设置按钮行数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetStyle.htm">_GUICtrlToolbar_SetStyle</a></td>
  <td>设置控件样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetStyleAltDrag.htm">_GUICtrlToolbar_SetStyleAltDrag</a></td>
  <td>设置控件按钮是否允许被拖动</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetStyleCustomErase.htm">_GUICtrlToolbar_SetStyleCustomErase</a></td>
  <td>设置控件是否生成 NM_CUSTOMDRAW 通知消息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetStyleFlat.htm">_GUICtrlToolbar_SetStyleFlat</a></td>
  <td>设置控件是否为平面类型</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetStyleList.htm">_GUICtrlToolbar_SetStyleList</a></td>
  <td>设置按钮文本是否在位图的右边</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetStyleRegisterDrop.htm">_GUICtrlToolbar_SetStyleRegisterDrop</a></td>
  <td>设置控件是否生成 TBN_GETOBJECT 通知消息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetStyleToolTips.htm">_GUICtrlToolbar_SetStyleToolTips</a></td>
  <td>设置控件是否有工具提示</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetStyleTransparent.htm">_GUICtrlToolbar_SetStyleTransparent</a></td>
  <td>设置控件是否透明</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetStyleWrapable.htm">_GUICtrlToolbar_SetStyleWrapable</a></td>
  <td>设置控件按钮是否 wrapable(换行)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetToolTips.htm">_GUICtrlToolbar_SetToolTips</a></td>
  <td>设置工具栏关联工具提示控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetUnicodeFormat.htm">_GUICtrlToolbar_SetUnicodeFormat</a></td>
  <td>设置 Unicode 字符格式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlToolbar_SetWindowTheme.htm">_GUICtrlToolbar_SetWindowTheme</a></td>
  <td>设置可视化样式(系统主题)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_Add.htm">_GUICtrlTreeView_Add</a></td>
  <td>添加主项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_AddChild.htm">_GUICtrlTreeView_AddChild</a></td>
  <td>添加子项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_AddChildFirst.htm">_GUICtrlTreeView_AddChildFirst</a></td>
  <td>添加第一子项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_AddFirst.htm">_GUICtrlTreeView_AddFirst</a></td>
  <td>添加第一主项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_BeginUpdate.htm">_GUICtrlTreeView_BeginUpdate</a></td>
  <td>开始控件更新,直到 EndUpdate 函数被调用</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_ClickItem.htm">_GUICtrlTreeView_ClickItem</a></td>
  <td>点击项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_Create.htm">_GUICtrlTreeView_Create</a></td>
  <td>创建一个树形查看(TreeView)控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_CreateDragImage.htm">_GUICtrlTreeView_CreateDragImage</a></td>
  <td>创建项目拖位图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_CreateSolidBitMap.htm">_GUICtrlTreeView_CreateSolidBitMap</a></td>
  <td>创建单色位图</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_Delete.htm">_GUICtrlTreeView_Delete</a></td>
  <td>删除项目及其所有子项</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_DeleteAll.htm">_GUICtrlTreeView_DeleteAll</a></td>
  <td>从树形查看(Tree-View)控件移除所有项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_DeleteChildren.htm">_GUICtrlTreeView_DeleteChildren</a></td>
  <td>删除项目的全部子项</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_Destroy.htm">_GUICtrlTreeView_Destroy</a></td>
  <td>删除控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_DisplayRect.htm">_GUICtrlTreeView_DisplayRect</a></td>
  <td>返回树项目矩形,返回数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_DisplayRectEx.htm">_GUICtrlTreeView_DisplayRectEx</a></td>
  <td>返回树项目矩形,返回数据结结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_EditText.htm">_GUICtrlTreeView_EditText</a></td>
  <td>开始就地编辑指定项的文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_EndEdit.htm">_GUICtrlTreeView_EndEdit</a></td>
  <td>结束项目的文本编辑</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_EndUpdate.htm">_GUICtrlTreeView_EndUpdate</a></td>
  <td>停止控件更新并关闭 BeginUpdate 函数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_EnsureVisible.htm">_GUICtrlTreeView_EnsureVisible</a></td>
  <td>确保项目可见,展开父项目或必要时滚动项目.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_Expand.htm">_GUICtrlTreeView_Expand</a></td>
  <td>展开或折叠父项目相关的子项列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_ExpandedOnce.htm">_GUICtrlTreeView_ExpandedOnce</a></td>
  <td>检索项目的子项列表是否至少展开一次</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_FindItem.htm">_GUICtrlTreeView_FindItem</a></td>
  <td>检索指定文本的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_FindItemEx.htm">_GUICtrlTreeView_FindItemEx</a></td>
  <td>搜索指定树目录路径的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetBkColor.htm">_GUICtrlTreeView_GetBkColor</a></td>
  <td>返回文本背景色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetBold.htm">_GUICtrlTreeView_GetBold</a></td>
  <td>检索项目文本是否为粗体样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetChecked.htm">_GUICtrlTreeView_GetChecked</a></td>
  <td>检索项目复选框是否选中</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetChildCount.htm">_GUICtrlTreeView_GetChildCount</a></td>
  <td>检索父项的子项数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetChildren.htm">_GUICtrlTreeView_GetChildren</a></td>
  <td>检索项目是否有子项</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetCount.htm">_GUICtrlTreeView_GetCount</a></td>
  <td>返回项目总数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetCut.htm">_GUICtrlTreeView_GetCut</a></td>
  <td>检索项目是否有剪切和粘贴操作</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetDropTarget.htm">_GUICtrlTreeView_GetDropTarget</a></td>
  <td>检索项目是否为拖放目标</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetEditControl.htm">_GUICtrlTreeView_GetEditControl</a></td>
  <td>检索项目文本编辑控件句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetExpanded.htm">_GUICtrlTreeView_GetExpanded</a></td>
  <td>检索项目是否展开</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetFirstChild.htm">_GUICtrlTreeView_GetFirstChild</a></td>
  <td>检索指定项目的第一个子项</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetFirstItem.htm">_GUICtrlTreeView_GetFirstItem</a></td>
  <td>检索顶层或绝对第一项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetFirstVisible.htm">_GUICtrlTreeView_GetFirstVisible</a></td>
  <td>检索第一可见项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetFocused.htm">_GUICtrlTreeView_GetFocused</a></td>
  <td>检索项目是否具有焦点</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetHeight.htm">_GUICtrlTreeView_GetHeight</a></td>
  <td>检索当前每个项目的高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetImageIndex.htm">_GUICtrlTreeView_GetImageIndex</a></td>
  <td>检索正常状态图像索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetImageListIconHandle.htm">_GUICtrlTreeView_GetImageListIconHandle</a></td>
  <td>检索图像列表句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetIndent.htm">_GUICtrlTreeView_GetIndent</a></td>
  <td>检索子项相对父项目的缩进像素值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetInsertMarkColor.htm">_GUICtrlTreeView_GetInsertMarkColor</a></td>
  <td>检索插入标记颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetISearchString.htm">_GUICtrlTreeView_GetISearchString</a></td>
  <td>检索增量搜索字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetItemByIndex.htm">_GUICtrlTreeView_GetItemByIndex</a></td>
  <td>检索子项在项目列表中的位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetItemHandle.htm">_GUICtrlTreeView_GetItemHandle</a></td>
  <td>返回项目句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetItemParam.htm">_GUICtrlTreeView_GetItemParam</a></td>
  <td>检索项目的特定应用值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetLastChild.htm">_GUICtrlTreeView_GetLastChild</a></td>
  <td>检索指定项目的最后子项</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetLineColor.htm">_GUICtrlTreeView_GetLineColor</a></td>
  <td>返回线颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetNext.htm">_GUICtrlTreeView_GetNext</a></td>
  <td>检索调用项目的下一个项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetNextChild.htm">_GUICtrlTreeView_GetNextChild</a></td>
  <td>检索同级别的下一个项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetNextSibling.htm">_GUICtrlTreeView_GetNextSibling</a></td>
  <td>检索同级别的下一个项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetNextVisible.htm">_GUICtrlTreeView_GetNextVisible</a></td>
  <td>检索指定项目的下一个可见项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetNormalImageList.htm">_GUICtrlTreeView_GetNormalImageList</a></td>
  <td>返回正常(常规)图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetParentHandle.htm">_GUICtrlTreeView_GetParentHandle</a></td>
  <td>检索父项目句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetParentParam.htm">_GUICtrlTreeView_GetParentParam</a></td>
  <td>检索项目的父控件 ID / Param(参数)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetPrev.htm">_GUICtrlTreeView_GetPrev</a></td>
  <td>检索调用项目的上一个项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetPrevChild.htm">_GUICtrlTreeView_GetPrevChild</a></td>
  <td>检索指定项目的前一子项</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetPrevSibling.htm">_GUICtrlTreeView_GetPrevSibling</a></td>
  <td>检索同级别的上一项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetPrevVisible.htm">_GUICtrlTreeView_GetPrevVisible</a></td>
  <td>检索第一个可见项之前的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetScrollTime.htm">_GUICtrlTreeView_GetScrollTime</a></td>
  <td>检索最大滚动时间</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetSelected.htm">_GUICtrlTreeView_GetSelected</a></td>
  <td>检索项目是否选中</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetSelectedImageIndex.htm">_GUICtrlTreeView_GetSelectedImageIndex</a></td>
  <td>检索选中项目的图像在图像列表中的索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetSelection.htm">_GUICtrlTreeView_GetSelection</a></td>
  <td>检索当前选定的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetSiblingCount.htm">_GUICtrlTreeView_GetSiblingCount</a></td>
  <td>检索项目的同级项目数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetState.htm">_GUICtrlTreeView_GetState</a></td>
  <td>检索项目状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetStateImageIndex.htm">_GUICtrlTreeView_GetStateImageIndex</a></td>
  <td>检索项目的状态图像索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetStateImageList.htm">_GUICtrlTreeView_GetStateImageList</a></td>
  <td>检索状态图像列表句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetText.htm">_GUICtrlTreeView_GetText</a></td>
  <td>检索项目文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetTextColor.htm">_GUICtrlTreeView_GetTextColor</a></td>
  <td>返回文本颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetToolTips.htm">_GUICtrlTreeView_GetToolTips</a></td>
  <td>得到子工具提示(ToolTip)控件句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetTree.htm">_GUICtrlTreeView_GetTree</a></td>
  <td>检索项目及其子项全部文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetUnicodeFormat.htm">_GUICtrlTreeView_GetUnicodeFormat</a></td>
  <td>检索 Unicode 字符格式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetVisible.htm">_GUICtrlTreeView_GetVisible</a></td>
  <td>检索项目在当前控件视图中是否可见</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_GetVisibleCount.htm">_GUICtrlTreeView_GetVisibleCount</a></td>
  <td>检索控件中显示完全可见的项目最大数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_HitTest.htm">_GUICtrlTreeView_HitTest</a></td>
  <td>检索测试点位置相对于控件的信息,返回结果代码.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_HitTestEx.htm">_GUICtrlTreeView_HitTestEx</a></td>
  <td>检索测试点位置相对于控件的信息,返回数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_HitTestItem.htm">_GUICtrlTreeView_HitTestItem</a></td>
  <td>检索指定坐标的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_Index.htm">_GUICtrlTreeView_Index</a></td>
  <td>检索项目在列表的位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_InsertItem.htm">_GUICtrlTreeView_InsertItem</a></td>
  <td>插入项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_IsFirstItem.htm">_GUICtrlTreeView_IsFirstItem</a></td>
  <td>检索项目是否为树的第一项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_IsParent.htm">_GUICtrlTreeView_IsParent</a></td>
  <td>检索某项目是否为另一个项目的父项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_Level.htm">_GUICtrlTreeView_Level</a></td>
  <td>检索项目缩进级别</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SelectItem.htm">_GUICtrlTreeView_SelectItem</a></td>
  <td>选中项目,并滚动到视图或刷新项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SelectItemByIndex.htm">_GUICtrlTreeView_SelectItemByIndex</a></td>
  <td>选择指定父列表索引的项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetBkColor.htm">_GUICtrlTreeView_SetBkColor</a></td>
  <td>设置背景色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetBold.htm">_GUICtrlTreeView_SetBold</a></td>
  <td>设置项目的粗体文本样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetChecked.htm">_GUICtrlTreeView_SetChecked</a></td>
  <td>设置项目复选框选中</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetCheckedByIndex.htm">_GUICtrlTreeView_SetCheckedByIndex</a></td>
  <td>设置指定索引的项目复选框选中</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetChildren.htm">_GUICtrlTreeView_SetChildren</a></td>
  <td>设置项目的子项标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetCut.htm">_GUICtrlTreeView_SetCut</a></td>
  <td>设置项目的剪切和粘贴操作</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetDropTarget.htm">_GUICtrlTreeView_SetDropTarget</a></td>
  <td>设置项目为拖放目标</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetFocused.htm">_GUICtrlTreeView_SetFocused</a></td>
  <td>设置项目的焦点</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetHeight.htm">_GUICtrlTreeView_SetHeight</a></td>
  <td>设置每个项目的高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetIcon.htm">_GUICtrlTreeView_SetIcon</a></td>
  <td>设置项目图标</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetImageIndex.htm">_GUICtrlTreeView_SetImageIndex</a></td>
  <td>设置显示项目正常状态的图标索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetIndent.htm">_GUICtrlTreeView_SetIndent</a></td>
  <td>设置树视图控件的缩进宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetInsertMark.htm">_GUICtrlTreeView_SetInsertMark</a></td>
  <td>设置插入标记</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetInsertMarkColor.htm">_GUICtrlTreeView_SetInsertMarkColor</a></td>
  <td>设置插入标记颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetItemHeight.htm">_GUICtrlTreeView_SetItemHeight</a></td>
  <td>设置项目高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetItemParam.htm">_GUICtrlTreeView_SetItemParam</a></td>
  <td>设置项目的关联值</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetLineColor.htm">_GUICtrlTreeView_SetLineColor</a></td>
  <td>设置线条颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetNormalImageList.htm">_GUICtrlTreeView_SetNormalImageList</a></td>
  <td>设置控件正常状态的图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetScrollTime.htm">_GUICtrlTreeView_SetScrollTime</a></td>
  <td>设置最大滚动时间</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetSelected.htm">_GUICtrlTreeView_SetSelected</a></td>
  <td>设置项目的选中状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetSelectedImageIndex.htm">_GUICtrlTreeView_SetSelectedImageIndex</a></td>
  <td>设置选中状态的图像索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetState.htm">_GUICtrlTreeView_SetState</a></td>
  <td>设置项目的状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetStateImageIndex.htm">_GUICtrlTreeView_SetStateImageIndex</a></td>
  <td>设置项目状态图像的图像列表索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetStateImageList.htm">_GUICtrlTreeView_SetStateImageList</a></td>
  <td>设置控件的状态图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetText.htm">_GUICtrlTreeView_SetText</a></td>
  <td>设置项目文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetTextColor.htm">_GUICtrlTreeView_SetTextColor</a></td>
  <td>设置文字颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetToolTips.htm">_GUICtrlTreeView_SetToolTips</a></td>
  <td>设置工具提示子控件句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_SetUnicodeFormat.htm">_GUICtrlTreeView_SetUnicodeFormat</a></td>
  <td>设置 Unicode 字符格式标志</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUICtrlTreeView_Sort.htm">_GUICtrlTreeView_Sort</a></td>
  <td>项目排序</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_Add.htm">_GUIImageList_Add</a></td>
  <td>添加图像到图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_AddBitmap.htm">_GUIImageList_AddBitmap</a></td>
  <td>添加位图到图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_AddIcon.htm">_GUIImageList_AddIcon</a></td>
  <td>添加图标到图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_AddMasked.htm">_GUIImageList_AddMasked</a></td>
  <td>添加图像到图像列表, 生成指定位图的掩码</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_BeginDrag.htm">_GUIImageList_BeginDrag</a></td>
  <td>开始拖动图像</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_Copy.htm">_GUIImageList_Copy</a></td>
  <td>源图像复制到目标图像索引</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_Create.htm">_GUIImageList_Create</a></td>
  <td>创建 ImageList 控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_Destroy.htm">_GUIImageList_Destroy</a></td>
  <td>销毁图像列表.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_DestroyIcon.htm">_GUIImageList_DestroyIcon</a></td>
  <td>销毁图标并清理图标占用的任何内存.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_DragEnter.htm">_GUIImageList_DragEnter</a></td>
  <td>指定显示拖动图像的窗口位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_DragLeave.htm">_GUIImageList_DragLeave</a></td>
  <td>解锁指定窗口和隐藏拖动图像,使窗口更新</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_DragMove.htm">_GUIImageList_DragMove</a></td>
  <td>拖放操作过程中移动拖放图像</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_Draw.htm">_GUIImageList_Draw</a></td>
  <td>在指定的设备环境中绘制图像列表项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_DrawEx.htm">_GUIImageList_DrawEx</a></td>
  <td>在指定的设备环境中绘制图像列表项目</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_Duplicate.htm">_GUIImageList_Duplicate</a></td>
  <td>复制现有图像列表</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_EndDrag.htm">_GUIImageList_EndDrag</a></td>
  <td>结束拖动操作</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_GetBkColor.htm">_GUIImageList_GetBkColor</a></td>
  <td>返回图像列表当前背景颜色.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_GetIcon.htm">_GUIImageList_GetIcon</a></td>
  <td>创建来自图像和图像列表掩码的图标</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_GetIconHeight.htm">_GUIImageList_GetIconHeight</a></td>
  <td>检索图像列表中的图像高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_GetIconSize.htm">_GUIImageList_GetIconSize</a></td>
  <td>检索图像列表中图像的尺寸,返回数据数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_GetIconSizeEx.htm">_GUIImageList_GetIconSizeEx</a></td>
  <td>检索图像列表中图像的尺寸,返回数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_GetIconWidth.htm">_GUIImageList_GetIconWidth</a></td>
  <td>检索图像列表中图像的宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_GetImageCount.htm">_GUIImageList_GetImageCount</a></td>
  <td>返回图像列表中图像数量</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_GetImageInfoEx.htm">_GUIImageList_GetImageInfoEx</a></td>
  <td>返回关于图像的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_Remove.htm">_GUIImageList_Remove</a></td>
  <td>删除图片列表中的图像</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_ReplaceIcon.htm">_GUIImageList_ReplaceIcon</a></td>
  <td>替换图标的图像或光标</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_SetBkColor.htm">_GUIImageList_SetBkColor</a></td>
  <td>设置图像列表背景颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_SetIconSize.htm">_GUIImageList_SetIconSize</a></td>
  <td>设置图像列表中的图像尺寸和删除图像列表中的全部图像</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_SetImageCount.htm">_GUIImageList_SetImageCount</a></td>
  <td>调整现有图像列表的大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIImageList_Swap.htm">_GUIImageList_Swap</a></td>
  <td>交换两个图像的位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_EnableScrollBar.htm">_GUIScrollBars_EnableScrollBar</a></td>
  <td>启用/禁用滚动控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_GetScrollBarInfoEx.htm">_GUIScrollBars_GetScrollBarInfoEx</a></td>
  <td>检索指定滚动控件信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_GetScrollBarRect.htm">_GUIScrollBars_GetScrollBarRect</a></td>
  <td>检索滚动控件坐标</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_GetScrollBarRGState.htm">_GUIScrollBars_GetScrollBarRGState</a></td>
  <td>检索滚动控件组件的状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_GetScrollBarXYLineButton.htm">_GUIScrollBars_GetScrollBarXYLineButton</a></td>
  <td>检索滚动控件高度(相对于水平)或宽度(相对于垂直)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_GetScrollBarXYThumbBottom.htm">_GUIScrollBars_GetScrollBarXYThumbBottom</a></td>
  <td>检索滚动条底部(相当于垂直)或右侧(相当于水平)的位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_GetScrollBarXYThumbTop.htm">_GUIScrollBars_GetScrollBarXYThumbTop</a></td>
  <td>检索滚动条顶部(相当于垂直)或左侧(相当于水平)的位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_GetScrollInfo.htm">_GUIScrollBars_GetScrollInfo</a></td>
  <td>检索滚动控件的参数,使用数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_GetScrollInfoEx.htm">_GUIScrollBars_GetScrollInfoEx</a></td>
  <td>检索滚动控件的参数,返回数据结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_GetScrollInfoMax.htm">_GUIScrollBars_GetScrollInfoMax</a></td>
  <td>检索最大滚动位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_GetScrollInfoMin.htm">_GUIScrollBars_GetScrollInfoMin</a></td>
  <td>检索最小滚动位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_GetScrollInfoPage.htm">_GUIScrollBars_GetScrollInfoPage</a></td>
  <td>检索页面大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_GetScrollInfoPos.htm">_GUIScrollBars_GetScrollInfoPos</a></td>
  <td>检索滚动框的位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_GetScrollInfoTrackPos.htm">_GUIScrollBars_GetScrollInfoTrackPos</a></td>
  <td>检索滚动框用户拖动时的即时位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_GetScrollPos.htm">_GUIScrollBars_GetScrollPos</a></td>
  <td>检索指定滚动框内滚动条的当前位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_GetScrollRange.htm">_GUIScrollBars_GetScrollRange</a></td>
  <td>检索滚动条当前最低和最高滚动位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_Init.htm">_GUIScrollBars_Init</a></td>
  <td>初始化滚动控件窗口</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_ScrollWindow.htm">_GUIScrollBars_ScrollWindow</a></td>
  <td>滚动窗口客户区的内容</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_SetScrollInfo.htm">_GUIScrollBars_SetScrollInfo</a></td>
  <td>设置滚动控件参数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_SetScrollInfoMax.htm">_GUIScrollBars_SetScrollInfoMax</a></td>
  <td>设置最大滚动位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_SetScrollInfoMin.htm">_GUIScrollBars_SetScrollInfoMin</a></td>
  <td>设置最小滚动位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_SetScrollInfoPage.htm">_GUIScrollBars_SetScrollInfoPage</a></td>
  <td>设置页面大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_SetScrollInfoPos.htm">_GUIScrollBars_SetScrollInfoPos</a></td>
  <td>设置指定滚动控件内滚动框的位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_SetScrollRange.htm">_GUIScrollBars_SetScrollRange</a></td>
  <td>设置滚动条的最小和最大位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIScrollBars_ShowScrollBar.htm">_GUIScrollBars_ShowScrollBar</a></td>
  <td>显示或隐藏指定的滚动控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_Activate.htm">_GUIToolTip_Activate</a></td>
  <td>激活或者取消激活一个控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_AddTool.htm">_GUIToolTip_AddTool</a></td>
  <td>注册工具提示控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_AdjustRect.htm">_GUIToolTip_AdjustRect</a></td>
  <td>依据窗口矩形计算文本显示的矩形</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_BitsToTTF.htm">_GUIToolTip_BitsToTTF</a></td>
  <td>编码用户位标志到 $TTF_ flags</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_Create.htm">_GUIToolTip_Create</a></td>
  <td>创建工具提示控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_DelTool.htm">_GUIToolTip_DelTool</a></td>
  <td>移除一个工具(提示)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_Destroy.htm">_GUIToolTip_Destroy</a></td>
  <td>删除工具提示(ToolTip)控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_EnumTools.htm">_GUIToolTip_EnumTools</a></td>
  <td>检索当前提示工具信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_GetBubbleHeight.htm">_GUIToolTip_GetBubbleHeight</a></td>
  <td>检索工具提示控件高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_GetBubbleSize.htm">_GUIToolTip_GetBubbleSize</a></td>
  <td>检索提示控件的宽度和高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_GetBubbleWidth.htm">_GUIToolTip_GetBubbleWidth</a></td>
  <td>返回工具提示控件的宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_GetCurrentTool.htm">_GUIToolTip_GetCurrentTool</a></td>
  <td>检索当前工具信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_GetDelayTime.htm">_GUIToolTip_GetDelayTime</a></td>
  <td>检索原始, 弹出或重绘的持续时间</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_GetMargin.htm">_GUIToolTip_GetMargin</a></td>
  <td>检索顶部,左侧,底部和右侧的边距</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_GetMarginEx.htm">_GUIToolTip_GetMarginEx</a></td>
  <td>检索顶部,左侧,底部和右侧的边距</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_GetMaxTipWidth.htm">_GUIToolTip_GetMaxTipWidth</a></td>
  <td>检索工具提示窗口的最大宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_GetText.htm">_GUIToolTip_GetText</a></td>
  <td>返回文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_GetTipBkColor.htm">_GUIToolTip_GetTipBkColor</a></td>
  <td>返回工具提示背景色.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_GetTipTextColor.htm">_GUIToolTip_GetTipTextColor</a></td>
  <td>返回文本颜色.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_GetTitleBitMap.htm">_GUIToolTip_GetTitleBitMap</a></td>
  <td>返回标题位图图标.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_GetTitleText.htm">_GUIToolTip_GetTitleText</a></td>
  <td>得到工具提示(tooltip)标题文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_GetToolCount.htm">_GUIToolTip_GetToolCount</a></td>
  <td>检索工具计数</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_GetToolInfo.htm">_GUIToolTip_GetToolInfo</a></td>
  <td>检索特定工具的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_HitTest.htm">_GUIToolTip_HitTest</a></td>
  <td>检索工具控件保留的工具提示信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_NewToolRect.htm">_GUIToolTip_NewToolRect</a></td>
  <td>设置提示控件新的边界矩形</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_Pop.htm">_GUIToolTip_Pop</a></td>
  <td>从控件移除显示的工具提示(ToolTip)</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_PopUp.htm">_GUIToolTip_PopUp</a></td>
  <td>弹出显示工具提示(ToolTip)于最后鼠标消息所在坐标.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_SetDelayTime.htm">_GUIToolTip_SetDelayTime</a></td>
  <td>设置原始, 弹出或重绘的持续时间</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_SetMargin.htm">_GUIToolTip_SetMargin</a></td>
  <td>设置顶部,左侧,底部和右侧边距</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_SetMaxTipWidth.htm">_GUIToolTip_SetMaxTipWidth</a></td>
  <td>设置工具提示(ToolTip)窗口最大宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_SetTipBkColor.htm">_GUIToolTip_SetTipBkColor</a></td>
  <td>设置背景色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_SetTipTextColor.htm">_GUIToolTip_SetTipTextColor</a></td>
  <td>设置文本颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_SetTitle.htm">_GUIToolTip_SetTitle</a></td>
  <td>添加标准图标和标题字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_SetToolInfo.htm">_GUIToolTip_SetToolInfo</a></td>
  <td>设置工具的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_SetWindowTheme.htm">_GUIToolTip_SetWindowTheme</a></td>
  <td>设置可视化样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_ToolExists.htm">_GUIToolTip_ToolExists</a></td>
  <td>确定工具是否存在.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_ToolToArray.htm">_GUIToolTip_ToolToArray</a></td>
  <td>传输工具信息结构到数组</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_TrackActivate.htm">_GUIToolTip_TrackActivate</a></td>
  <td>激活或停用工具提示跟踪</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_TrackPosition.htm">_GUIToolTip_TrackPosition</a></td>
  <td>设置跟踪工具提示的位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_TTFToBits.htm">_GUIToolTip_TTFToBits</a></td>
  <td>解码 $TTF_flags 到用户位标志.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_Update.htm">_GUIToolTip_Update</a></td>
  <td>强制使工具提示(tooltip)重绘.</td>
</tr>
<tr>
  <td><a href="libfunctions/_GUIToolTip_UpdateTipText.htm">_GUIToolTip_UpdateTipText</a></td>
  <td>设置工具提示文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_HexToString.htm">_HexToString</a></td>
  <td>转换一个十六进制字符串到字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEAction.htm">_IEAction</a></td>
  <td>在浏览器中执行预定义的一些简单操作.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEAttach.htm">_IEAttach</a></td>
  <td>附加到指定的 Internet Explorer 实例,基于您所选择的模式按照字符串/子字符串匹配.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEBodyReadHTML.htm">_IEBodyReadHTML</a></td>
  <td>返回文档中 &lt;body&gt; 标记中的HTML.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEBodyReadText.htm">_IEBodyReadText</a></td>
  <td>返回文档中 &lt;body&gt; 标记中的文本.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEBodyWriteHTML.htm">_IEBodyWriteHTML</a></td>
  <td>替换文档中 &lt;body&gt; 标记中的HTML.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IECreate.htm">_IECreate</a></td>
  <td>创建一个 Internet Explorer 浏览器窗口.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IECreateEmbedded.htm">_IECreateEmbedded</a></td>
  <td>创建一个适合于嵌入AutoIt图形化界面 (GUI)的web浏览器对象,此图形化界面由GuiCtrlCreateObj()生成.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEDocGetObj.htm">_IEDocGetObj</a></td>
  <td>给定任意的DOM对象,返回相关文档对象的引用.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEDocInsertHTML.htm">_IEDocInsertHTML</a></td>
  <td>在一个元素内部或者周围插入HTML代码.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEDocInsertText.htm">_IEDocInsertText</a></td>
  <td>在元素内部或周围插入文本.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEDocReadHTML.htm">_IEDocReadHTML</a></td>
  <td>返回整个文档的HTML源代码.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEDocWriteHTML.htm">_IEDocWriteHTML</a></td>
  <td>替换整个网页(文档)的HTML代码.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEErrorHandlerDeRegister.htm">_IEErrorHandlerDeRegister</a></td>
  <td>禁用一个注册的自定义COM错误句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEErrorHandlerRegister.htm">_IEErrorHandlerRegister</a></td>
  <td>注册并使用一个自定义COM错误处理程序.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEErrorNotify.htm">_IEErrorNotify</a></td>
  <td>设定ie.au3是否自动报告提醒和错误(到控制台).</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEFormElementCheckBoxSelect.htm">_IEFormElementCheckBoxSelect</a></td>
  <td>设定指定表单元素的值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEFormElementGetCollection.htm">_IEFormElementGetCollection</a></td>
  <td>返回指定表单中所有表单元素的集合对象变量.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEFormElementGetObjByName.htm">_IEFormElementGetObjByName</a></td>
  <td>返回指定名称的表单元素的对象.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEFormElementGetValue.htm">_IEFormElementGetValue</a></td>
  <td>返回指定表单元素的值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEFormElementOptionSelect.htm">_IEFormElementOptionSelect</a></td>
  <td>设置指定表单元素的值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEFormElementRadioSelect.htm">_IEFormElementRadioSelect</a></td>
  <td>设置指定表单元素的值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEFormElementSetValue.htm">_IEFormElementSetValue</a></td>
  <td>设置指定表单元素的值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEFormGetCollection.htm">_IEFormGetCollection</a></td>
  <td>返回文档内代表表单的对象变量集或按索引的单一表单.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEFormGetObjByName.htm">_IEFormGetObjByName</a></td>
  <td>返回指定名称的表单对象的引用.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEFormImageClick.htm">_IEFormImageClick</a></td>
  <td>模拟对&lt;input type=image&gt;进行鼠标点击. 按子字符串匹配替换文本, 名称源(src标记).</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEFormReset.htm">_IEFormReset</a></td>
  <td>重置指定表单为默认设置.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEFormSubmit.htm">_IEFormSubmit</a></td>
  <td>提交指定表单.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEFrameGetCollection.htm">_IEFrameGetCollection</a></td>
  <td>返回包含框架集中的框架或普通页面上的浮动框架或按索引的单一框架或浮动框架的对象集合.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEFrameGetObjByName.htm">_IEFrameGetObjByName</a></td>
  <td>按名称返回框架或浮动框架对象的引用.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEGetObjById.htm">_IEGetObjById</a></td>
  <td>按标识或名称返回对象变量.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEGetObjByName.htm">_IEGetObjByName</a></td>
  <td>按名称或标识返回对象变量.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEHeadInsertEventScript.htm">_IEHeadInsertEventScript</a></td>
  <td>在文档Head标签内插入Javascript代码.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEImgClick.htm">_IEImgClick</a></td>
  <td>模拟鼠标点击一个图像. 由匹配可选文本, 名称或源的子串匹配.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEImgGetCollection.htm">_IEImgGetCollection</a></td>
  <td>返回一个文档内IMG标签的对象变量集合.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEIsFrameSet.htm">_IEIsFrameSet</a></td>
  <td>检查指定窗口是否含有一个框架集(FrameSet).</td>
</tr>
<tr>
  <td><a href="libfunctions/_IELinkClickByIndex.htm">_IELinkClickByIndex</a></td>
  <td>模拟鼠标点击一个索引链接(在源码内的顺序从0开始).</td>
</tr>
<tr>
  <td><a href="libfunctions/_IELinkClickByText.htm">_IELinkClickByText</a></td>
  <td>模拟鼠标点击带有与所提供字符串相匹配的文本子串的链接.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IELinkGetCollection.htm">_IELinkGetCollection</a></td>
  <td>返回包含文档中全部链接的集合对象或按索引的单一链接.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IELoadWait.htm">_IELoadWait</a></td>
  <td>在网页内容加载完全之后返回.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IELoadWaitTimeout.htm">_IELoadWaitTimeout</a></td>
  <td>获取和设置当前_IELoadWait在超时前尝试的毫秒值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IENavigate.htm">_IENavigate</a></td>
  <td>直接在一个存在的浏览器窗口打开指定的URL地址.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEPropertyGet.htm">_IEPropertyGet</a></td>
  <td>返回浏览器或者 DOM 元素的一个选定的属性.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEPropertySet.htm">_IEPropertySet</a></td>
  <td>设置浏览器或者DOM元素的一个选择的属性.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IEQuit.htm">_IEQuit</a></td>
  <td>关闭浏览器并移除相关的对象.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IETableGetCollection.htm">_IETableGetCollection</a></td>
  <td>返回用以代表文档中所有表或按索引的单一表的对象变量集合.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IETableWriteToArray.htm">_IETableWriteToArray</a></td>
  <td>将表内容读取到数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IETagNameAllGetCollection.htm">_IETagNameAllGetCollection</a></td>
  <td>返回在对象中指定标签名称的所有元素的对象集合.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IETagNameGetCollection.htm">_IETagNameGetCollection</a></td>
  <td>返回一个对象中按标记名称或单元素索引的所有元素的对象集合.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IE_Example.htm">_IE_Example</a></td>
  <td>显示一个已预载入文档的新浏览器窗口,用于IE.au3中的例子或者您自己的测试.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IE_Introduction.htm">_IE_Introduction</a></td>
  <td>在新浏览器窗口中显示一个关于 IE.au3 的介绍信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_IE_VersionInfo.htm">_IE_VersionInfo</a></td>
  <td>返回一个包含 IE.au3 版本信息的数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_Iif.htm">_Iif</a></td>
  <td>执行表达式的布尔测试.</td>
</tr>
<tr>
  <td><a href="libfunctions/_INetExplorerCapable.htm">_INetExplorerCapable</a></td>
  <td>将字符串转换为IE(Internet Explorer)浏览器的有效行</td>
</tr>
<tr>
  <td><a href="libfunctions/_INetGetSource.htm">_INetGetSource</a></td>
  <td>获取 URL 源且不写临时文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_INetMail.htm">_INetMail</a></td>
  <td>打开默认用户与给定地址的邮件客户端, 主题, 邮件的正文.</td>
</tr>
<tr>
  <td><a href="libfunctions/_INetSmtpMail.htm">_INetSmtpMail</a></td>
  <td>发送一封电子邮件，不使用外部电子邮件程序.</td>
</tr>
<tr>
  <td><a href="libfunctions/_IsPressed.htm">_IsPressed</a></td>
  <td>检查一个按键是否被按下</td>
</tr>
<tr>
  <td><a href="libfunctions/_MathCheckDiv.htm">_MathCheckDiv</a></td>
  <td>检查 NumA 是否可被 NumB 整除</td>
</tr>
<tr>
  <td><a href="libfunctions/_Max.htm">_Max</a></td>
  <td>确定两数中的较大数.</td>
</tr>
<tr>
  <td><a href="libfunctions/_MemGlobalAlloc.htm">_MemGlobalAlloc</a></td>
  <td>从堆栈分配指定的字节数</td>
</tr>
<tr>
  <td><a href="libfunctions/_MemGlobalFree.htm">_MemGlobalFree</a></td>
  <td>释放全局内存对象并使其句柄无效</td>
</tr>
<tr>
  <td><a href="libfunctions/_MemGlobalLock.htm">_MemGlobalLock</a></td>
  <td>锁定全局内存对象,并返回内存块的第一字节指针</td>
</tr>
<tr>
  <td><a href="libfunctions/_MemGlobalSize.htm">_MemGlobalSize</a></td>
  <td>检索指定全局内存对象的当前大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_MemGlobalUnlock.htm">_MemGlobalUnlock</a></td>
  <td>递减与 GMEM_MOVEABLE 分配相关的内存对象的锁定计数</td>
</tr>
<tr>
  <td><a href="libfunctions/_MemMoveMemory.htm">_MemMoveMemory</a></td>
  <td>向前或向后移动存储器,对齐或不对齐</td>
</tr>
<tr>
  <td><a href="libfunctions/_MemVirtualAlloc.htm">_MemVirtualAlloc</a></td>
  <td>保留或提交调用进程的虚拟地址空间页面区域</td>
</tr>
<tr>
  <td><a href="libfunctions/_MemVirtualAllocEx.htm">_MemVirtualAllocEx</a></td>
  <td>在一个指定进程的虚拟地址空间储备内存区域</td>
</tr>
<tr>
  <td><a href="libfunctions/_MemVirtualFree.htm">_MemVirtualFree</a></td>
  <td>在进程的虚拟地址空间释放页面区域</td>
</tr>
<tr>
  <td><a href="libfunctions/_MemVirtualFreeEx.htm">_MemVirtualFreeEx</a></td>
  <td>在进程的虚拟地址空间释放页面区域</td>
</tr>
<tr>
  <td><a href="libfunctions/_Min.htm">_Min</a></td>
  <td>确定两数中的较小数</td>
</tr>
<tr>
  <td><a href="libfunctions/_MouseTrap.htm">_MouseTrap</a></td>
  <td>限制鼠标移动到指定的座标.</td>
</tr>
<tr>
  <td><a href="libfunctions/_NamedPipes_CallNamedPipe.htm">_NamedPipes_CallNamedPipe</a></td>
  <td>执行命名管道读/写操作</td>
</tr>
<tr>
  <td><a href="libfunctions/_NamedPipes_ConnectNamedPipe.htm">_NamedPipes_ConnectNamedPipe</a></td>
  <td>允许命名管道服务器进程等待客户端连接</td>
</tr>
<tr>
  <td><a href="libfunctions/_NamedPipes_CreateNamedPipe.htm">_NamedPipes_CreateNamedPipe</a></td>
  <td>创建一个命名管道接口(instance)</td>
</tr>
<tr>
  <td><a href="libfunctions/_NamedPipes_CreatePipe.htm">_NamedPipes_CreatePipe</a></td>
  <td>创建一个匿名管道</td>
</tr>
<tr>
  <td><a href="libfunctions/_NamedPipes_DisconnectNamedPipe.htm">_NamedPipes_DisconnectNamedPipe</a></td>
  <td>从客户端进程断开服务器端命名管道实例</td>
</tr>
<tr>
  <td><a href="libfunctions/_NamedPipes_GetNamedPipeHandleState.htm">_NamedPipes_GetNamedPipeHandleState</a></td>
  <td>检索指定命名管道的状态信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_NamedPipes_GetNamedPipeInfo.htm">_NamedPipes_GetNamedPipeInfo</a></td>
  <td>检索有关指定命名管道的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_NamedPipes_PeekNamedPipe.htm">_NamedPipes_PeekNamedPipe</a></td>
  <td>从管道复制数据到缓冲区,且不从管道中删除该数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_NamedPipes_SetNamedPipeHandleState.htm">_NamedPipes_SetNamedPipeHandleState</a></td>
  <td>设置指定的命名管道读模式和阻塞模式</td>
</tr>
<tr>
  <td><a href="libfunctions/_NamedPipes_TransactNamedPipe.htm">_NamedPipes_TransactNamedPipe</a></td>
  <td>在网络运行中读取和写入命名管道</td>
</tr>
<tr>
  <td><a href="libfunctions/_NamedPipes_WaitNamedPipe.htm">_NamedPipes_WaitNamedPipe</a></td>
  <td>等待命名管道实例可用</td>
</tr>
<tr>
  <td><a href="libfunctions/_Net_Share_ConnectionEnum.htm">_Net_Share_ConnectionEnum</a></td>
  <td>列出共享资源的所有连接</td>
</tr>
<tr>
  <td><a href="libfunctions/_Net_Share_FileClose.htm">_Net_Share_FileClose</a></td>
  <td>强制关闭资源</td>
</tr>
<tr>
  <td><a href="libfunctions/_Net_Share_FileEnum.htm">_Net_Share_FileEnum</a></td>
  <td>返回服务器上打开的文件信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_Net_Share_FileGetInfo.htm">_Net_Share_FileGetInfo</a></td>
  <td>检索服务器特定资源的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_Net_Share_PermStr.htm">_Net_Share_PermStr</a></td>
  <td>返回资源权限的字符串表示形式</td>
</tr>
<tr>
  <td><a href="libfunctions/_Net_Share_ResourceStr.htm">_Net_Share_ResourceStr</a></td>
  <td>返回字符串表示的资源</td>
</tr>
<tr>
  <td><a href="libfunctions/_Net_Share_SessionDel.htm">_Net_Share_SessionDel</a></td>
  <td>结束服务器和工作站之间的网络会话</td>
</tr>
<tr>
  <td><a href="libfunctions/_Net_Share_SessionEnum.htm">_Net_Share_SessionEnum</a></td>
  <td>提供有关服务器上建立的会话</td>
</tr>
<tr>
  <td><a href="libfunctions/_Net_Share_SessionGetInfo.htm">_Net_Share_SessionGetInfo</a></td>
  <td>检索服务器和工作站之间建立会话的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_Net_Share_ShareAdd.htm">_Net_Share_ShareAdd</a></td>
  <td>共享服务器资源</td>
</tr>
<tr>
  <td><a href="libfunctions/_Net_Share_ShareCheck.htm">_Net_Share_ShareCheck</a></td>
  <td>检查是否有服务器共享设备</td>
</tr>
<tr>
  <td><a href="libfunctions/_Net_Share_ShareDel.htm">_Net_Share_ShareDel</a></td>
  <td>删除服务器共享资源列表的共享名</td>
</tr>
<tr>
  <td><a href="libfunctions/_Net_Share_ShareEnum.htm">_Net_Share_ShareEnum</a></td>
  <td>检索服务器上资源共享的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_Net_Share_ShareGetInfo.htm">_Net_Share_ShareGetInfo</a></td>
  <td>检索特定服务器上共享资源的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_Net_Share_ShareSetInfo.htm">_Net_Share_ShareSetInfo</a></td>
  <td>共享服务器资源</td>
</tr>
<tr>
  <td><a href="libfunctions/_Net_Share_StatisticsGetSvr.htm">_Net_Share_StatisticsGetSvr</a></td>
  <td>检索服务器操作统计</td>
</tr>
<tr>
  <td><a href="libfunctions/_Net_Share_StatisticsGetWrk.htm">_Net_Share_StatisticsGetWrk</a></td>
  <td>检索工作站操作统计</td>
</tr>
<tr>
  <td><a href="libfunctions/_Now.htm">_Now</a></td>
  <td>按PC格式返回当前日期与时间.</td>
</tr>
<tr>
  <td><a href="libfunctions/_NowCalc.htm">_NowCalc</a></td>
  <td>以 YYYY/MM/DD HH:MM:SS 格式返回当前日期和时间.</td>
</tr>
<tr>
  <td><a href="libfunctions/_NowCalcDate.htm">_NowCalcDate</a></td>
  <td>返回当前日期,格式为YYYY/MM/DD(年/月/日).</td>
</tr>
<tr>
  <td><a href="libfunctions/_NowDate.htm">_NowDate</a></td>
  <td>按PC格式返回当前日期.</td>
</tr>
<tr>
  <td><a href="libfunctions/_NowTime.htm">_NowTime</a></td>
  <td>按PC格式返回当前日期.</td>
</tr>
<tr>
  <td><a href="libfunctions/_PathFull.htm">_PathFull</a></td>
  <td>根据您提供的相对路径创建一个路径,返回新创建的绝对路径</td>
</tr>
<tr>
  <td><a href="libfunctions/_PathGetRelative.htm">_PathGetRelative</a></td>
  <td>返回一个目录的相对路径</td>
</tr>
<tr>
  <td><a href="libfunctions/_PathMake.htm">_PathMake</a></td>
  <td>创建包括驱动器、目录、文件名和扩展名的路径. 不是所有部分必须具备.</td>
</tr>
<tr>
  <td><a href="libfunctions/_PathSplit.htm">_PathSplit</a></td>
  <td>完整路径拆分为驱动器、目录、文件名和扩展名. 缺少部分由空字符串代替.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ProcessGetName.htm">_ProcessGetName</a></td>
  <td>返回包含特定进程标识符名称的字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ProcessGetPriority.htm">_ProcessGetPriority</a></td>
  <td>获取打开进程的优先级</td>
</tr>
<tr>
  <td><a href="libfunctions/_Radian.htm">_Radian</a></td>
  <td>度转换为弧度.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ReplaceStringInFile.htm">_ReplaceStringInFile</a></td>
  <td>替换文本文件的字符串（二进制文件将无法正常工作!）</td>
</tr>
<tr>
  <td><a href="libfunctions/_RunDos.htm">_RunDOS</a></td>
  <td>在一个隐藏的命令窗口中执行一个 DOS 命令.</td>
</tr>
<tr>
  <td><a href="libfunctions/_ScreenCapture_Capture.htm">_ScreenCapture_Capture</a></td>
  <td>捕捉某一屏幕区域</td>
</tr>
<tr>
  <td><a href="libfunctions/_ScreenCapture_CaptureWnd.htm">_ScreenCapture_CaptureWnd</a></td>
  <td>捕获指定窗口或者控件ID的屏幕快照</td>
</tr>
<tr>
  <td><a href="libfunctions/_ScreenCapture_SaveImage.htm">_ScreenCapture_SaveImage</a></td>
  <td>保存一个图像到文件</td>
</tr>
<tr>
  <td><a href="libfunctions/_ScreenCapture_SetBMPFormat.htm">_ScreenCapture_SetBMPFormat</a></td>
  <td>设置BMP屏幕截图位(bit)格式</td>
</tr>
<tr>
  <td><a href="libfunctions/_ScreenCapture_SetJPGQuality.htm">_ScreenCapture_SetJPGQuality</a></td>
  <td>设置质量水平,将用于屏幕捕获的 JPEG</td>
</tr>
<tr>
  <td><a href="libfunctions/_ScreenCapture_SetTIFColorDepth.htm">_ScreenCapture_SetTIFColorDepth</a></td>
  <td>设置颜色深度, 用于屏幕捕捉的 TIFF</td>
</tr>
<tr>
  <td><a href="libfunctions/_ScreenCapture_SetTIFCompression.htm">_ScreenCapture_SetTIFCompression</a></td>
  <td>设置TIFF屏幕截图压缩</td>
</tr>
<tr>
  <td><a href="libfunctions/_Security__AdjustTokenPrivileges.htm">_Security__AdjustTokenPrivileges</a></td>
  <td>启用或禁用指定的访问令牌权限</td>
</tr>
<tr>
  <td><a href="libfunctions/_Security__GetAccountSid.htm">_Security__GetAccountSid</a></td>
  <td>检索帐户的安全标识符（SID）</td>
</tr>
<tr>
  <td><a href="libfunctions/_Security__GetLengthSid.htm">_Security__GetLengthSid</a></td>
  <td>以字节为单位返回一个有效的SID长度</td>
</tr>
<tr>
  <td><a href="libfunctions/_Security__GetTokenInformation.htm">_Security__GetTokenInformation</a></td>
  <td>检索访问令牌信息指定的类型</td>
</tr>
<tr>
  <td><a href="libfunctions/_Security__ImpersonateSelf.htm">_Security__ImpersonateSelf</a></td>
  <td>获取访问令牌模拟调用进程的安全环境</td>
</tr>
<tr>
  <td><a href="libfunctions/_Security__IsValidSid.htm">_Security__IsValidSid</a></td>
  <td>验证一个 SID 是否有效</td>
</tr>
<tr>
  <td><a href="libfunctions/_Security__LookupAccountName.htm">_Security__LookupAccountName</a></td>
  <td>检索帐户安全标识符（SID）和域的名称</td>
</tr>
<tr>
  <td><a href="libfunctions/_Security__LookupAccountSid.htm">_Security__LookupAccountSid</a></td>
  <td>检索帐户的 SID 名称</td>
</tr>
<tr>
  <td><a href="libfunctions/_Security__LookupPrivilegeValue.htm">_Security__LookupPrivilegeValue</a></td>
  <td>检索本地唯一标识符的特权（LUID）值</td>
</tr>
<tr>
  <td><a href="libfunctions/_Security__OpenProcessToken.htm">_Security__OpenProcessToken</a></td>
  <td>返回调用进程的进程句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_Security__OpenThreadToken.htm">_Security__OpenThreadToken</a></td>
  <td>打开与线程相关访问令牌</td>
</tr>
<tr>
  <td><a href="libfunctions/_Security__OpenThreadTokenEx.htm">_Security__OpenThreadTokenEx</a></td>
  <td>打开与线程相关访问令牌, 如果有需要, 模拟客户端的安全环境</td>
</tr>
<tr>
  <td><a href="libfunctions/_Security__SetPrivilege.htm">_Security__SetPrivilege</a></td>
  <td>启用或禁用本地令牌特权</td>
</tr>
<tr>
  <td><a href="libfunctions/_Security__SidToStringSid.htm">_Security__SidToStringSid</a></td>
  <td>转换二进制 SID 为字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_Security__SidTypeStr.htm">_Security__SidTypeStr</a></td>
  <td>转换一个SID类型到字符串类型.</td>
</tr>
<tr>
  <td><a href="libfunctions/_Security__StringSidToSid.htm">_Security__StringSidToSid</a></td>
  <td>转换字符串 SID 为二进制 SID</td>
</tr>
<tr>
  <td><a href="libfunctions/_SendMessage.htm">_SendMessage</a></td>
  <td>包装常用 DLL 调用</td>
</tr>
<tr>
  <td><a href="libfunctions/_SendMessageA.htm">_SendMessageA</a></td>
  <td>包装常用 DLL 调用 (强制 Ansi 调用)</td>
</tr>
<tr>
  <td><a href="libfunctions/_SetDate.htm">_SetDate</a></td>
  <td>设置系统的当前日期</td>
</tr>
<tr>
  <td><a href="libfunctions/_SetTime.htm">_SetTime</a></td>
  <td>设置系统的当前时间</td>
</tr>
<tr>
  <td><a href="libfunctions/_Singleton.htm">_Singleton</a></td>
  <td>执行一个设计范例,其中只有一个实例脚本可能正在运行.</td>
</tr>
<tr>
  <td><a href="libfunctions/_SoundClose.htm">_SoundClose</a></td>
  <td>关闭 _SoundOpen 打开的声音.</td>
</tr>
<tr>
  <td><a href="libfunctions/_SoundLength.htm">_SoundLength</a></td>
  <td>返回声音文件的长度.</td>
</tr>
<tr>
  <td><a href="libfunctions/_SoundOpen.htm">_SoundOpen</a></td>
  <td>打开一个声音文件,用于其它 _Sound 函数.</td>
</tr>
<tr>
  <td><a href="libfunctions/_SoundPause.htm">_SoundPause</a></td>
  <td>暂停一个播放中的声音.</td>
</tr>
<tr>
  <td><a href="libfunctions/_SoundPlay.htm">_SoundPlay</a></td>
  <td>播放一个声音文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_SoundPos.htm">_SoundPos</a></td>
  <td>返回声音的当前坐标.</td>
</tr>
<tr>
  <td><a href="libfunctions/_SoundResume.htm">_SoundResume</a></td>
  <td>恢复暂停的声音</td>
</tr>
<tr>
  <td><a href="libfunctions/_SoundSeek.htm">_SoundSeek</a></td>
  <td>寻道指定位置的声音</td>
</tr>
<tr>
  <td><a href="libfunctions/_SoundStatus.htm">_SoundStatus</a></td>
  <td>返回声音的状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_SoundStop.htm">_SoundStop</a></td>
  <td>停止播放声音.</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_Changes.htm">_SQLite_Changes</a></td>
  <td>返回最后执行操作对数据库影响的行数</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_Close.htm">_SQLite_Close</a></td>
  <td>关闭一个打开的 SQLite 数据库.</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_Display2DResult.htm">_SQLite_Display2DResult</a></td>
  <td>返回或打印一个格式化后的二维数组视图到控制台</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_Encode.htm">_SQLite_Encode</a></td>
  <td>二进制编码一个字符串,数字或二进制数据作为用于 SQLite 查询的BLOB来源.</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_ErrCode.htm">_SQLite_ErrCode</a></td>
  <td>返回最后一个错误代码 (数字)</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_ErrMsg.htm">_SQLite_ErrMsg</a></td>
  <td>返回最近调用 sqlite3_* API 的英文错误条件描述的字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_Escape.htm">_SQLite_Escape</a></td>
  <td>Escapes a string or number for use as TEXT in SQLite statements</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_Exec.htm">_SQLite_Exec</a></td>
  <td>执行 SQLite 查询,不处理结果.</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_FastEncode.htm">_SQLite_FastEncode</a></td>
  <td>Fast encodes binary data (exclusively) for use in SQLite statements</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_FastEscape.htm">_SQLite_FastEscape</a></td>
  <td>Fast escapes a string or number for use as TEXT in SQLite statements</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_FetchData.htm">_SQLite_FetchData</a></td>
  <td>提取 _SQLite_Query() 查询的一行数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_FetchNames.htm">_SQLite_FetchNames</a></td>
  <td>读出 _SQLite_Query() 查询的列名</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_GetTable.htm">_SQLite_GetTable</a></td>
  <td>传递一个一维数组,其中包含执行查询的表名和数据.</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_GetTable2d.htm">_SQLite_GetTable2d</a></td>
  <td>传递一个 2 维数组,其中包含执行查询的列名称和数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_LastInsertRowID.htm">_SQLite_LastInsertRowID</a></td>
  <td>返回在本次连接中数据库中最新插入的列 ID</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_LibVersion.htm">_SQLite_LibVersion</a></td>
  <td>返回SQLite库的版本号</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_Open.htm">_SQLite_Open</a></td>
  <td>打开或创建 SQLite 数据库.</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_Query.htm">_SQLite_Query</a></td>
  <td>准备 SQLite 查询</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_QueryFinalize.htm">_SQLite_QueryFinalize</a></td>
  <td>确定 _SQLite_Query() 查询. 查询被中断.</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_QueryReset.htm">_SQLite_QueryReset</a></td>
  <td>重置 _SQLite_Query() 查询</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_QuerySingleRow.htm">_SQLite_QuerySingleRow</a></td>
  <td>读出指定查询结果的第一行.</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_SafeMode.htm">_SQLite_SafeMode</a></td>
  <td>禁用或启用安全模式</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_SetTimeout.htm">_SQLite_SetTimeout</a></td>
  <td>为忙碌的处理程序设置超时</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_Shutdown.htm">_SQLite_Shutdown</a></td>
  <td>卸载 SQLite.dll</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_SQLiteExe.htm">_SQLite_SQLiteExe</a></td>
  <td>在 SQLite3.exe 中执行命令</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_Startup.htm">_SQLite_Startup</a></td>
  <td>加载 SQLite3.dll</td>
</tr>
<tr>
  <td><a href="libfunctions/_SQLite_TotalChanges.htm">_SQLite_TotalChanges</a></td>
  <td>返回所有从连接开始到现在发生改变的数量(包括通过触发器和外部键)</td>
</tr>
<tr>
  <td><a href="libfunctions/_StringBetween.htm">_StringBetween</a></td>
  <td>返回字符串中开始位置和结束位置中间的字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_StringEncrypt.htm">_StringEncrypt</a></td>
  <td>一个基于 RC4 字符串加密的函数.</td>
</tr>
<tr>
  <td><a href="libfunctions/_StringExplode.htm">_StringExplode</a></td>
  <td>指定分隔符将字符串拆分为子字符串, 以 PHP 分解 v5 形式.</td>
</tr>
<tr>
  <td><a href="libfunctions/_StringInsert.htm">_StringInsert</a></td>
  <td>插入一个字符串到另外一个字符串中.</td>
</tr>
<tr>
  <td><a href="libfunctions/_StringProper.htm">_StringProper</a></td>
  <td>转换首字母为大写,其余字母为小写.等同于 Excel 中的 Proper 函数</td>
</tr>
<tr>
  <td><a href="libfunctions/_StringRepeat.htm">_StringRepeat</a></td>
  <td>按指定次数重复字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_StringReverse.htm">_StringReverse</a></td>
  <td>反转指定字符串的内容.</td>
</tr>
<tr>
  <td><a href="libfunctions/_StringToHex.htm">_StringToHex</a></td>
  <td>转换一个字符串到十六进制字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_TCPIpToName.htm">_TCPIpToName</a></td>
  <td>解析一个IP地址到主机名称</td>
</tr>
<tr>
  <td><a href="libfunctions/_TempFile.htm">_TempFile</a></td>
  <td>为临时文件创建名称,且保证不存在同名文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_TicksToTime.htm">_TicksToTime</a></td>
  <td>指定刻度量转换到时、分、秒.</td>
</tr>
<tr>
  <td><a href="libfunctions/_Timer_Diff.htm">_Timer_Diff</a></td>
  <td>返回先前调用 _Timer_Init 的时间差</td>
</tr>
<tr>
  <td><a href="libfunctions/_Timer_GetIdleTime.htm">_Timer_GetIdleTime</a></td>
  <td>返回最后一次用户活动的标记数（即键盘/鼠标）</td>
</tr>
<tr>
  <td><a href="libfunctions/_Timer_GetTimerID.htm">_Timer_GetTimerID</a></td>
  <td>从 $iwParam 返回计时器ID</td>
</tr>
<tr>
  <td><a href="libfunctions/_Timer_Init.htm">_Timer_Init</a></td>
  <td>返回时间戳 (毫秒).</td>
</tr>
<tr>
  <td><a href="libfunctions/_Timer_KillAllTimers.htm">_Timer_KillAllTimers</a></td>
  <td>销毁所有的计时器</td>
</tr>
<tr>
  <td><a href="libfunctions/_Timer_KillTimer.htm">_Timer_KillTimer</a></td>
  <td>销毁指定的计时器</td>
</tr>
<tr>
  <td><a href="libfunctions/_Timer_SetTimer.htm">_Timer_SetTimer</a></td>
  <td>创建具有指定超时值的计时器</td>
</tr>
<tr>
  <td><a href="libfunctions/_TimeToTicks.htm">_TimeToTicks</a></td>
  <td>转换指定的小时、分钟、秒到刻度量.</td>
</tr>
<tr>
  <td><a href="libfunctions/_VersionCompare.htm">_VersionCompare</a></td>
  <td>比较两个同等文件的版本</td>
</tr>
<tr>
  <td><a href="libfunctions/_viClose.htm">_viClose</a></td>
  <td>关闭连接到装置/设备的 VISA</td>
</tr>
<tr>
  <td><a href="libfunctions/_viExecCommand.htm">_viExecCommand</a></td>
  <td>Send a Command/Query to an Instrument/Device through the VISA interface (GPIB / TCP)</td>
</tr>
<tr>
  <td><a href="libfunctions/_viFindGpib.htm">_viFindGpib</a></td>
  <td>通过 VISA 卡接口(GPIB接口/ TCP协议)发送命令或查询到仪器或设备</td>
</tr>
<tr>
  <td><a href="libfunctions/_viGpibBusReset.htm">_viGpibBusReset</a></td>
  <td>GPIB 总线“复位”:使用此函数获取 GPIB 总线某种原因的滞留. 调用这个函数可能会幸运地解决问题</td>
</tr>
<tr>
  <td><a href="libfunctions/_viGTL.htm">_viGTL</a></td>
  <td>转至本地模式:仪器接受此命令将退出“远程控制模式”,进入“本地模式”. 如果仪器已在“本地模式”这将被忽略. 一般说来,如果仪器不支持此命令将仅仅停留在“远程控制模式”</td>
</tr>
<tr>
  <td><a href="libfunctions/_viInteractiveControl.htm">_viInteractiveControl</a></td>
  <td>互动 VISA 控制,以测试 SCPI 命令.</td>
</tr>
<tr>
  <td><a href="libfunctions/_viOpen.htm">_viOpen</a></td>
  <td>打开 VISA 连接到仪器/设备</td>
</tr>
<tr>
  <td><a href="libfunctions/_viSetAttribute.htm">_viSetAttribute</a></td>
  <td>设置任意 VISA 属性,也可以由 _viSetTimeout 调用来设置其他 VISA 的具体属性. 欲了解更多信息,请阅读 VISA 文档及 VISA 属性列表及其相应值 values.</td>
</tr>
<tr>
  <td><a href="libfunctions/_viSetTimeout.htm">_viSetTimeout</a></td>
  <td>设置 VISA 超时时间的毫秒值</td>
</tr>
<tr>
  <td><a href="libfunctions/_WeekNumberISO.htm">_WeekNumberISO</a></td>
  <td>计算给定日期的周数(年度的第几周).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_AbortPath.htm">_WinAPI_AbortPath</a></td>
  <td>关闭并放弃指定设备场景中的所有路径</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_AboutDlg.htm">_WinAPI_AboutDlg</a></td>
  <td>显示 Windows 的 "关于" 对话框.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ActivateKeyboardLayout.htm">_WinAPI_ActivateKeyboardLayout</a></td>
  <td>设置调用线程或当前进程输入法区域标识符.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_AddClipboardFormatListener.htm">_WinAPI_AddClipboardFormatListener</a></td>
  <td>Places the given window in the system-maintained clipboard format listener list.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_AddFontMemResourceEx.htm">_WinAPI_AddFontMemResourceEx</a></td>
  <td>添加内存映像的字体资源.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_AddFontResourceEx.htm">_WinAPI_AddFontResourceEx</a></td>
  <td>添加指定文件的字体资源到系统字体表.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_AddIconOverlay.htm">_WinAPI_AddIconOverlay</a></td>
  <td>Creates an icon by merging the source icon and overlay mask.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_AddIconTransparency.htm">_WinAPI_AddIconTransparency</a></td>
  <td>Adds a transparency to the specified 32 bits-per-pixel icon.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_AddMRUString.htm">_WinAPI_AddMRUString</a></td>
  <td>添加字符串到最近使用(MRU)的列表顶部.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_AdjustTokenPrivileges.htm">_WinAPI_AdjustTokenPrivileges</a></td>
  <td>启用或禁用指定的访问令牌权限.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_AdjustWindowRectEx.htm">_WinAPI_AdjustWindowRectEx</a></td>
  <td>根据客户端矩形尺寸, 计算窗口矩形的大小.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_AlphaBlend.htm">_WinAPI_AlphaBlend</a></td>
  <td>显示位图透明或半透明的像素.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_AngleArc.htm">_WinAPI_AngleArc</a></td>
  <td>绘制一条线段及一段弧</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_AnimateWindow.htm">_WinAPI_AnimateWindow</a></td>
  <td>启用窗口显示或隐藏时生成的特殊效果.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_Arc.htm">_WinAPI_Arc</a></td>
  <td>绘制椭圆弧</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ArcTo.htm">_WinAPI_ArcTo</a></td>
  <td>绘制椭圆弧</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ArrayToStruct.htm">_WinAPI_ArrayToStruct</a></td>
  <td>转换字符串数组到结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_AssignProcessToJobObject.htm">_WinAPI_AssignProcessToJobObject</a></td>
  <td>分配进程到现有作业对象.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_AssocGetPerceivedType.htm">_WinAPI_AssocGetPerceivedType</a></td>
  <td>根据文件扩展名检索文件的理解(perceived)类型.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_AssocQueryString.htm">_WinAPI_AssocQueryString</a></td>
  <td>从注册表搜索并获取文件或协议关联的字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_AttachConsole.htm">_WinAPI_AttachConsole</a></td>
  <td>调用进程到控制台,并附有指定的进程</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_AttachThreadInput.htm">_WinAPI_AttachThreadInput</a></td>
  <td>输入一个线程处理机制到另一个线程</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_Beep.htm">_WinAPI_Beep</a></td>
  <td>生成一个简单音调的蜂鸣器声音</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_BeginBufferedPaint.htm">_WinAPI_BeginBufferedPaint</a></td>
  <td>Begins a buffered paint operation.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_BeginDeferWindowPos.htm">_WinAPI_BeginDeferWindowPos</a></td>
  <td>为多窗口位置结构分配内存.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_BeginPaint.htm">_WinAPI_BeginPaint</a></td>
  <td>准备绘制指定的窗口.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_BeginPath.htm">_WinAPI_BeginPath</a></td>
  <td>在指定设备场景中启动一个路径分支</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_BeginUpdateResource.htm">_WinAPI_BeginUpdateResource</a></td>
  <td>获取用于添加,删除或替换二进制模块资源的句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_BitBlt.htm">_WinAPI_BitBlt</a></td>
  <td>执行彩色数据位块传输</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_BringWindowToTop.htm">_WinAPI_BringWindowToTop</a></td>
  <td>将指定窗口置于 Z 序的顶层.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_BroadcastSystemMessage.htm">_WinAPI_BroadcastSystemMessage</a></td>
  <td>发送消息到指定的收件人.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_BrowseForFolderDlg.htm">_WinAPI_BrowseForFolderDlg</a></td>
  <td>显示对话框, 使用户能够选择处理程序(Shell)文件夹.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_BufferedPaintClear.htm">_WinAPI_BufferedPaintClear</a></td>
  <td>Clears a specified rectangle in the buffer to ARGB = {0,0,0,0}.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_BufferedPaintInit.htm">_WinAPI_BufferedPaintInit</a></td>
  <td>Initialize buffered painting for the current thread.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_BufferedPaintSetAlpha.htm">_WinAPI_BufferedPaintSetAlpha</a></td>
  <td>Sets the alpha to a specified value in a given rectangle.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_BufferedPaintUnInit.htm">_WinAPI_BufferedPaintUnInit</a></td>
  <td>Closes down buffered painting for the current thread.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CalculatePopupWindowPosition.htm">_WinAPI_CalculatePopupWindowPosition</a></td>
  <td>(指定定位点,弹出窗口的大小,标志以及可选排除矩形)计算弹出窗体的适当位置.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CallNextHookEx.htm">_WinAPI_CallNextHookEx</a></td>
  <td>目前钩链的钩子信息传递到下一个钩子程序</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CallWindowProc.htm">_WinAPI_CallWindowProc</a></td>
  <td>目前钩链的钩子信息传递到下一个钩子程序</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CascadeWindows.htm">_WinAPI_CascadeWindows</a></td>
  <td>Cascades the specified child windows of the specified parent window.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CharToOem.htm">_WinAPI_CharToOem</a></td>
  <td>转换字符串为 OEM 定义的字符集.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ChildWindowFromPointEx.htm">_WinAPI_ChildWindowFromPointEx</a></td>
  <td>确定子窗口(如果存在)是否属于包含指定点的父窗口.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ClientToScreen.htm">_WinAPI_ClientToScreen</a></td>
  <td>转换客户区窗口指定点的坐标到一个屏幕坐标</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ClipCursor.htm">_WinAPI_ClipCursor</a></td>
  <td>限制光标在屏幕内移动的区域(Confines the cursor to a rectangular area on the screen).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CloseDesktop.htm">_WinAPI_CloseDesktop</a></td>
  <td>Closes an open handle to a desktop object.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CloseEnhMetaFile.htm">_WinAPI_CloseEnhMetaFile</a></td>
  <td>关闭增强型图元文件设备环境,并返回标识增强型图元文件格式的句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CloseFigure.htm">_WinAPI_CloseFigure</a></td>
  <td>关闭路径中打开的图形</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CloseHandle.htm">_WinAPI_CloseHandle</a></td>
  <td>关闭一个打开的对象句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CloseThemeData.htm">_WinAPI_CloseThemeData</a></td>
  <td>关闭主题数据句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CloseWindow.htm">_WinAPI_CloseWindow</a></td>
  <td>最小化(但不破坏)指定的窗口.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CloseWindowStation.htm">_WinAPI_CloseWindowStation</a></td>
  <td>Closes an open window station handle.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CoInitialize.htm">_WinAPI_CoInitialize</a></td>
  <td>初始化由调用进程使用的 COM 库.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ColorHLSToRGB.htm">_WinAPI_ColorHLSToRGB</a></td>
  <td>转换色调, 亮度, 饱和度(HLS)颜色为 RGB 格式.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ColorRGBToHLS.htm">_WinAPI_ColorRGBToHLS</a></td>
  <td>转换 RGB 颜色到 HLS 格式的色调, 亮度, 饱和度</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CombineRgn.htm">_WinAPI_CombineRgn</a></td>
  <td>结合两个区域,并存储结果在第三区域</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CombineTransform.htm">_WinAPI_CombineTransform</a></td>
  <td>Concatenates two world-space to page-space transformations.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CommandLineToArgv.htm">_WinAPI_CommandLineToArgv</a></td>
  <td>解析命令行字符串,并返回命令行参数数组.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CommDlgExtendedError.htm">_WinAPI_CommDlgExtendedError</a></td>
  <td>返回通用对话框的错误字符串. 此字符串表示通用对话框函数执行时发生的错误.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CommDlgExtendedErrorEx.htm">_WinAPI_CommDlgExtendedErrorEx</a></td>
  <td>Returns a common dialog box error code.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CopyBitmap.htm">_WinAPI_CopyBitmap</a></td>
  <td>创建设备无关位图（DIB）指定的位图区段副本.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CopyCursor.htm">_WinAPI_CopyCursor</a></td>
  <td>创建一个指定光标的副本.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CopyEnhMetaFile.htm">_WinAPI_CopyEnhMetaFile</a></td>
  <td>复制增强型图元文件格式到指定的文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CopyFileEx.htm">_WinAPI_CopyFileEx</a></td>
  <td>复制现有文件到一个新文件,将应用程序的进展通知回调函数.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CopyIcon.htm">_WinAPI_CopyIcon</a></td>
  <td>从其它模块复制指定的图标</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CopyImage.htm">_WinAPI_CopyImage</a></td>
  <td>创建新图像(图标,光标或位图), 并复制指定图像的新属性.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CopyRect.htm">_WinAPI_CopyRect</a></td>
  <td>复制一个矩形坐标到另外一个矩形 .</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CopyStruct.htm">_WinAPI_CopyStruct</a></td>
  <td>创建指定结构的副本.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CoTaskMemAlloc.htm">_WinAPI_CoTaskMemAlloc</a></td>
  <td>指定任务存储块.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CoTaskMemFree.htm">_WinAPI_CoTaskMemFree</a></td>
  <td>释放任务的内存块.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CoTaskMemRealloc.htm">_WinAPI_CoTaskMemRealloc</a></td>
  <td>修改任务存储块的大小.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CoUninitialize.htm">_WinAPI_CoUninitialize</a></td>
  <td>关闭当前进程的 COM 库.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_Create32BitHBITMAP.htm">_WinAPI_Create32BitHBITMAP</a></td>
  <td>Creates a 32 bits-per-pixel bitmap from the specified icon.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_Create32BitHICON.htm">_WinAPI_Create32BitHICON</a></td>
  <td>Converts an icon to 32 bits-per-pixel format and copies to the new icon.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateBitmap.htm">_WinAPI_CreateBitmap</a></td>
  <td>使用指定的宽度,高度,与颜色格式创建一个位图</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateBitmapIndirect.htm">_WinAPI_CreateBitmapIndirect</a></td>
  <td>创建具有指定宽度, 高度和颜色格式(调色板及像素位)的位图</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateBrushIndirect.htm">_WinAPI_CreateBrushIndirect</a></td>
  <td>创建指定样式,颜色和图案的逻辑画笔.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateCaret.htm">_WinAPI_CreateCaret</a></td>
  <td>新建系统插入符的形状并分配给指定窗口.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateCompatibleBitmap.htm">_WinAPI_CreateCompatibleBitmap</a></td>
  <td>创建与指定设备环境兼容的位图</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateCompatibleBitmapEx.htm">_WinAPI_CreateCompatibleBitmapEx</a></td>
  <td>创建与设备兼容的位图, 并填充指定的颜色.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateCompatibleDC.htm">_WinAPI_CreateCompatibleDC</a></td>
  <td>创建与指定的设备兼容的存储设备环境</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateDesktop.htm">_WinAPI_CreateDesktop</a></td>
  <td>Creates a new desktop, associates it with the current window station of the calling process.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateDIB.htm">_WinAPI_CreateDIB</a></td>
  <td>Creates an uncompressed device-independent bitmap (DIB).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateDIBitmap.htm">_WinAPI_CreateDIBitmap</a></td>
  <td>由DIB创建合适的位图(DDB)并设置合适的位图数位</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateDIBSection.htm">_WinAPI_CreateDIBSection</a></td>
  <td>创建应用程序可以直接写入的 DIB(设备无关位图文件).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateDirectoryEx.htm">_WinAPI_CreateDirectoryEx</a></td>
  <td>Creates a new directory with the attributes of a specified template directory.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateEllipticRgn.htm">_WinAPI_CreateEllipticRgn</a></td>
  <td>创建椭圆区域.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateEnhMetaFile.htm">_WinAPI_CreateEnhMetaFile</a></td>
  <td>创建增强型图元文件格式的设备环境.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateEvent.htm">_WinAPI_CreateEvent</a></td>
  <td>创建或者打开一个命名的或者未命名的事件对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateFile.htm">_WinAPI_CreateFile</a></td>
  <td>为其它设备创建或者打开一个文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateFileEx.htm">_WinAPI_CreateFileEx</a></td>
  <td>创建或打开文件或 I/O 设备.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateFileMapping.htm">_WinAPI_CreateFileMapping</a></td>
  <td>创建或打开指定文件的有名或无名文件映射对象.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateFont.htm">_WinAPI_CreateFont</a></td>
  <td>创建一个带有指定字符的逻辑字体,注:characteristics有字符的意思也有特性的意思(可能翻译错误).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateFontIndirect.htm">_WinAPI_CreateFontIndirect</a></td>
  <td>创建有具体参数的逻辑字体</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateGUID.htm">_WinAPI_CreateGUID</a></td>
  <td>创建全局唯一标识符(GUID)</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateIcon.htm">_WinAPI_CreateIcon</a></td>
  <td>创建指定大小,颜色,位模式的图标.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateIconFromResourceEx.htm">_WinAPI_CreateIconFromResourceEx</a></td>
  <td>创建资源位描述的图标或光标.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateIconIndirect.htm">_WinAPI_CreateIconIndirect</a></td>
  <td>创建指定大小,颜色和位模式的图标或光标.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateJobObject.htm">_WinAPI_CreateJobObject</a></td>
  <td>创建或打开作业对象.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateMRUList.htm">_WinAPI_CreateMRUList</a></td>
  <td>创建一个新的最近使用（MRU）列表.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateMutex.htm">_WinAPI_CreateMutex</a></td>
  <td>创建或打开同步基元(同步互斥体)对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateNullRgn.htm">_WinAPI_CreateNullRgn</a></td>
  <td>Creates an empty region.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateObjectID.htm">_WinAPI_CreateObjectID</a></td>
  <td>Creates or retrieves the object identifier for the specified file or directory.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreatePen.htm">_WinAPI_CreatePen</a></td>
  <td>创建指定样式,宽度和颜色得逻辑笔.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreatePoint.htm">_WinAPI_CreatePoint</a></td>
  <td>Creates $tagPOINT structure with the x- and y-coordinates of the specified point.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreatePolygonRgn.htm">_WinAPI_CreatePolygonRgn</a></td>
  <td>创建一个多边形区域.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateProcess.htm">_WinAPI_CreateProcess</a></td>
  <td>创建一个新进程和它的主线程.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateRect.htm">_WinAPI_CreateRect</a></td>
  <td>创建指定矩形坐标的 $tagRECT 结构.使用矩形 4 角坐标</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateRectEx.htm">_WinAPI_CreateRectEx</a></td>
  <td>创建指定矩形坐标的 $tagRECT 结构.使用矩形左上角坐标和宽,高值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateRectRgn.htm">_WinAPI_CreateRectRgn</a></td>
  <td>创建矩形</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateRectRgnIndirect.htm">_WinAPI_CreateRectRgnIndirect</a></td>
  <td>创建矩形区域.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateRoundRectRgn.htm">_WinAPI_CreateRoundRectRgn</a></td>
  <td>创建圆角矩形</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateSemaphore.htm">_WinAPI_CreateSemaphore</a></td>
  <td>创建或打开有名或无名的信号量对象.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateSolidBitmap.htm">_WinAPI_CreateSolidBitmap</a></td>
  <td>创建单色位图</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateSolidBrush.htm">_WinAPI_CreateSolidBrush</a></td>
  <td>创建指定纯色的逻辑刷</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateStreamOnHGlobal.htm">_WinAPI_CreateStreamOnHGlobal</a></td>
  <td>Creates a stream object that uses a memory handle to store the stream contents.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateString.htm">_WinAPI_CreateString</a></td>
  <td>Copies a specified string to the memory and returns its pointer.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateTransform.htm">_WinAPI_CreateTransform</a></td>
  <td>Ceates $tagXFORM structure specifies a world-space to page-space transformation.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateWindowEx.htm">_WinAPI_CreateWindowEx</a></td>
  <td>创建重叠,弹出,或子窗口</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_CreateWindowStation.htm">_WinAPI_CreateWindowStation</a></td>
  <td>Creates a window station object, associates it with the calling process, and assigns it to the current session.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DeferWindowPos.htm">_WinAPI_DeferWindowPos</a></td>
  <td>更新指定窗口的多窗口位置结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DefineDosDevice.htm">_WinAPI_DefineDosDevice</a></td>
  <td>定义, 重新定义, 或删除 MS-DOS 设备名称.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DefSubclassProc.htm">_WinAPI_DefSubclassProc</a></td>
  <td>Calls the next handler in a window's subclass chain.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DefWindowProc.htm">_WinAPI_DefWindowProc</a></td>
  <td>调用默认窗口程序,以提供默认处理</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DeleteDC.htm">_WinAPI_DeleteDC</a></td>
  <td>删除指定的设备环境</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DeleteEnhMetaFile.htm">_WinAPI_DeleteEnhMetaFile</a></td>
  <td>删除增强型图元文件格式或增强型图元文件格式句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DeleteFile.htm">_WinAPI_DeleteFile</a></td>
  <td>删除现有文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DeleteObject.htm">_WinAPI_DeleteObject</a></td>
  <td>删除逻辑笔,画笔,字体,位图,区域或调色板</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DeleteObjectID.htm">_WinAPI_DeleteObjectID</a></td>
  <td>Removes the object identifier from a specified file or directory.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DeleteVolumeMountPoint.htm">_WinAPI_DeleteVolumeMountPoint</a></td>
  <td>删除驱动器号或安装文件夹.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DeregisterShellHookWindow.htm">_WinAPI_DeregisterShellHookWindow</a></td>
  <td>注销指定的命令解释程序(shell)窗口.(即已注册为接收命令解释程序(shell)钩子消息的窗口).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DestroyCaret.htm">_WinAPI_DestroyCaret</a></td>
  <td>销毁插入符号当前的形状,释放窗口插入符号,并删除屏幕上插入符号.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DestroyCursor.htm">_WinAPI_DestroyCursor</a></td>
  <td>销毁光标并释放任何内存占用的光标.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DestroyIcon.htm">_WinAPI_DestroyIcon</a></td>
  <td>销毁一个图标,并清空任何图标占用的内存</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DestroyWindow.htm">_WinAPI_DestroyWindow</a></td>
  <td>销毁指定的窗口</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DeviceIoControl.htm">_WinAPI_DeviceIoControl</a></td>
  <td>发送控制代码到指定的设备驱动程序.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DisplayStruct.htm">_WinAPI_DisplayStruct</a></td>
  <td>Displays data from the specified structure or memory address as a list.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DllGetVersion.htm">_WinAPI_DllGetVersion</a></td>
  <td>Retrieves a DLL-specific version information.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DllInstall.htm">_WinAPI_DllInstall</a></td>
  <td>注册 OLE 控件(例如 DLL) 或 ActiveX 控件(OCX)文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DllUninstall.htm">_WinAPI_DllUninstall</a></td>
  <td>注销 OLE 控件(例如 DLL) 或 ActiveX 控件(OCX)文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DPtoLP.htm">_WinAPI_DPtoLP</a></td>
  <td>Converts device coordinates into logical coordinates.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DragAcceptFiles.htm">_WinAPI_DragAcceptFiles</a></td>
  <td>确定窗口是否接受拖放文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DragFinish.htm">_WinAPI_DragFinish</a></td>
  <td>释放系统应用程序传输文件名称使用的内存.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DragQueryFileEx.htm">_WinAPI_DragQueryFileEx</a></td>
  <td>检索拖放操作成功后的文件名称.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DragQueryPoint.htm">_WinAPI_DragQueryPoint</a></td>
  <td>检索拖放操作时间内鼠标指针的位置.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DrawAnimatedRects.htm">_WinAPI_DrawAnimatedRects</a></td>
  <td>动画窗口的标题,显示图标或窗口的最小化或最大化.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DrawBitmap.htm">_WinAPI_DrawBitmap</a></td>
  <td>绘制位图到指定的设备环境.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DrawEdge.htm">_WinAPI_DrawEdge</a></td>
  <td>绘制一或多个矩形的边缘</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DrawFrameControl.htm">_WinAPI_DrawFrameControl</a></td>
  <td>绘制指定类型和样式的框架控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DrawIcon.htm">_WinAPI_DrawIcon</a></td>
  <td>绘制图标或光标到指定的设备环境</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DrawIconEx.htm">_WinAPI_DrawIconEx</a></td>
  <td>绘制图标或光标到指定的设备环境</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DrawLine.htm">_WinAPI_DrawLine</a></td>
  <td>绘制一条线</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DrawShadowText.htm">_WinAPI_DrawShadowText</a></td>
  <td>绘制指定矩形内带有阴影的格式化文本.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DrawText.htm">_WinAPI_DrawText</a></td>
  <td>在指定的矩形中绘出格式化的文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DrawThemeBackground.htm">_WinAPI_DrawThemeBackground</a></td>
  <td>绘制指定控件的部分边界,并依据视觉样式的定义填充.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DrawThemeEdge.htm">_WinAPI_DrawThemeEdge</a></td>
  <td>Draws one or more edges defined by the visual style of a rectangle.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DrawThemeIcon.htm">_WinAPI_DrawThemeIcon</a></td>
  <td>Draws an image from an image list with the icon effect defined by the visual style.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DrawThemeParentBackground.htm">_WinAPI_DrawThemeParentBackground</a></td>
  <td>绘制父控件部分,即部分透明或 alpha 混合子控件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DrawThemeText.htm">_WinAPI_DrawThemeText</a></td>
  <td>绘制由视觉样式定义颜色和字体的文本.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DrawThemeTextEx.htm">_WinAPI_DrawThemeTextEx</a></td>
  <td>绘制由视觉样式定义颜色和字体的文本.(扩展)</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DuplicateHandle.htm">_WinAPI_DuplicateHandle</a></td>
  <td>复制对象句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DwmEnableBlurBehindWindow.htm">_WinAPI_DwmEnableBlurBehindWindow</a></td>
  <td>Enables the blur effect on a specified window.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DwmEnableComposition.htm">_WinAPI_DwmEnableComposition</a></td>
  <td>启用或禁用桌面窗口管理器（DWM）的组成.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DwmExtendFrameIntoClientArea.htm">_WinAPI_DwmExtendFrameIntoClientArea</a></td>
  <td>扩展客户区背后的窗口框架.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DwmGetColorizationColor.htm">_WinAPI_DwmGetColorizationColor</a></td>
  <td>检索当前桌面窗口管理器（DWM）玻璃组成的颜色.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DwmGetWindowAttribute.htm">_WinAPI_DwmGetWindowAttribute</a></td>
  <td>检索指定窗口应用属性的当前值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DwmInvalidateIconicBitmaps.htm">_WinAPI_DwmInvalidateIconicBitmaps</a></td>
  <td>Indicates that all previously provided iconic bitmaps from a window, both thumbnails and peek representations, should be refreshed.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DwmIsCompositionEnabled.htm">_WinAPI_DwmIsCompositionEnabled</a></td>
  <td>确定是否启用桌面窗口管理器（DWM）的组成.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DwmQueryThumbnailSourceSize.htm">_WinAPI_DwmQueryThumbnailSourceSize</a></td>
  <td>返回桌面窗口管理器（DWM）源缩略图的大小.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DwmRegisterThumbnail.htm">_WinAPI_DwmRegisterThumbnail</a></td>
  <td>创建桌面窗口管理器（DWM）缩略图目标与源窗口之间的关系.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DwmSetIconicLivePreviewBitmap.htm">_WinAPI_DwmSetIconicLivePreviewBitmap</a></td>
  <td>Sets a static, iconic bitmap to display a live preview (also known as a Peek preview) of a window or tab.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DwmSetIconicThumbnail.htm">_WinAPI_DwmSetIconicThumbnail</a></td>
  <td>Sets a static, iconic bitmap on a window or tab to use as a thumbnail representation.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DwmSetWindowAttribute.htm">_WinAPI_DwmSetWindowAttribute</a></td>
  <td>设置适用于窗口的非客户端属性值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DwmUnregisterThumbnail.htm">_WinAPI_DwmUnregisterThumbnail</a></td>
  <td>移除桌面窗口管理器（DWM）缩略图关系.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DwmUpdateThumbnailProperties.htm">_WinAPI_DwmUpdateThumbnailProperties</a></td>
  <td>指定桌面窗口管理器（DWM）缩略图属性.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DWordToFloat.htm">_WinAPI_DWordToFloat</a></td>
  <td>Converts a value of type DWORD to a value of type FLOAT.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_DWordToInt.htm">_WinAPI_DWordToInt</a></td>
  <td>转换 DWORD 类型值为 INT 类型的值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EjectMedia.htm">_WinAPI_EjectMedia</a></td>
  <td>设备弹出媒介.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_Ellipse.htm">_WinAPI_Ellipse</a></td>
  <td>绘制椭圆.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EmptyWorkingSet.htm">_WinAPI_EmptyWorkingSet</a></td>
  <td>删除进程指定作业尽可能多的页面.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnableWindow.htm">_WinAPI_EnableWindow</a></td>
  <td>启用或禁用鼠标和键盘输入到指定的窗口或控件</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EndBufferedPaint.htm">_WinAPI_EndBufferedPaint</a></td>
  <td>Completes a buffered paint operation and frees the associated buffered paint handle.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EndDeferWindowPos.htm">_WinAPI_EndDeferWindowPos</a></td>
  <td>同时更新屏幕刷新周期内一或多个窗口的位置和大小.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EndPaint.htm">_WinAPI_EndPaint</a></td>
  <td>标记指定窗口的绘图终点.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EndPath.htm">_WinAPI_EndPath</a></td>
  <td>关闭路径包并将由包定义的路径选入指定场景</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EndUpdateResource.htm">_WinAPI_EndUpdateResource</a></td>
  <td>更新或删除资源模块内的修改.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumChildProcess.htm">_WinAPI_EnumChildProcess</a></td>
  <td>枚举指定进程的子进程.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumChildWindows.htm">_WinAPI_EnumChildWindows</a></td>
  <td>枚举指定父窗的子窗口.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumDesktops.htm">_WinAPI_EnumDesktops</a></td>
  <td>Enumerates all desktops associated with the specified window station of the calling process.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumDesktopWindows.htm">_WinAPI_EnumDesktopWindows</a></td>
  <td>Enumerates all top-level windows associated with the specified desktop.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumDeviceDrivers.htm">_WinAPI_EnumDeviceDrivers</a></td>
  <td>检索系统设备驱动程序的加载地址.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumDisplayDevices.htm">_WinAPI_EnumDisplayDevices</a></td>
  <td>获取系统显示设备的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumDisplaySettings.htm">_WinAPI_EnumDisplaySettings</a></td>
  <td>检索显示设备图形模式信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumMRUList.htm">_WinAPI_EnumMRUList</a></td>
  <td>枚举最近使用（MRU）列表的内容.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumPageFiles.htm">_WinAPI_EnumPageFiles</a></td>
  <td>Retrieves information for each installed pagefile in the system.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumProcessModules.htm">_WinAPI_EnumProcessModules</a></td>
  <td>Retrieves a handle and name for each module in the specified process.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumProcessThreads.htm">_WinAPI_EnumProcessThreads</a></td>
  <td>枚举指定进程的线程.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumProcessWindows.htm">_WinAPI_EnumProcessWindows</a></td>
  <td>枚举指定进程的窗口.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumResourceLanguages.htm">_WinAPI_EnumResourceLanguages</a></td>
  <td>枚举特定语言的资源, 类型与名称, 以及相关的二进制模块.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumResourceNames.htm">_WinAPI_EnumResourceNames</a></td>
  <td>枚举二进制模块指定类型的资源.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumResourceTypes.htm">_WinAPI_EnumResourceTypes</a></td>
  <td>枚举二进制模块的资源类型.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumSystemLocales.htm">_WinAPI_EnumSystemLocales</a></td>
  <td>枚举操作系统安装或支持的区域设置.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumWindows.htm">_WinAPI_EnumWindows</a></td>
  <td>枚举所有窗口</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumWindowsPopup.htm">_WinAPI_EnumWindowsPopup</a></td>
  <td>枚举弹出窗口</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumWindowStations.htm">_WinAPI_EnumWindowStations</a></td>
  <td>Enumerates all window stations in the current session.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EnumWindowsTop.htm">_WinAPI_EnumWindowsTop</a></td>
  <td>枚举所有顶层窗口</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EqualMemory.htm">_WinAPI_EqualMemory</a></td>
  <td>Compares two blocks of memory to determine whether the specified number of bytes are identical.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EqualRect.htm">_WinAPI_EqualRect</a></td>
  <td>确定两个指定矩形是否相等.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_EqualRgn.htm">_WinAPI_EqualRgn</a></td>
  <td>检查两个指定区域是否相同.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ExcludeClipRect.htm">_WinAPI_ExcludeClipRect</a></td>
  <td>从已存在的剪切区域中减去指定矩形区域创建新的剪切区域</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ExpandEnvironmentStrings.htm">_WinAPI_ExpandEnvironmentStrings</a></td>
  <td>扩展环境变量字符串和替换它们的自己定义值</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ExtCreatePen.htm">_WinAPI_ExtCreatePen</a></td>
  <td>Creates a logical cosmetic or geometric pen that has the specified style, width, and brush attributes.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ExtCreateRegion.htm">_WinAPI_ExtCreateRegion</a></td>
  <td>从指定区域和转换数据创建区域</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ExtFloodFill.htm">_WinAPI_ExtFloodFill</a></td>
  <td>使用当前的画笔填充一个显示面.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ExtractIcon.htm">_WinAPI_ExtractIcon</a></td>
  <td>Extracts an icon from the specified executable file, DLL, or icon file.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ExtractIconEx.htm">_WinAPI_ExtractIconEx</a></td>
  <td>创建文件中提取的大或小图标的句柄数组</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ExtSelectClipRgn.htm">_WinAPI_ExtSelectClipRgn</a></td>
  <td>使用指定模式组合指定区域与目前剪辑区域.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FatalAppExit.htm">_WinAPI_FatalAppExit</a></td>
  <td>显示消息框, 并终止应用程序</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FatalExit.htm">_WinAPI_FatalExit</a></td>
  <td>Transfers execution control to the debugger.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FileInUse.htm">_WinAPI_FileInUse</a></td>
  <td>Tests whether the specified file in use by another application.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FillMemory.htm">_WinAPI_FillMemory</a></td>
  <td>Fills a cblock of memory with the given value.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FillPath.htm">_WinAPI_FillPath</a></td>
  <td>关闭当前路径中所有打开的图形并以当前画笔填充</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FillRect.htm">_WinAPI_FillRect</a></td>
  <td>使用指定的笔刷填充矩形</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FillRgn.htm">_WinAPI_FillRgn</a></td>
  <td>使用指定画刷填充区域.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FindExecutable.htm">_WinAPI_FindExecutable</a></td>
  <td>检索与指定文件名相关联的可执行文件的名称</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FindResource.htm">_WinAPI_FindResource</a></td>
  <td>确定模块内指定资源类型和名称的位置.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FindResourceEx.htm">_WinAPI_FindResourceEx</a></td>
  <td>确定模块中指定类型, 名称和语言的资源位置.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FindTextDlg.htm">_WinAPI_FindTextDlg</a></td>
  <td>Creates a system-defined modeless Find dialog box to search for text in a document.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FindWindow.htm">_WinAPI_FindWindow</a></td>
  <td>检索类名和窗口名称相匹配的顶层窗口句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FlashWindow.htm">_WinAPI_FlashWindow</a></td>
  <td>指定的窗口闪烁一次</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FlashWindowEx.htm">_WinAPI_FlashWindowEx</a></td>
  <td>闪烁指定的窗口</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FlattenPath.htm">_WinAPI_FlattenPath</a></td>
  <td>将选入当前场景的路径中的所有曲线转化为变成一系列直线</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FloatToDWord.htm">_WinAPI_FloatToDWord</a></td>
  <td>Converts a value of type FLOAT to a value of type DWORD.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FloatToInt.htm">_WinAPI_FloatToInt</a></td>
  <td>转换 4 字节浮点值为整型值</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FlushFileBuffers.htm">_WinAPI_FlushFileBuffers</a></td>
  <td>刷新缓冲区的指定文件, 并写入所有缓冲数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FlushFRBuffer.htm">_WinAPI_FlushFRBuffer</a></td>
  <td>Destroys the internal buffer that used the _WinAPI_FindTextDlg() and _WinAPI_ReplaceTextDlg() functions.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FlushViewOfFile.htm">_WinAPI_FlushViewOfFile</a></td>
  <td>将文件映射视图写入到磁盘上的字节范围内.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FormatDriveDlg.htm">_WinAPI_FormatDriveDlg</a></td>
  <td>打开格式化命令解释程序(Shell)对话框.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FormatMessage.htm">_WinAPI_FormatMessage</a></td>
  <td>格式化消息字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FrameRect.htm">_WinAPI_FrameRect</a></td>
  <td>使用指定的笔刷绘制指定的矩形边框</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FrameRgn.htm">_WinAPI_FrameRgn</a></td>
  <td>使用指定画笔绘制指定区域周围边框.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FreeLibrary.htm">_WinAPI_FreeLibrary</a></td>
  <td>递减加载的动态链接库（DLL）模块引用计数</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FreeMRUList.htm">_WinAPI_FreeMRUList</a></td>
  <td>释放最近使用(MRU)列表h和写缓存数据到注册表相关的句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_FreeResource.htm">_WinAPI_FreeResource</a></td>
  <td>递减(减少一)加载资源的引用计数.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GdiComment.htm">_WinAPI_GdiComment</a></td>
  <td>Copies a comment from a buffer into a specified enhanced-format metafile.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetActiveWindow.htm">_WinAPI_GetActiveWindow</a></td>
  <td>检索附加到调用进程消息队列的活动窗口句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetAllUsersProfileDirectory.htm">_WinAPI_GetAllUsersProfileDirectory</a></td>
  <td>Retrieves the path to the root of the directory that contains program data shared by all users.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetAncestor.htm">_WinAPI_GetAncestor</a></td>
  <td>检索指定窗口的祖句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetApplicationRestartSettings.htm">_WinAPI_GetApplicationRestartSettings</a></td>
  <td>Retrieves the restart information registered for the specified process.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetArcDirection.htm">_WinAPI_GetArcDirection</a></td>
  <td>获取指定设备场景中指定弧的方向</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetAsyncKeyState.htm">_WinAPI_GetAsyncKeyState</a></td>
  <td>确定函数调用时,按键是按下还是松开</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetBinaryType.htm">_WinAPI_GetBinaryType</a></td>
  <td>确定文件是否为可执行(.exe)文件,如果是,则子系统运行这个可执行文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetBitmapBits.htm">_WinAPI_GetBitmapBits</a></td>
  <td>将设备支持的位图数位复制到缓冲区</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetBitmapDimension.htm">_WinAPI_GetBitmapDimension</a></td>
  <td>检索指定位图的大小.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetBkColor.htm">_WinAPI_GetBkColor</a></td>
  <td>检索指定设备当前的背景颜色.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetBkMode.htm">_WinAPI_GetBkMode</a></td>
  <td>检索指定设备环境的当前背景混合模式</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetBoundsRect.htm">_WinAPI_GetBoundsRect</a></td>
  <td>Obtains the current accumulated bounding rectangle for a specified device context.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetBufferedPaintBits.htm">_WinAPI_GetBufferedPaintBits</a></td>
  <td>Retrieves a pointer to the buffer bitmap if the buffer is a device-independent bitmap (DIB).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetBufferedPaintDC.htm">_WinAPI_GetBufferedPaintDC</a></td>
  <td>Gets the paint device context (DC).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetBufferedPaintTargetDC.htm">_WinAPI_GetBufferedPaintTargetDC</a></td>
  <td>Retrieves the target device context (DC).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetBufferedPaintTargetRect.htm">_WinAPI_GetBufferedPaintTargetRect</a></td>
  <td>Retrieves the target rectangle.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetBValue.htm">_WinAPI_GetBValue</a></td>
  <td>检索 32 位 RGB 值蓝色成分的亮度值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetCaretBlinkTime.htm">_WinAPI_GetCaretBlinkTime</a></td>
  <td>返回扫描插入符号像素所需的时间.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetCaretPos.htm">_WinAPI_GetCaretPos</a></td>
  <td>检索插入符号的位置.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetCDType.htm">_WinAPI_GetCDType</a></td>
  <td>Retrieves a type of the media which is loaded into a specified CD-ROM device.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetClassInfoEx.htm">_WinAPI_GetClassInfoEx</a></td>
  <td>获取一个窗体类的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetClassLongEx.htm">_WinAPI_GetClassLongEx</a></td>
  <td>检索指定窗口的给定值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetClassName.htm">_WinAPI_GetClassName</a></td>
  <td>检索指定窗口的类名称</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetClientHeight.htm">_WinAPI_GetClientHeight</a></td>
  <td>返回窗口客户区高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetClientRect.htm">_WinAPI_GetClientRect</a></td>
  <td>检索窗口的客户区坐标</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetClientWidth.htm">_WinAPI_GetClientWidth</a></td>
  <td>检索窗口的客户区宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetClipboardSequenceNumber.htm">_WinAPI_GetClipboardSequenceNumber</a></td>
  <td>Retrieves the clipboard sequence number for the current window station.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetClipBox.htm">_WinAPI_GetClipBox</a></td>
  <td>获取可见区域绑定矩形的大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetClipCursor.htm">_WinAPI_GetClipCursor</a></td>
  <td>检索限制光标的屏幕矩形区域坐标.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetClipRgn.htm">_WinAPI_GetClipRgn</a></td>
  <td>获取标识当前应用程序定义的剪切区域的句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetCompressedFileSize.htm">_WinAPI_GetCompressedFileSize</a></td>
  <td>Retrieves the actual number of bytes of disk storage used to store a specified file.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetCompression.htm">_WinAPI_GetCompression</a></td>
  <td>检索文件或目录的当前压缩状态.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetConnectedDlg.htm">_WinAPI_GetConnectedDlg</a></td>
  <td>启动连接向导,便于调用应用程序启用网络连接.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetCurrentDirectory.htm">_WinAPI_GetCurrentDirectory</a></td>
  <td>检索当前进程的当前目录.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetCurrentHwProfile.htm">_WinAPI_GetCurrentHwProfile</a></td>
  <td>检索本地计算机当前硬件配置文件的信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetCurrentObject.htm">_WinAPI_GetCurrentObject</a></td>
  <td>Retrieves a handle to an object of the specified type that has been selected into the specified device context.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetCurrentPosition.htm">_WinAPI_GetCurrentPosition</a></td>
  <td>Retrieves the current position for the specified device context.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetCurrentProcess.htm">_WinAPI_GetCurrentProcess</a></td>
  <td>检索调用进程的进程句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetCurrentProcessExplicitAppUserModelID.htm">_WinAPI_GetCurrentProcessExplicitAppUserModelID</a></td>
  <td>Retrieves the application-defined, explicit Application User Model ID for the current process.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetCurrentProcessID.htm">_WinAPI_GetCurrentProcessID</a></td>
  <td>检索调用进程的进程标识符</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetCurrentThemeName.htm">_WinAPI_GetCurrentThemeName</a></td>
  <td>检索当前视觉样式名称、配色方案名称、尺寸名称.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetCurrentThread.htm">_WinAPI_GetCurrentThread</a></td>
  <td>检索调用线程的伪句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetCurrentThreadId.htm">_WinAPI_GetCurrentThreadId</a></td>
  <td>检索调用线程的线程标识符</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetCursor.htm">_WinAPI_GetCursor</a></td>
  <td>检索当前光标句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetCursorInfo.htm">_WinAPI_GetCursorInfo</a></td>
  <td>检索全局光标的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetDateFormat.htm">_WinAPI_GetDateFormat</a></td>
  <td>格式化指定区域的日期字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetDC.htm">_WinAPI_GetDC</a></td>
  <td>检索显示客户区窗口的设备环境句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetDCEx.htm">_WinAPI_GetDCEx</a></td>
  <td>获取指定窗体客户区域设备场景的句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetDefaultPrinter.htm">_WinAPI_GetDefaultPrinter</a></td>
  <td>检索当前用户默认打印机的名称.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetDefaultUserProfileDirectory.htm">_WinAPI_GetDefaultUserProfileDirectory</a></td>
  <td>Retrieves the path to the root of the default user's profile.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetDesktopWindow.htm">_WinAPI_GetDesktopWindow</a></td>
  <td>返回 Windows 桌面窗口的句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetDeviceCaps.htm">_WinAPI_GetDeviceCaps</a></td>
  <td>检索指定设备的特定信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetDeviceDriverBaseName.htm">_WinAPI_GetDeviceDriverBaseName</a></td>
  <td>检索指定设备驱动程序的基本名称.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetDeviceDriverFileName.htm">_WinAPI_GetDeviceDriverFileName</a></td>
  <td>检索指定设备驱动程序的有效路径.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetDeviceGammaRamp.htm">_WinAPI_GetDeviceGammaRamp</a></td>
  <td>Gets the gamma ramp on direct color display boards that support downloadable gamma ramps in hardware.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetDIBits.htm">_WinAPI_GetDIBits</a></td>
  <td>检索指定位图,并将它作为 DIB 拷贝到缓冲区</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetDiskFreeSpaceEx.htm">_WinAPI_GetDiskFreeSpaceEx</a></td>
  <td>检索磁盘可用空间信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetDlgCtrlID.htm">_WinAPI_GetDlgCtrlID</a></td>
  <td>检索指定控件的标识符</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetDlgItem.htm">_WinAPI_GetDlgItem</a></td>
  <td>检索指定的对话框控件句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetDllDirectory.htm">_WinAPI_GetDllDirectory</a></td>
  <td>Retrieves the application-specific portion of the search path used to locate DLLs for the application.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetDriveBusType.htm">_WinAPI_GetDriveBusType</a></td>
  <td>检索指定驱动器总线类型.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetDriveGeometryEx.htm">_WinAPI_GetDriveGeometryEx</a></td>
  <td>检索磁盘的几何结构扩展信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetDriveNumber.htm">_WinAPI_GetDriveNumber</a></td>
  <td>检索指定驱动器的类型、编号、分区号.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetDriveType.htm">_WinAPI_GetDriveType</a></td>
  <td>检索磁盘驱动器类型(可移动、固定、光驱、RAM 磁盘或网络驱动器).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetEnhMetaFile.htm">_WinAPI_GetEnhMetaFile</a></td>
  <td>创建存储文件中指定的增强型图元文件句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetEnhMetaFileBits.htm">_WinAPI_GetEnhMetaFileBits</a></td>
  <td>检索缓冲区内指定的增强型图元文件格式并复制它们的内容.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetEnhMetaFileDescription.htm">_WinAPI_GetEnhMetaFileDescription</a></td>
  <td>检索增强型图元文件格式的可选文字说明.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetEnhMetaFileDimension.htm">_WinAPI_GetEnhMetaFileDimension</a></td>
  <td>检索指定增强型图元文件格式的尺寸.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetEnhMetaFileHeader.htm">_WinAPI_GetEnhMetaFileHeader</a></td>
  <td>检索指定的增强型图元文件格式记录包含的标题.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetErrorMessage.htm">_WinAPI_GetErrorMessage</a></td>
  <td>检索指定系统错误代码的错误信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetErrorMode.htm">_WinAPI_GetErrorMode</a></td>
  <td>检索当前进程的错误模式.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetExitCodeProcess.htm">_WinAPI_GetExitCodeProcess</a></td>
  <td>Retrieves the termination status of the specified process.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetFileAttributes.htm">_WinAPI_GetFileAttributes</a></td>
  <td>检索指定文件或目录的文件系统属性.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetFileInformationByHandle.htm">_WinAPI_GetFileInformationByHandle</a></td>
  <td>Retrieves file information for the specified file.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetFileSizeEx.htm">_WinAPI_GetFileSizeEx</a></td>
  <td>检索指定文件的大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetFileSizeOnDisk.htm">_WinAPI_GetFileSizeOnDisk</a></td>
  <td>Retrieves the file allocation size on disk.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetFileTitle.htm">_WinAPI_GetFileTitle</a></td>
  <td>获取指定文件名称</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetFileType.htm">_WinAPI_GetFileType</a></td>
  <td>Retrieves the file type of the specified file.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetFileVersionInfo.htm">_WinAPI_GetFileVersionInfo</a></td>
  <td>检索指定文件的版本信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetFinalPathNameByHandle.htm">_WinAPI_GetFinalPathNameByHandle</a></td>
  <td>Retrieves the final path for the specified file.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetFocus.htm">_WinAPI_GetFocus</a></td>
  <td>检索具有键盘焦点的窗口句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetFontResourceInfo.htm">_WinAPI_GetFontResourceInfo</a></td>
  <td>检索指定字体资源文件的字体名称.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetForegroundWindow.htm">_WinAPI_GetForegroundWindow</a></td>
  <td>返回前台窗口的句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetFRBuffer.htm">_WinAPI_GetFRBuffer</a></td>
  <td>Retrieves the current size of the internal buffer that used the _WinAPI_FindTextDlg() and _WinAPI_ReplaceTextDlg() functions.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetFullPathName.htm">_WinAPI_GetFullPathName</a></td>
  <td>Retrieves the full path and file name of the specified file.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetGraphicsMode.htm">_WinAPI_GetGraphicsMode</a></td>
  <td>Retrieves the current graphics mode for the specified device context.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetGuiResources.htm">_WinAPI_GetGuiResources</a></td>
  <td>返回指定进程所使用的 GUI 对象的句柄数</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetGUIThreadInfo.htm">_WinAPI_GetGUIThreadInfo</a></td>
  <td>Retrieves information about the active window or a specified GUI thread.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetGValue.htm">_WinAPI_GetGValue</a></td>
  <td>检索 32 位 RGB 值的绿色成分亮度值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetHandleInformation.htm">_WinAPI_GetHandleInformation</a></td>
  <td>检索对象句柄的属性.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetHGlobalFromStream.htm">_WinAPI_GetHGlobalFromStream</a></td>
  <td>检索流的全局内存句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetIconDimension.htm">_WinAPI_GetIconDimension</a></td>
  <td>检索指定图标的尺寸.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetIconInfo.htm">_WinAPI_GetIconInfo</a></td>
  <td>检索指定图标或光标的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetIconInfoEx.htm">_WinAPI_GetIconInfoEx</a></td>
  <td>Retrieves information about the specified icon or cursor.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetIdleTime.htm">_WinAPI_GetIdleTime</a></td>
  <td>检索自上次输入所用的时间.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetKeyboardLayout.htm">_WinAPI_GetKeyboardLayout</a></td>
  <td>检索指定窗口当前输入法区域标识符.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetKeyboardLayoutList.htm">_WinAPI_GetKeyboardLayoutList</a></td>
  <td>检索系统中当前设置的所有输入法标识符.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetKeyboardState.htm">_WinAPI_GetKeyboardState</a></td>
  <td>复制 256 个虚拟键的状态到指定缓冲区.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetKeyboardType.htm">_WinAPI_GetKeyboardType</a></td>
  <td>检索当前键盘信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetKeyNameText.htm">_WinAPI_GetKeyNameText</a></td>
  <td>检索键名称的字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetKeyState.htm">_WinAPI_GetKeyState</a></td>
  <td>检索指定虚拟键的状态.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetLastActivePopup.htm">_WinAPI_GetLastActivePopup</a></td>
  <td>Determines which pop-up window owned by the specified window was most recently active.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetLastError.htm">_WinAPI_GetLastError</a></td>
  <td>返回调用线程产生的最后一个错误代码值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetLastErrorMessage.htm">_WinAPI_GetLastErrorMessage</a></td>
  <td>返回调用线程产生的最后一个错误.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetLayeredWindowAttributes.htm">_WinAPI_GetLayeredWindowAttributes</a></td>
  <td>获取分层窗口属性</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetLocaleInfo.htm">_WinAPI_GetLocaleInfo</a></td>
  <td>检索区域设置标识符指定区域的信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetLogicalDrives.htm">_WinAPI_GetLogicalDrives</a></td>
  <td>检索当前可用磁盘驱动器的掩码.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetMapMode.htm">_WinAPI_GetMapMode</a></td>
  <td>Retrieves the current mapping mode.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetMessageExtraInfo.htm">_WinAPI_GetMessageExtraInfo</a></td>
  <td>Retrieves the extra message information for the current thread.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetModuleFileNameEx.htm">_WinAPI_GetModuleFileNameEx</a></td>
  <td>Retrieves the fully-qualified path for the file containing the specified module.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetModuleHandle.htm">_WinAPI_GetModuleHandle</a></td>
  <td>返回指定的模块句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetModuleHandleEx.htm">_WinAPI_GetModuleHandleEx</a></td>
  <td>检索指定模块的句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetModuleInformation.htm">_WinAPI_GetModuleInformation</a></td>
  <td>Retrieves information about the specified module.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetMousePos.htm">_WinAPI_GetMousePos</a></td>
  <td>返回当前鼠标位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetMousePosX.htm">_WinAPI_GetMousePosX</a></td>
  <td>返回当前鼠标的 X 位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetMousePosY.htm">_WinAPI_GetMousePosY</a></td>
  <td>返回当前鼠标的 Y 位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetObject.htm">_WinAPI_GetObject</a></td>
  <td>检索指定图形对象的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetObjectID.htm">_WinAPI_GetObjectID</a></td>
  <td>Retrieves the object identifier for the specified file or directory.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetObjectType.htm">_WinAPI_GetObjectType</a></td>
  <td>检索指定对象的类型.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetOpenFileName.htm">_WinAPI_GetOpenFileName</a></td>
  <td>创建打开对话框,让用户能打开指定的驱动器,目录和文件的名称或设置文件为打开</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetOutlineTextMetrics.htm">_WinAPI_GetOutlineTextMetrics</a></td>
  <td>检索 TrueType 字体文本规格.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetOverlappedResult.htm">_WinAPI_GetOverlappedResult</a></td>
  <td>检索重叠操作的结果</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetParent.htm">_WinAPI_GetParent</a></td>
  <td>返回一个指定的子窗口的父窗口的句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetParentProcess.htm">_WinAPI_GetParentProcess</a></td>
  <td>检索指定进程的父进程 PID.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetPerformanceInfo.htm">_WinAPI_GetPerformanceInfo</a></td>
  <td>检索系统性能信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetPhysicallyInstalledSystemMemory.htm">_WinAPI_GetPhysicallyInstalledSystemMemory</a></td>
  <td>Retrieves the amount of RAM that is physically installed on the computer.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetPixel.htm">_WinAPI_GetPixel</a></td>
  <td>检索指定坐标的像素颜色值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetPolyFillMode.htm">_WinAPI_GetPolyFillMode</a></td>
  <td>获取当前多边形的填充模式</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetPosFromRect.htm">_WinAPI_GetPosFromRect</a></td>
  <td>解读矩形坐标的偏移量和位置坐标.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetProcAddress.htm">_WinAPI_GetProcAddress</a></td>
  <td>检索指定动态链接库(DLL)中函数的地址.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetProcessAffinityMask.htm">_WinAPI_GetProcessAffinityMask</a></td>
  <td>获取进程和系统的相似掩码</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetProcessCommandLine.htm">_WinAPI_GetProcessCommandLine</a></td>
  <td>检索指定进程的命令行字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetProcessFileName.htm">_WinAPI_GetProcessFileName</a></td>
  <td>检索指定进程可执行文件的完整路径.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetProcessHandleCount.htm">_WinAPI_GetProcessHandleCount</a></td>
  <td>检索指定进程打开句柄的数量.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetProcessID.htm">_WinAPI_GetProcessID</a></td>
  <td>Retrieves the process identifier of the specified process.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetProcessIoCounters.htm">_WinAPI_GetProcessIoCounters</a></td>
  <td>检索指定进程所有执行 I/O 操作的统计信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetProcessMemoryInfo.htm">_WinAPI_GetProcessMemoryInfo</a></td>
  <td>检索指定进程的内存使用信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetProcessName.htm">_WinAPI_GetProcessName</a></td>
  <td>检索指定进程的名称.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetProcessShutdownParameters.htm">_WinAPI_GetProcessShutdownParameters</a></td>
  <td>Retrieves the shutdown parameters for the currently calling process.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetProcessTimes.htm">_WinAPI_GetProcessTimes</a></td>
  <td>检索指定进程的计时信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetProcessUser.htm">_WinAPI_GetProcessUser</a></td>
  <td>Retrieves the user and domain name for the specified process.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetProcessWindowStation.htm">_WinAPI_GetProcessWindowStation</a></td>
  <td>Retrieves a handle to the current window station for the calling process.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetProcessWorkingDirectory.htm">_WinAPI_GetProcessWorkingDirectory</a></td>
  <td>Retrieves the the current working directory for the specified process.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetProfilesDirectory.htm">_WinAPI_GetProfilesDirectory</a></td>
  <td>Retrieves the path to the root directory where user profiles are stored.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetPwrCapabilities.htm">_WinAPI_GetPwrCapabilities</a></td>
  <td>Retrieves information about the system power capabilities.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetRegionData.htm">_WinAPI_GetRegionData</a></td>
  <td>以描述区域的数据填充指定缓冲区</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetRegKeyNameByHandle.htm">_WinAPI_GetRegKeyNameByHandle</a></td>
  <td>Retrieves a name for the specified registry key.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetRgnBox.htm">_WinAPI_GetRgnBox</a></td>
  <td>检索指定矩形区域的边界.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetROP2.htm">_WinAPI_GetROP2</a></td>
  <td>检索指定设备环境的前台混合操作模式.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetRValue.htm">_WinAPI_GetRValue</a></td>
  <td>检索 32 位 RGB 值的红色成分的亮度值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetSaveFileName.htm">_WinAPI_GetSaveFileName</a></td>
  <td>创建保存对话框,让用户保存文件到指定的驱动器,目录和文件名</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetShellWindow.htm">_WinAPI_GetShellWindow</a></td>
  <td>Retrieves a handle to the Shell's desktop window.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetStartupInfo.htm">_WinAPI_GetStartupInfo</a></td>
  <td>Retrieves the contents of the STARTUPINFO structure that was specified when the calling process was created.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetStdHandle.htm">_WinAPI_GetStdHandle</a></td>
  <td>检索标准输入,标准输出,或标准错误设备的句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetStockObject.htm">_WinAPI_GetStockObject</a></td>
  <td>检索预定义的常用笔, 画笔, 字体, 或调色板的句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetString.htm">_WinAPI_GetString</a></td>
  <td>Returns a string located at the specified memory address.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetSysColor.htm">_WinAPI_GetSysColor</a></td>
  <td>返回指定显示元素的当前颜色</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetSysColorBrush.htm">_WinAPI_GetSysColorBrush</a></td>
  <td>检索对应指定颜色索引的逻辑笔刷的句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetSystemDefaultLCID.htm">_WinAPI_GetSystemDefaultLCID</a></td>
  <td>返回系统的区域设置标识符(LCID).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetSystemDEPPolicy.htm">_WinAPI_GetSystemDEPPolicy</a></td>
  <td>Gets the data execution prevention (DEP) policy setting for the system.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetSystemInfo.htm">_WinAPI_GetSystemInfo</a></td>
  <td>检索当前系统的信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetSystemMetrics.htm">_WinAPI_GetSystemMetrics</a></td>
  <td>检索指定的系统度量或系统配置设置</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetSystemPowerStatus.htm">_WinAPI_GetSystemPowerStatus</a></td>
  <td>检索系统的电源状态.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetSystemTimes.htm">_WinAPI_GetSystemTimes</a></td>
  <td>检索系统计时信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetSystemWow64Directory.htm">_WinAPI_GetSystemWow64Directory</a></td>
  <td>检索 WOW64 使用的系统目录路径.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetTempFileName.htm">_WinAPI_GetTempFileName</a></td>
  <td>创建临时文件的名称.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetTextAlign.htm">_WinAPI_GetTextAlign</a></td>
  <td>检索指定设备环境文本对齐的设定值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetTextCharacterExtra.htm">_WinAPI_GetTextCharacterExtra</a></td>
  <td>Retrieves the current intercharacter spacing for the specified device context.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetTextColor.htm">_WinAPI_GetTextColor</a></td>
  <td>检索指定设备环境的当前文本颜色.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetTextExtentPoint32.htm">_WinAPI_GetTextExtentPoint32</a></td>
  <td>计算指定文本字符串的宽度和高度</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetTextFace.htm">_WinAPI_GetTextFace</a></td>
  <td>检索指定设备环境选定字体的名称.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetTextMetrics.htm">_WinAPI_GetTextMetrics</a></td>
  <td>返回当前选定字体的基本信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeAppProperties.htm">_WinAPI_GetThemeAppProperties</a></td>
  <td>检索当前应用程序控制视觉样式的属性标志.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeBackgroundContentRect.htm">_WinAPI_GetThemeBackgroundContentRect</a></td>
  <td>Retrieves the size of the content area for the background defined by the visual style.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeBackgroundExtent.htm">_WinAPI_GetThemeBackgroundExtent</a></td>
  <td>Calculates the size and location of the background, defined by the visual style, given the content area.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeBackgroundRegion.htm">_WinAPI_GetThemeBackgroundRegion</a></td>
  <td>Computes the region for a regular or partially transparent background that is bounded by a specified rectangle.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeBitmap.htm">_WinAPI_GetThemeBitmap</a></td>
  <td>Retrieves the bitmap associated with a particular theme, part, state, and property.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeBool.htm">_WinAPI_GetThemeBool</a></td>
  <td>Retrieves the value of a BOOL property from the SysMetrics section of theme data.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeColor.htm">_WinAPI_GetThemeColor</a></td>
  <td>检索指定窗口的颜色属性值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeDocumentationProperty.htm">_WinAPI_GetThemeDocumentationProperty</a></td>
  <td>检索指定主题文件文档的属性值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeEnumValue.htm">_WinAPI_GetThemeEnumValue</a></td>
  <td>Retrieves the value of an enumerated type property.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeFilename.htm">_WinAPI_GetThemeFilename</a></td>
  <td>Retrieves the value of a filename property.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeFont.htm">_WinAPI_GetThemeFont</a></td>
  <td>检索字体的属性值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeInt.htm">_WinAPI_GetThemeInt</a></td>
  <td>检索 int 的属性值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeMargins.htm">_WinAPI_GetThemeMargins</a></td>
  <td>检索 MARGINS(页边空白) 的属性值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeMetric.htm">_WinAPI_GetThemeMetric</a></td>
  <td>Retrieves the value of a metric property.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemePartSize.htm">_WinAPI_GetThemePartSize</a></td>
  <td>计算视觉样式定义部件的原始大小.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemePosition.htm">_WinAPI_GetThemePosition</a></td>
  <td>检索位置属性值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemePropertyOrigin.htm">_WinAPI_GetThemePropertyOrigin</a></td>
  <td>Retrieves the location of the theme property definition for a property.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeRect.htm">_WinAPI_GetThemeRect</a></td>
  <td>检索 RECT(矩形) 的属性值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeString.htm">_WinAPI_GetThemeString</a></td>
  <td>Retrieves the value of a string property.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeSysBool.htm">_WinAPI_GetThemeSysBool</a></td>
  <td>Retrieves the Boolean value of a system metric.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeSysColor.htm">_WinAPI_GetThemeSysColor</a></td>
  <td>Retrieves the value of a system color.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeSysColorBrush.htm">_WinAPI_GetThemeSysColorBrush</a></td>
  <td>Retrieves a system color brush.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeSysFont.htm">_WinAPI_GetThemeSysFont</a></td>
  <td>Retrieves the font information of a system font.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeSysInt.htm">_WinAPI_GetThemeSysInt</a></td>
  <td>Retrieves the value of a system INT.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeSysSize.htm">_WinAPI_GetThemeSysSize</a></td>
  <td>Retrieves the value of a system size metric from theme data.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeSysString.htm">_WinAPI_GetThemeSysString</a></td>
  <td>Retrieves the value of a system string.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeTextExtent.htm">_WinAPI_GetThemeTextExtent</a></td>
  <td>Calculates the size and location of the specified text when rendered in the visual style font.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeTextMetrics.htm">_WinAPI_GetThemeTextMetrics</a></td>
  <td>Retrieves information about the font specified by a visual style for a particular part.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThemeTransitionDuration.htm">_WinAPI_GetThemeTransitionDuration</a></td>
  <td>Gets the duration for the specified transition.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThreadDesktop.htm">_WinAPI_GetThreadDesktop</a></td>
  <td>Retrieves a handle to the desktop assigned to the specified thread.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetThreadErrorMode.htm">_WinAPI_GetThreadErrorMode</a></td>
  <td>Retrieves the error mode for the calling thread.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetTickCount.htm">_WinAPI_GetTickCount</a></td>
  <td>检索系统已启动以来运行的毫秒数.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetTickCount64.htm">_WinAPI_GetTickCount64</a></td>
  <td>检索系统已启动以来运行的毫秒数.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetTimeFormat.htm">_WinAPI_GetTimeFormat</a></td>
  <td>格式化指定区域标识符的时间字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetTopWindow.htm">_WinAPI_GetTopWindow</a></td>
  <td>检索 Z 序顶部的子窗口句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetUDFColorMode.htm">_WinAPI_GetUDFColorMode</a></td>
  <td>检索 WinAPIEx UDF 库当前颜色模式.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetUDFVersion.htm">_WinAPI_GetUDFVersion</a></td>
  <td>检索 WinAPIEx UDF 库的最新版本.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetUpdateRect.htm">_WinAPI_GetUpdateRect</a></td>
  <td>检索指定窗口包围更新区域的矩形坐标.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetUpdateRgn.htm">_WinAPI_GetUpdateRgn</a></td>
  <td>通过复制指定区域检索窗口的更新区域.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetUserDefaultLCID.htm">_WinAPI_GetUserDefaultLCID</a></td>
  <td>返回用户默认区域设置标识符(LCID).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetUserObjectInformation.htm">_WinAPI_GetUserObjectInformation</a></td>
  <td>Retrieves information about the specified window station or desktop object.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetVersion.htm">_WinAPI_GetVersion</a></td>
  <td>检索操作系统的当前版本.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetVersionEx.htm">_WinAPI_GetVersionEx</a></td>
  <td>检索当前操作系统信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetVolumeNameForVolumeMountPoint.htm">_WinAPI_GetVolumeNameForVolumeMountPoint</a></td>
  <td>检索指定装入点的卷 GUID 路径.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWindow.htm">_WinAPI_GetWindow</a></td>
  <td>检索与指定窗口有特定关系的窗口句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWindowDC.htm">_WinAPI_GetWindowDC</a></td>
  <td>检索整个窗口的设备环境（DC）</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWindowDisplayAffinity.htm">_WinAPI_GetWindowDisplayAffinity</a></td>
  <td>Retrieves the current display affinity setting, from any process, for a given window.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWindowExt.htm">_WinAPI_GetWindowExt</a></td>
  <td>Retrieves the x-extent and y-extent of the window for the specified device context.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWindowFileName.htm">_WinAPI_GetWindowFileName</a></td>
  <td>检索指定窗口句柄关联模块的完整路径.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWindowHeight.htm">_WinAPI_GetWindowHeight</a></td>
  <td>返回窗口高度.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWindowInfo.htm">_WinAPI_GetWindowInfo</a></td>
  <td>检索指定窗口的信息,返回信息结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWindowLong.htm">_WinAPI_GetWindowLong</a></td>
  <td>检索指定窗口的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWindowLongEx.htm">_WinAPI_GetWindowLongEx</a></td>
  <td>检索指定窗口的信息,返回请求的信息值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWindowOrg.htm">_WinAPI_GetWindowOrg</a></td>
  <td>Retrieves the x-coordinates and y-coordinates of the window origin for the specified device context.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWindowPlacement.htm">_WinAPI_GetWindowPlacement</a></td>
  <td>检索最小, 最大窗口与正常位置的布局</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWindowRect.htm">_WinAPI_GetWindowRect</a></td>
  <td>检索指定窗口矩形的尺寸</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWindowRgn.htm">_WinAPI_GetWindowRgn</a></td>
  <td>获得窗口范围的副本</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWindowSubclass.htm">_WinAPI_GetWindowSubclass</a></td>
  <td>Retrieves the reference data for the specified window subclass callback.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWindowText.htm">_WinAPI_GetWindowText</a></td>
  <td>从指定窗口的标题栏返回一个文本.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWindowTheme.htm">_WinAPI_GetWindowTheme</a></td>
  <td>Retrieves a theme handle to a window that has visual styles applied.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWindowThreadProcessId.htm">_WinAPI_GetWindowThreadProcessId</a></td>
  <td>检索指定窗口创建的线程标识符</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWindowWidth.htm">_WinAPI_GetWindowWidth</a></td>
  <td>返回窗口宽度</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWorkArea.htm">_WinAPI_GetWorkArea</a></td>
  <td>检索主显示器工作区的大小.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetWorldTransform.htm">_WinAPI_GetWorldTransform</a></td>
  <td>Retrieves the current world-space to page-space transformation.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GetXYFromPoint.htm">_WinAPI_GetXYFromPoint</a></td>
  <td>从 $tagPOINT 结构返回 X/Y 值</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GlobalMemoryStatus.htm">_WinAPI_GlobalMemoryStatus</a></td>
  <td>检索当前可用内存的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GradientFill.htm">_WinAPI_GradientFill</a></td>
  <td>渐变填充矩形或三角形.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GUIDFromString.htm">_WinAPI_GUIDFromString</a></td>
  <td>从字符串GUID转换为二进制GUID.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_GUIDFromStringEx.htm">_WinAPI_GUIDFromStringEx</a></td>
  <td>字符串转换为二进制形式的 GUID</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_Hex64.htm">_WinAPI_Hex64</a></td>
  <td>Converts an integer value into a string of its hexadecimal representation.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_HiByte.htm">_WinAPI_HiByte</a></td>
  <td>Returns the high BYTE of a 16-bit (2 bytes) value.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_HideCaret.htm">_WinAPI_HideCaret</a></td>
  <td>移除屏幕插入符号.隐藏但不破坏插入符号目前形状或无效的插入点.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_HiDWord.htm">_WinAPI_HiDWord</a></td>
  <td>返回 64 位(8字节)值的高位字值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_HiWord.htm">_WinAPI_HiWord</a></td>
  <td>返回 longword 值的高字</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_InflateRect.htm">_WinAPI_InflateRect</a></td>
  <td>增加或减少指定矩形的宽度和高度.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_InProcess.htm">_WinAPI_InProcess</a></td>
  <td>确定窗口是否属于当前进程</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IntersectClipRect.htm">_WinAPI_IntersectClipRect</a></td>
  <td>从当前的剪切区部分和指定矩形创建新的剪切区域</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IntersectRect.htm">_WinAPI_IntersectRect</a></td>
  <td>创造两个矩形的交集.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IntToDWord.htm">_WinAPI_IntToDWord</a></td>
  <td>转换 INT 类型值为 DWORD 类型值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IntToFloat.htm">_WinAPI_IntToFloat</a></td>
  <td>返回一个4字节整数值为浮点值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_InvalidateRect.htm">_WinAPI_InvalidateRect</a></td>
  <td>添加矩形到指定窗口的更新区域</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_InvalidateRgn.htm">_WinAPI_InvalidateRgn</a></td>
  <td>增加区域到指定窗口的更新区域.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_InvertColor.htm">_WinAPI_InvertColor</a></td>
  <td>Inverts (negative) the specified color.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_InvertRect.htm">_WinAPI_InvertRect</a></td>
  <td>对每个像素颜色值执行逻辑 NOT 运算, 使窗口矩形反转.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_InvertRgn.htm">_WinAPI_InvertRgn</a></td>
  <td>反转指定区域的颜色.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IOCTL.htm">_WinAPI_IOCTL</a></td>
  <td>Create a unique system I/O control code (IOCTL).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsBadCodePtr.htm">_WinAPI_IsBadCodePtr</a></td>
  <td>Determines whether the calling process has read access to the memory at the specified address.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsBadReadPtr.htm">_WinAPI_IsBadReadPtr</a></td>
  <td>Verifies that the calling process has read access to the specified range of memory.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsBadStringPtr.htm">_WinAPI_IsBadStringPtr</a></td>
  <td>Verifies that the calling process has read access to the specified range of memory.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsBadWritePtr.htm">_WinAPI_IsBadWritePtr</a></td>
  <td>Verifies that the calling process has write access to the specified range of memory.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsChild.htm">_WinAPI_IsChild</a></td>
  <td>测试窗口是否为指定父窗的子窗口.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsClassName.htm">_WinAPI_IsClassName</a></td>
  <td>包装检查类控件的名称.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsDoorOpen.htm">_WinAPI_IsDoorOpen</a></td>
  <td>检查光驱托盘的开/关状态.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsHungAppWindow.htm">_WinAPI_IsHungAppWindow</a></td>
  <td>确定指定的应用程序是否没有响应.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsIconic.htm">_WinAPI_IsIconic</a></td>
  <td>确定指定窗口是否最小化</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsInternetConnected.htm">_WinAPI_IsInternetConnected</a></td>
  <td>确定当前用户是否连接到互联网.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsLoadKBLayout.htm">_WinAPI_IsLoadKBLayout</a></td>
  <td>确定指定输入法区域设置是否加载到系统中.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsNetworkAlive.htm">_WinAPI_IsNetworkAlive</a></td>
  <td>确定本地系统的网络连接状态,并确定网络连接的类型.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsProcessInJob.htm">_WinAPI_IsProcessInJob</a></td>
  <td>确定进程是否运行在指定的作业对象中.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsProcessorFeaturePresent.htm">_WinAPI_IsProcessorFeaturePresent</a></td>
  <td>确定当前计算机是否支持指定处理器的特点.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsRectEmpty.htm">_WinAPI_IsRectEmpty</a></td>
  <td>确定指定矩形是否为空.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsThemeActive.htm">_WinAPI_IsThemeActive</a></td>
  <td>测试当前运行应用程序的可见状态.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsThemeBackgroundPartiallyTransparent.htm">_WinAPI_IsThemeBackgroundPartiallyTransparent</a></td>
  <td>检索视觉样式指定的背景是否为透明或 alpha 混合.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsThemePartDefined.htm">_WinAPI_IsThemePartDefined</a></td>
  <td>检索视觉样式是否为指定的部件参数定义的.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsValidLocale.htm">_WinAPI_IsValidLocale</a></td>
  <td>确定操作系统安装或支持的指定区域.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsWindow.htm">_WinAPI_IsWindow</a></td>
  <td>确定指定的窗口句柄是否标识现有窗口</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsWindowEnabled.htm">_WinAPI_IsWindowEnabled</a></td>
  <td>确定指定窗口是否启用鼠标和键盘输入.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsWindowUnicode.htm">_WinAPI_IsWindowUnicode</a></td>
  <td>确定指定窗口是否为本地 Unicode 窗口.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsWindowVisible.htm">_WinAPI_IsWindowVisible</a></td>
  <td>检索指定窗口的可见状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsWow64Process.htm">_WinAPI_IsWow64Process</a></td>
  <td>确定指定的进程是否在 WOW64 下运行.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsWritable.htm">_WinAPI_IsWritable</a></td>
  <td>确定磁盘是否可写磁盘.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_IsZoomed.htm">_WinAPI_IsZoomed</a></td>
  <td>确定窗口是否最大化.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_Keybd_Event.htm">_WinAPI_Keybd_Event</a></td>
  <td>合成按键.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_KillTimer.htm">_WinAPI_KillTimer</a></td>
  <td>销毁指定的计时器.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LineDDA.htm">_WinAPI_LineDDA</a></td>
  <td>确定直线上的高亮像素</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LineTo.htm">_WinAPI_LineTo</a></td>
  <td>从当前位置绘制一条线, 但不包括指定点.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LoadBitmap.htm">_WinAPI_LoadBitmap</a></td>
  <td>加载指定模块可执行文件的位图资源</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LoadCursor.htm">_WinAPI_LoadCursor</a></td>
  <td>加载可执行(.EXE)文件指定的光标资源.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LoadCursorFromFile.htm">_WinAPI_LoadCursorFromFile</a></td>
  <td>创建基于文件数据的光标.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LoadIconWithScaleDown.htm">_WinAPI_LoadIconWithScaleDown</a></td>
  <td>加载了图标并按比例缩减较大图像;而不是按比例放大小图像.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LoadImage.htm">_WinAPI_LoadImage</a></td>
  <td>载入一个图标,光标,或者位图.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LoadIndirectString.htm">_WinAPI_LoadIndirectString</a></td>
  <td>Extracts the string from the specified resource when given an indirect string.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LoadKeyboardLayout.htm">_WinAPI_LoadKeyboardLayout</a></td>
  <td>加载新的输入法区域设置标识符到系统.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LoadLibrary.htm">_WinAPI_LoadLibrary</a></td>
  <td>映射指定的可执行模块到调用进程的地址空间</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LoadLibraryEx.htm">_WinAPI_LoadLibraryEx</a></td>
  <td>映射指定的可执行模块到调用进程的地址空间</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LoadMedia.htm">_WinAPI_LoadMedia</a></td>
  <td>加载媒体到设备.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LoadResource.htm">_WinAPI_LoadResource</a></td>
  <td>加载指定资源到全局内存.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LoadShell32Icon.htm">_WinAPI_LoadShell32Icon</a></td>
  <td>提取 Shell32.dll 文件的图标</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LoadString.htm">_WinAPI_LoadString</a></td>
  <td>加载指定模块关联的可执行文件字符串资源</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LoByte.htm">_WinAPI_LoByte</a></td>
  <td>Returns the low BYTE of a 16-bit (2 bytes) value.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LocalFree.htm">_WinAPI_LocalFree</a></td>
  <td>是否指定的局部内存对象并销毁它的句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LockDevice.htm">_WinAPI_LockDevice</a></td>
  <td>启用或禁用具有锁定功能的设备的弹出媒体机制.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LockFile.htm">_WinAPI_LockFile</a></td>
  <td>锁定由调用进程独占访问指定的文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LockResource.htm">_WinAPI_LockResource</a></td>
  <td>锁定内存中指定的资源.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LockWindowUpdate.htm">_WinAPI_LockWindowUpdate</a></td>
  <td>Disables or enables drawing in the specified window.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LockWorkStation.htm">_WinAPI_LockWorkStation</a></td>
  <td>锁定工作站的显示器.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LoDWord.htm">_WinAPI_LoDWord</a></td>
  <td>返回 64 位(8字节)值的低位双字(DWORD).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LongMid.htm">_WinAPI_LongMid</a></td>
  <td>Extracts a number of bits from a DWORD (32-bit) value.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LookupIconIdFromDirectoryEx.htm">_WinAPI_LookupIconIdFromDirectoryEx</a></td>
  <td>搜索适合当前显示设备的图标或光标的数据.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LoWord.htm">_WinAPI_LoWord</a></td>
  <td>返回 longword 低位字</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LPtoDP.htm">_WinAPI_LPtoDP</a></td>
  <td>Converts a logical coordinates into device coordinates.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LZNTCompress.htm">_WinAPI_LZNTCompress</a></td>
  <td>Compresses an input data.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_LZNTDecompress.htm">_WinAPI_LZNTDecompress</a></td>
  <td>Decompresses an input data.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_MAKELANGID.htm">_WinAPI_MAKELANGID</a></td>
  <td>从主语言 ID 和子语言标识构建语言 ID</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_MAKELCID.htm">_WinAPI_MAKELCID</a></td>
  <td>从语言ID和分类(排序)ID构造一个本地ID.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_MakeLong.htm">_WinAPI_MakeLong</a></td>
  <td>从两个整数值(Int)返回一个长整值(LongInt).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_MakeQWord.htm">_WinAPI_MakeQWord</a></td>
  <td>从两个 int 值返回一个 QWORD 值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_MapViewOfFile.htm">_WinAPI_MapViewOfFile</a></td>
  <td>映射文件映射视图到调用进程的地址空间.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_MapVirtualKey.htm">_WinAPI_MapVirtualKey</a></td>
  <td>Translates a virtual-key code into a scan code or character value, or translates a scan code into a virtual-key code.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_MaskBlt.htm">_WinAPI_MaskBlt</a></td>
  <td>对源位图和目标位图使用指定光栅和遮盖操作结合颜色数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_MessageBeep.htm">_WinAPI_MessageBeep</a></td>
  <td>播放波形声音</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_MessageBoxCheck.htm">_WinAPI_MessageBoxCheck</a></td>
  <td>显示提供用户删除事件的选项消息框.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_MessageBoxIndirect.htm">_WinAPI_MessageBoxIndirect</a></td>
  <td>创建, 显示并操作消息框</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ModifyWorldTransform.htm">_WinAPI_ModifyWorldTransform</a></td>
  <td>Changes the world transformation for a device context using the specified mode.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_Mouse_Event.htm">_WinAPI_Mouse_Event</a></td>
  <td>综合鼠标运动轨迹与按键点击</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_MoveFileEx.htm">_WinAPI_MoveFileEx</a></td>
  <td>移动文件或目录,通过回调函数通知应用程序的进展.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_MoveMemory.htm">_WinAPI_MoveMemory</a></td>
  <td>Moves a block of memory from one location to another.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_MoveTo.htm">_WinAPI_MoveTo</a></td>
  <td>更新当前位置到指定点</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_MoveToEx.htm">_WinAPI_MoveToEx</a></td>
  <td>更新当前位置到指定点.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_MoveWindow.htm">_WinAPI_MoveWindow</a></td>
  <td>变化指定窗口的位置和尺寸</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_MsgBox.htm">_WinAPI_MsgBox</a></td>
  <td>显示大于原始宽度的消息框</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_MulDiv.htm">_WinAPI_MulDiv</a></td>
  <td>两个 32 位值相乘, 然后除以 64 位值所得的 32 位值</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_MultiByteToWideChar.htm">_WinAPI_MultiByteToWideChar</a></td>
  <td>映射字符串到宽字符（Unicode）字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_MultiByteToWideCharEx.htm">_WinAPI_MultiByteToWideCharEx</a></td>
  <td>映射字符串到宽字符（Unicode）字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_NtStatusToDosError.htm">_WinAPI_NtStatusToDosError</a></td>
  <td>Converts the specified NTSTATUS code to its equivalent system error code.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_OemToChar.htm">_WinAPI_OemToChar</a></td>
  <td>转换 OEM 定义的字符串为 ANSI 字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_OffsetClipRgn.htm">_WinAPI_OffsetClipRgn</a></td>
  <td>依据指定的偏移量移动设备环境剪辑区域.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_OffsetPoints.htm">_WinAPI_OffsetPoints</a></td>
  <td>由指定的偏移值移动坐标数组的点.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_OffsetRect.htm">_WinAPI_OffsetRect</a></td>
  <td>依据指定的偏移量移动指定的矩形.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_OffsetRgn.htm">_WinAPI_OffsetRgn</a></td>
  <td>依据指定的偏移量移动区域.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_OffsetWindowOrg.htm">_WinAPI_OffsetWindowOrg</a></td>
  <td>Modifies the window origin for a device context using the specified horizontal and vertical offsets.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_OpenDesktop.htm">_WinAPI_OpenDesktop</a></td>
  <td>Opens the specified desktop object.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_OpenFileById.htm">_WinAPI_OpenFileById</a></td>
  <td>Opens the file that matches the specified object identifier.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_OpenFileMapping.htm">_WinAPI_OpenFileMapping</a></td>
  <td>打开命名的文件映射对象.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_OpenIcon.htm">_WinAPI_OpenIcon</a></td>
  <td>还原最小化窗口到原来的大小和位置,并激活窗口.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_OpenInputDesktop.htm">_WinAPI_OpenInputDesktop</a></td>
  <td>Opens the desktop that receives user input.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_OpenJobObject.htm">_WinAPI_OpenJobObject</a></td>
  <td>打开现有的作业对象.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_OpenMutex.htm">_WinAPI_OpenMutex</a></td>
  <td>打开现有已命名的互斥对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_OpenProcess.htm">_WinAPI_OpenProcess</a></td>
  <td>返回一个现有进程对象的句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_OpenProcessToken.htm">_WinAPI_OpenProcessToken</a></td>
  <td>打开与进程有关的访问令牌.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_OpenSemaphore.htm">_WinAPI_OpenSemaphore</a></td>
  <td>打开现有命名的信号量对象.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_OpenThemeData.htm">_WinAPI_OpenThemeData</a></td>
  <td>打开了窗口的主题数据及其关联类.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_OpenWindowStation.htm">_WinAPI_OpenWindowStation</a></td>
  <td>Opens the specified window station.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PageSetupDlg.htm">_WinAPI_PageSetupDlg</a></td>
  <td>Creates a Page Setup dialog box that enables the user to specify the attributes of a printed page.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PaintDesktop.htm">_WinAPI_PaintDesktop</a></td>
  <td>Fills the clipping region in the specified device context with the desktop pattern or wallpaper.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PaintRgn.htm">_WinAPI_PaintRgn</a></td>
  <td>使用当前设备环境选择的画刷绘制指定区域.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PatBlt.htm">_WinAPI_PatBlt</a></td>
  <td>使用指定设备环境当前选定的画刷绘制指定的矩形.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathCompactPath.htm">_WinAPI_PathCompactPath</a></td>
  <td>使用省略号截短文件路径,以符合特定的像素宽度.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathCompactPathEx.htm">_WinAPI_PathCompactPathEx</a></td>
  <td>Truncates a path to fit within a certain number of characters by replacing path components with ellipses.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathFindExtension.htm">_WinAPI_PathFindExtension</a></td>
  <td>搜索扩展路径.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathFindFileName.htm">_WinAPI_PathFindFileName</a></td>
  <td>搜索路径中的文件名.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathFindNextComponent.htm">_WinAPI_PathFindNextComponent</a></td>
  <td>解析路径,并返回路径中第一个反斜杠后面的部分.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathFindOnPath.htm">_WinAPI_PathFindOnPath</a></td>
  <td>搜索默认系统路径文件</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathGetArgs.htm">_WinAPI_PathGetArgs</a></td>
  <td>查找给定路径的命令行参数.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathGetCharType.htm">_WinAPI_PathGetCharType</a></td>
  <td>确定路径相关的字符类型.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathGetDriveNumber.htm">_WinAPI_PathGetDriveNumber</a></td>
  <td>搜索 'A' 到 'Z' 范围内驱动符路径,并返回相应驱动器号.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathIsContentType.htm">_WinAPI_PathIsContentType</a></td>
  <td>Determines if a file's registered content type matches the specified content type.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathIsDirectory.htm">_WinAPI_PathIsDirectory</a></td>
  <td>验证路径是一个有效的目录.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathIsDirectoryEmpty.htm">_WinAPI_PathIsDirectoryEmpty</a></td>
  <td>确定指定路径是否为空目录.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathIsExe.htm">_WinAPI_PathIsExe</a></td>
  <td>检查文件扩展名确定是否为可执行文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathIsFileSpec.htm">_WinAPI_PathIsFileSpec</a></td>
  <td>搜索路径的路径分隔符.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathIsLFNFileSpec.htm">_WinAPI_PathIsLFNFileSpec</a></td>
  <td>Determines whether a file name is in long format.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathIsRelative.htm">_WinAPI_PathIsRelative</a></td>
  <td>搜索路径并确定它是相对路径.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathIsRoot.htm">_WinAPI_PathIsRoot</a></td>
  <td>Parses a path to determine if it is a directory root.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathIsSameRoot.htm">_WinAPI_PathIsSameRoot</a></td>
  <td>比较两条路径,以确定他们是否有共同的根组件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathIsSystemFolder.htm">_WinAPI_PathIsSystemFolder</a></td>
  <td>Determines if an existing folder contains the attributes that make it a system folder.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathMakeSystemFolder.htm">_WinAPI_PathMakeSystemFolder</a></td>
  <td>Gives an existing folder the proper attributes to become a system folder.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathMatchSpec.htm">_WinAPI_PathMatchSpec</a></td>
  <td>搜索匹配 MS-DOS 通配符的字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathParseIconLocation.htm">_WinAPI_PathParseIconLocation</a></td>
  <td>解析包含文件路径和图标索引的文件位置字符串</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathRelativePathTo.htm">_WinAPI_PathRelativePathTo</a></td>
  <td>创建文件或文件夹的相对路径到另一个.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathRemoveArgs.htm">_WinAPI_PathRemoveArgs</a></td>
  <td>移除给定路径的参数</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathRemoveBackslash.htm">_WinAPI_PathRemoveBackslash</a></td>
  <td>Removes the trailing backslash from a given path.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathRemoveExtension.htm">_WinAPI_PathRemoveExtension</a></td>
  <td>Removes the file name extension from a path, if one is present.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathRemoveFileSpec.htm">_WinAPI_PathRemoveFileSpec</a></td>
  <td>Removes the trailing file name and backslash from a path, if they are present.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathRenameExtension.htm">_WinAPI_PathRenameExtension</a></td>
  <td>替换文件的扩展名.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathSearchAndQualify.htm">_WinAPI_PathSearchAndQualify</a></td>
  <td>格式化路径为完整有效的路径.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathSkipRoot.htm">_WinAPI_PathSkipRoot</a></td>
  <td>Parses a path, ignoring the drive letter or Universal Naming Convention (UNC) server/share path elements.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathStripPath.htm">_WinAPI_PathStripPath</a></td>
  <td>Removes the path portion of a fully qualified path and file.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathStripToRoot.htm">_WinAPI_PathStripToRoot</a></td>
  <td>Removes all parts of the path except for the root information.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathToRegion.htm">_WinAPI_PathToRegion</a></td>
  <td>从选入设备场景的路径创建区域</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathUndecorate.htm">_WinAPI_PathUndecorate</a></td>
  <td>Removes the decoration from a path string.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathUnExpandEnvStrings.htm">_WinAPI_PathUnExpandEnvStrings</a></td>
  <td>替换文件夹所在完整有效路径名为相关的环境字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathUnmakeSystemFolder.htm">_WinAPI_PathUnmakeSystemFolder</a></td>
  <td>Removes the attributes from a folder that make it a system folder.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathUnquoteSpaces.htm">_WinAPI_PathUnquoteSpaces</a></td>
  <td>移除路径开始和结尾的引号</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PathYetAnotherMakeUniqueName.htm">_WinAPI_PathYetAnotherMakeUniqueName</a></td>
  <td>基于现有文件名创建唯一文件名.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PickIconDlg.htm">_WinAPI_PickIconDlg</a></td>
  <td>显示图标选择对话框.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PlayEnhMetaFile.htm">_WinAPI_PlayEnhMetaFile</a></td>
  <td>显示指定增强型图元文件中的图片.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PlaySound.htm">_WinAPI_PlaySound</a></td>
  <td>播放指定文件名、资源或系统事件的声音.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PointFromRect.htm">_WinAPI_PointFromRect</a></td>
  <td>以 $tagPOINT 结构返回 $tagRECT 结构左上角的坐标</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PolyBezier.htm">_WinAPI_PolyBezier</a></td>
  <td>绘制一或多个贝塞尔曲线.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PolyBezierTo.htm">_WinAPI_PolyBezierTo</a></td>
  <td>绘制一或多个贝塞尔曲线.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PolyDraw.htm">_WinAPI_PolyDraw</a></td>
  <td>绘制贝塞尔曲线的线段</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_Polygon.htm">_WinAPI_Polygon</a></td>
  <td>绘制多边形.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PostMessage.htm">_WinAPI_PostMessage</a></td>
  <td>将一个消息放入消息队列中并返回</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PrimaryLangId.htm">_WinAPI_PrimaryLangId</a></td>
  <td>从语言ID中取出主语言ID</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PrintDlg.htm">_WinAPI_PrintDlg</a></td>
  <td>Displays a Print dialog box.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PrintDlgEx.htm">_WinAPI_PrintDlgEx</a></td>
  <td>Displays a Print property sheet that enables the user to specify the properties of a particular print job.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PrintWindow.htm">_WinAPI_PrintWindow</a></td>
  <td>将指定可见窗口复制到指定设备场景</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PtInRect.htm">_WinAPI_PtInRect</a></td>
  <td>确定指定点是否在指定矩形中</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PtInRectEx.htm">_WinAPI_PtInRectEx</a></td>
  <td>确定指定点是否在指定的矩形中.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PtInRegion.htm">_WinAPI_PtInRegion</a></td>
  <td>确定指定点是否在指定区域内.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_PtVisible.htm">_WinAPI_PtVisible</a></td>
  <td>确定指定点是否位于剪切区域内</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_QueryDosDevice.htm">_WinAPI_QueryDosDevice</a></td>
  <td>检索特定 MS - DOS 设备名称的当前映射.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_QueryInformationJobObject.htm">_WinAPI_QueryInformationJobObject</a></td>
  <td>检索作业对象的限制和作业状态信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_QueryPerformanceCounter.htm">_WinAPI_QueryPerformanceCounter</a></td>
  <td>获取高精度性能计数器的当前值</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_QueryPerformanceFrequency.htm">_WinAPI_QueryPerformanceFrequency</a></td>
  <td>检索高分辨率性能计数器的频率.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RadialGradientFill.htm">_WinAPI_RadialGradientFill</a></td>
  <td>径向渐变填充.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ReadFile.htm">_WinAPI_ReadFile</a></td>
  <td>从一个文件读取数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ReadProcessMemory.htm">_WinAPI_ReadProcessMemory</a></td>
  <td>读取指定进程的内存</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_Rectangle.htm">_WinAPI_Rectangle</a></td>
  <td>绘制矩形.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RectInRegion.htm">_WinAPI_RectInRegion</a></td>
  <td>确定指定矩形的任意部分是否处于区域的边界内</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RectIsEmpty.htm">_WinAPI_RectIsEmpty</a></td>
  <td>判断回收站是否为空.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RectVisible.htm">_WinAPI_RectVisible</a></td>
  <td>确定矩形的任意部分是否位于剪切区域内</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RedrawWindow.htm">_WinAPI_RedrawWindow</a></td>
  <td>更新指定矩形或窗口客户区域</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegCloseKey.htm">_WinAPI_RegCloseKey</a></td>
  <td>关闭指定注册表项的句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegConnectRegistry.htm">_WinAPI_RegConnectRegistry</a></td>
  <td>在另一台计算机上创建一个预定义的注册表项联接.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegCopyTree.htm">_WinAPI_RegCopyTree</a></td>
  <td>递归复制子项和子项的源值到目标键项.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegCopyTreeEx.htm">_WinAPI_RegCopyTreeEx</a></td>
  <td>复制指定的注册表项及其子项到指定的目标键.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegCreateKey.htm">_WinAPI_RegCreateKey</a></td>
  <td>创建指定的注册表键.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegDeleteEmptyKey.htm">_WinAPI_RegDeleteEmptyKey</a></td>
  <td>删除一个空键.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegDeleteKey.htm">_WinAPI_RegDeleteKey</a></td>
  <td>删除一个子项及其值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegDeleteKeyValue.htm">_WinAPI_RegDeleteKeyValue</a></td>
  <td>删除指定的注册表键和子项中指定的值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegDeleteTree.htm">_WinAPI_RegDeleteTree</a></td>
  <td>删除一个子项及其所有的子节点.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegDeleteTreeEx.htm">_WinAPI_RegDeleteTreeEx</a></td>
  <td>循环删除指定键的子项和值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegDeleteValue.htm">_WinAPI_RegDeleteValue</a></td>
  <td>删除指定注册表键的命名值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegDisableReflectionKey.htm">_WinAPI_RegDisableReflectionKey</a></td>
  <td>Disables registry reflection for the specified key.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegDuplicateHKey.htm">_WinAPI_RegDuplicateHKey</a></td>
  <td>复制注册表项的句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegEnableReflectionKey.htm">_WinAPI_RegEnableReflectionKey</a></td>
  <td>Restores registry reflection for the specified disabled key.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegEnumKey.htm">_WinAPI_RegEnumKey</a></td>
  <td>枚举指定的并已打开的注册表键子项.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegEnumValue.htm">_WinAPI_RegEnumValue</a></td>
  <td>枚举指定打开的注册表项值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegFlushKey.htm">_WinAPI_RegFlushKey</a></td>
  <td>写入指定打开的注册表键的所有属性到注册表.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegisterApplicationRestart.htm">_WinAPI_RegisterApplicationRestart</a></td>
  <td>Registers the active instance of an application for restart.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegisterClassEx.htm">_WinAPI_RegisterClassEx</a></td>
  <td>注册窗体类</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegisterHotKey.htm">_WinAPI_RegisterHotKey</a></td>
  <td>定义一个系统范围的热键.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegisterPowerSettingNotification.htm">_WinAPI_RegisterPowerSettingNotification</a></td>
  <td>Registers the application to receive power setting notifications for the specific power setting event.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegisterShellHookWindow.htm">_WinAPI_RegisterShellHookWindow</a></td>
  <td>注册指定的 shell 窗口,以接收事件或通知消息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegisterWindowMessage.htm">_WinAPI_RegisterWindowMessage</a></td>
  <td>定义新窗口消息, 保证在整个系统中是唯一的</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegLoadMUIString.htm">_WinAPI_RegLoadMUIString</a></td>
  <td>加载指定项和子项中指定的字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegNotifyChangeKeyValue.htm">_WinAPI_RegNotifyChangeKeyValue</a></td>
  <td>通知调用者改变指定注册表键的属性或内容</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegOpenKey.htm">_WinAPI_RegOpenKey</a></td>
  <td>打开指定的注册表键</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegQueryInfoKey.htm">_WinAPI_RegQueryInfoKey</a></td>
  <td>检索指定注册表键的信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegQueryLastWriteTime.htm">_WinAPI_RegQueryLastWriteTime</a></td>
  <td>检索指定注册表项的最后写入时间.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegQueryMultipleValues.htm">_WinAPI_RegQueryMultipleValues</a></td>
  <td>检索注册表键的类型和名称值列表数据.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegQueryReflectionKey.htm">_WinAPI_RegQueryReflectionKey</a></td>
  <td>Determines whether reflection has been disabled or enabled for the specified key.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegQueryValue.htm">_WinAPI_RegQueryValue</a></td>
  <td>检索注册表项指定值名称的类型和数据.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegRestoreKey.htm">_WinAPI_RegRestoreKey</a></td>
  <td>读取指定文件的注册表信息,并将其复制到指定键.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegSaveKey.htm">_WinAPI_RegSaveKey</a></td>
  <td>以标准格式保存指定键及其子项和值到新文件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RegSetValue.htm">_WinAPI_RegSetValue</a></td>
  <td>设置下一个注册表项指定值的数据和类型.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ReleaseCapture.htm">_WinAPI_ReleaseCapture</a></td>
  <td>释放当前线程中窗口的鼠标捕获, 并恢复正常的鼠标输入处理</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ReleaseDC.htm">_WinAPI_ReleaseDC</a></td>
  <td>释放设备环境</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ReleaseMutex.htm">_WinAPI_ReleaseMutex</a></td>
  <td>释放指定互斥对象的宿主</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ReleaseSemaphore.htm">_WinAPI_ReleaseSemaphore</a></td>
  <td>增加信号量对象指定数量的计数.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RemoveClipboardFormatListener.htm">_WinAPI_RemoveClipboardFormatListener</a></td>
  <td>Removes the given window from the system-maintained clipboard format listener list.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RemoveFontMemResourceEx.htm">_WinAPI_RemoveFontMemResourceEx</a></td>
  <td>删除内存映像添加的字体.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RemoveFontResourceEx.htm">_WinAPI_RemoveFontResourceEx</a></td>
  <td>删除系统字体表中指定文件的字体.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RemoveWindowSubclass.htm">_WinAPI_RemoveWindowSubclass</a></td>
  <td>Removes a subclass callback from a window.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ReOpenFile.htm">_WinAPI_ReOpenFile</a></td>
  <td>使用不同的访问权限、共享模式、和标志重新打开指定的文件系统对象.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ReplaceFile.htm">_WinAPI_ReplaceFile</a></td>
  <td>替换文件为另一文件,并创建原始文件的备份副本.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ReplaceTextDlg.htm">_WinAPI_ReplaceTextDlg</a></td>
  <td>Creates a system-defined modeless dialog box that lets the user specify a string to search for and a replacement string.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ResetEvent.htm">_WinAPI_ResetEvent</a></td>
  <td>设置指定事件对象为无信号状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ResizeBitmap.htm">_WinAPI_ResizeBitmap</a></td>
  <td>改变位图的大小到指定尺寸.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RestartDlg.htm">_WinAPI_RestartDlg</a></td>
  <td>显示提示用户重新启动系统的对话框.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RestoreDC.htm">_WinAPI_RestoreDC</a></td>
  <td>还原设备环境(DC)到指定的状态.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RGB.htm">_WinAPI_RGB</a></td>
  <td>创建 RGB 颜色值的红色、绿色、蓝色成分.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RotatePoints.htm">_WinAPI_RotatePoints</a></td>
  <td>旋转数组指定的角度点.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_RoundRect.htm">_WinAPI_RoundRect</a></td>
  <td>绘制圆角矩形.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SaveDC.htm">_WinAPI_SaveDC</a></td>
  <td>保存设备环境(DC)的当前状态. 将选定对象和图形模式的描述数据复制到环境堆栈.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SaveHICONToFile.htm">_WinAPI_SaveHICONToFile</a></td>
  <td>Saves a 32 bits-per-pixel single or multiple icon (HICON) to the specified icon (.ico) file.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ScaleWindowExt.htm">_WinAPI_ScaleWindowExt</a></td>
  <td>Modifies the window for a device context using the ratios formed by the specified multiplicands and divisors.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ScreenToClient.htm">_WinAPI_ScreenToClient</a></td>
  <td>转换屏幕指定点坐标到客户端屏幕坐标</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SelectClipPath.htm">_WinAPI_SelectClipPath</a></td>
  <td>选定当前路径作为剪切区域, 并与任意已存在的剪切区域结合为新区域</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SelectClipRgn.htm">_WinAPI_SelectClipRgn</a></td>
  <td>选取区域作为当前设备场景的剪切区域</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SelectObject.htm">_WinAPI_SelectObject</a></td>
  <td>选择指定设备环境的对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SendMessageTimeout.htm">_WinAPI_SendMessageTimeout</a></td>
  <td>发送指定消息到其它窗口.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetActiveWindow.htm">_WinAPI_SetActiveWindow</a></td>
  <td>Activates the specified window.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetArcDirection.htm">_WinAPI_SetArcDirection</a></td>
  <td>设置绘制弧的方向</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetBitmapBits.htm">_WinAPI_SetBitmapBits</a></td>
  <td>设置位图颜色数据的数位为指定值</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetBkColor.htm">_WinAPI_SetBkColor</a></td>
  <td>设置当前背景色为指定的颜色值</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetBkMode.htm">_WinAPI_SetBkMode</a></td>
  <td>设置指定设备环境的背景混合模式</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetBoundsRect.htm">_WinAPI_SetBoundsRect</a></td>
  <td>Controls the accumulation of bounding rectangle information for the specified device context.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetCapture.htm">_WinAPI_SetCapture</a></td>
  <td>设置鼠标捕获当前线程指定的窗口</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetCaretBlinkTime.htm">_WinAPI_SetCaretBlinkTime</a></td>
  <td>设置插入符得闪烁时间.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetCaretPos.htm">_WinAPI_SetCaretPos</a></td>
  <td>移动插入符号到指定的坐标.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetClassLongEx.htm">_WinAPI_SetClassLongEx</a></td>
  <td>替换指定窗口的指定值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetCompression.htm">_WinAPI_SetCompression</a></td>
  <td>设置文件或目录的压缩状态.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetCurrentDirectory.htm">_WinAPI_SetCurrentDirectory</a></td>
  <td>更改当前进程的当前目录.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetCurrentProcessExplicitAppUserModelID.htm">_WinAPI_SetCurrentProcessExplicitAppUserModelID</a></td>
  <td>Specifies a unique application-defined Application User Model ID that identifies the current process to the taskbar.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetCursor.htm">_WinAPI_SetCursor</a></td>
  <td>建立光标形状</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetDCBrushColor.htm">_WinAPI_SetDCBrushColor</a></td>
  <td>设置当前设备环境（DC）画刷颜色为指定的颜色值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetDCPenColor.htm">_WinAPI_SetDCPenColor</a></td>
  <td>设置当前设备上下文（DC）的画笔颜色为指定的颜色值.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetDefaultPrinter.htm">_WinAPI_SetDefaultPrinter</a></td>
  <td>设置本地计算机当前用户的默认打印机</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetDeviceGammaRamp.htm">_WinAPI_SetDeviceGammaRamp</a></td>
  <td>Sets the gamma ramp on direct color display boards that support downloadable gamma ramps in hardware.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetDIBits.htm">_WinAPI_SetDIBits</a></td>
  <td>Sets the pixels in a compatible bitmap using the color data found in a DIB</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetDIBitsToDevice.htm">_WinAPI_SetDIBitsToDevice</a></td>
  <td>设置设备场景中指定矩形内的像素</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetDllDirectory.htm">_WinAPI_SetDllDirectory</a></td>
  <td>Adds a directory to the search path used to locate DLLs for the application.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetEndOfFile.htm">_WinAPI_SetEndOfFile</a></td>
  <td>设置当前位置指针指定文件的物理文件大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetEnhMetaFileBits.htm">_WinAPI_SetEnhMetaFileBits</a></td>
  <td>创建指定内存数据的增强型图元文件格式.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetErrorMode.htm">_WinAPI_SetErrorMode</a></td>
  <td>确定控制系统或进程是否处理指定类型的严重错误.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetEvent.htm">_WinAPI_SetEvent</a></td>
  <td>设置指定事件对象的信号状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetFileAttributes.htm">_WinAPI_SetFileAttributes</a></td>
  <td>设置文件或目录的属性.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetFilePointer.htm">_WinAPI_SetFilePointer</a></td>
  <td>移动指定文件的指针</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetFilePointerEx.htm">_WinAPI_SetFilePointerEx</a></td>
  <td>移动指定文件的文件指针</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetFocus.htm">_WinAPI_SetFocus</a></td>
  <td>设置键盘焦点到指定窗口</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetFont.htm">_WinAPI_SetFont</a></td>
  <td>设置窗口字体.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetForegroundWindow.htm">_WinAPI_SetForegroundWindow</a></td>
  <td>将指定窗体放入前景并激活</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetFRBuffer.htm">_WinAPI_SetFRBuffer</a></td>
  <td>Sets the size of the internal buffer that used the _WinAPI_FindTextDlg() and _WinAPI_ReplaceTextDlg() functions.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetGraphicsMode.htm">_WinAPI_SetGraphicsMode</a></td>
  <td>Sets the graphics mode for the specified device context.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetHandleInformation.htm">_WinAPI_SetHandleInformation</a></td>
  <td>设置对象句柄的特定特性</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetInformationJobObject.htm">_WinAPI_SetInformationJobObject</a></td>
  <td>设置作业对象的限制.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetKeyboardLayout.htm">_WinAPI_SetKeyboardLayout</a></td>
  <td>加载新的输入标识到指定窗口</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetKeyboardState.htm">_WinAPI_SetKeyboardState</a></td>
  <td>将256个虚拟键的状态复制到调用进程的键盘输入状态表</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetLastError.htm">_WinAPI_SetLastError</a></td>
  <td>给调用的线程设置错误码</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetLayeredWindowAttributes.htm">_WinAPI_SetLayeredWindowAttributes</a></td>
  <td>设置分层窗口属性</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetLocaleInfo.htm">_WinAPI_SetLocaleInfo</a></td>
  <td>设置当前用户部分的本地配置中项目的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetMapMode.htm">_WinAPI_SetMapMode</a></td>
  <td>Sets the mapping mode of the specified device context.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetMessageExtraInfo.htm">_WinAPI_SetMessageExtraInfo</a></td>
  <td>Sets the extra message information for the current thread.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetParent.htm">_WinAPI_SetParent</a></td>
  <td>修改子窗口的父窗口.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetPixel.htm">_WinAPI_SetPixel</a></td>
  <td>设置指定坐标的像素为指定颜色.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetPolyFillMode.htm">_WinAPI_SetPolyFillMode</a></td>
  <td>设置多边形填充模式</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetProcessAffinityMask.htm">_WinAPI_SetProcessAffinityMask</a></td>
  <td>设置指定进程的线程处理器关联掩码</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetProcessShutdownParameters.htm">_WinAPI_SetProcessShutdownParameters</a></td>
  <td>Sets a shutdown order for a process relative to the other processes in the system.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetProcessWindowStation.htm">_WinAPI_SetProcessWindowStation</a></td>
  <td>Assigns the specified window station to the calling process.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetRectRgn.htm">_WinAPI_SetRectRgn</a></td>
  <td>将一个区域转化到一个带有指定坐标的矩形区域内</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetROP2.htm">_WinAPI_SetROP2</a></td>
  <td>设置指定设备场景的前景混合模式</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetStretchBltMode.htm">_WinAPI_SetStretchBltMode</a></td>
  <td>设置指定设备环境的位图拉伸模式.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetSysColors.htm">_WinAPI_SetSysColors</a></td>
  <td>获取系统显示设备的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetSystemCursor.htm">_WinAPI_SetSystemCursor</a></td>
  <td>允许应用程序定制系统光标.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetTextAlign.htm">_WinAPI_SetTextAlign</a></td>
  <td>设置指定设备环境的文本对齐标志.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetTextCharacterExtra.htm">_WinAPI_SetTextCharacterExtra</a></td>
  <td>Sets the intercharacter spacing for the specified device context.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetTextColor.htm">_WinAPI_SetTextColor</a></td>
  <td>设置当前文本颜色为指定的颜色值</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetTextJustification.htm">_WinAPI_SetTextJustification</a></td>
  <td>Specifies the amount of space the system should add to the break characters in a string of text.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetThemeAppProperties.htm">_WinAPI_SetThemeAppProperties</a></td>
  <td>设置如何在调用应用程序中实现视觉样式的标志.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetThreadDesktop.htm">_WinAPI_SetThreadDesktop</a></td>
  <td>Assigns the specified desktop to the calling thread.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetThreadErrorMode.htm">_WinAPI_SetThreadErrorMode</a></td>
  <td>Controls whether the system will handle the specified types of serious errors or whether the calling thread will handle them.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetThreadExecutionState.htm">_WinAPI_SetThreadExecutionState</a></td>
  <td>Prevents the system from entering sleep or turning off the display while the current application is running.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetTimer.htm">_WinAPI_SetTimer</a></td>
  <td>创建指定超时值的计时器.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetUDFColorMode.htm">_WinAPI_SetUDFColorMode</a></td>
  <td>为 WinAPIEx 库设置颜色模式.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetUserObjectInformation.htm">_WinAPI_SetUserObjectInformation</a></td>
  <td>Sets information about the specified window station or desktop object.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetVolumeMountPoint.htm">_WinAPI_SetVolumeMountPoint</a></td>
  <td>驱动器号关联到卷或另一个卷的目录.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetWindowDisplayAffinity.htm">_WinAPI_SetWindowDisplayAffinity</a></td>
  <td>Stores the display affinity setting in kernel mode on the specified window.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetWindowExt.htm">_WinAPI_SetWindowExt</a></td>
  <td>Sets the horizontal and vertical extents of the window for a device context by using the specified values.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetWindowLong.htm">_WinAPI_SetWindowLong</a></td>
  <td>设置指定窗口的指定信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetWindowLongEx.htm">_WinAPI_SetWindowLongEx</a></td>
  <td>修改指定窗口的属性.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetWindowOrg.htm">_WinAPI_SetWindowOrg</a></td>
  <td>Specifies which window point maps to the viewport origin (0,0).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetWindowPlacement.htm">_WinAPI_SetWindowPlacement</a></td>
  <td>设置窗口布局的最小值, 最大值, 和正常位置</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetWindowPos.htm">_WinAPI_SetWindowPos</a></td>
  <td>变动子窗口, 弹出窗口, 或顶层窗口的大小, 位置和 Z 序</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetWindowRgn.htm">_WinAPI_SetWindowRgn</a></td>
  <td>设置窗口的窗口区域</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetWindowsHookEx.htm">_WinAPI_SetWindowsHookEx</a></td>
  <td>安装应用程序定义的钩子程序到钩链</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetWindowSubclass.htm">_WinAPI_SetWindowSubclass</a></td>
  <td>Installs or updates a window subclass callback.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetWindowText.htm">_WinAPI_SetWindowText</a></td>
  <td>更改指定窗口的标题栏文本</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetWindowTheme.htm">_WinAPI_SetWindowTheme</a></td>
  <td>设置窗口的视觉样式</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetWinEventHook.htm">_WinAPI_SetWinEventHook</a></td>
  <td>Sets an event hook function for a range of events.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SetWorldTransform.htm">_WinAPI_SetWorldTransform</a></td>
  <td>Sets a two-dimensional linear transformation between world space and page space for the specified device context.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SfcIsFileProtected.htm">_WinAPI_SfcIsFileProtected</a></td>
  <td>Determines whether the specified file is protected.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SfcIsKeyProtected.htm">_WinAPI_SfcIsKeyProtected</a></td>
  <td>Determines whether the specified registry key is protected.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellAddToRecentDocs.htm">_WinAPI_ShellAddToRecentDocs</a></td>
  <td>添加文件到最近和经常使用的项目列表.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellChangeNotify.htm">_WinAPI_ShellChangeNotify</a></td>
  <td>通知系统应用程序已完成的事件.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellChangeNotifyDeregister.htm">_WinAPI_ShellChangeNotifyDeregister</a></td>
  <td>注销客户端的窗口.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellChangeNotifyRegister.htm">_WinAPI_ShellChangeNotifyRegister</a></td>
  <td>注册接收文件系统或 Shell 通知的窗口.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellEmptyRecycleBin.htm">_WinAPI_ShellEmptyRecycleBin</a></td>
  <td>清空指定驱动器的回收站.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellExecute.htm">_WinAPI_ShellExecute</a></td>
  <td>Performs an operation on a specified file.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellExtractAssociatedIcon.htm">_WinAPI_ShellExtractAssociatedIcon</a></td>
  <td>返回指定文件关联的图标句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellExtractIcon.htm">_WinAPI_ShellExtractIcon</a></td>
  <td>提取指定文件中指定尺寸的图标.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellFileOperation.htm">_WinAPI_ShellFileOperation</a></td>
  <td>复制,移动,重命名或删除文件系统对象.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellGetFileInfo.htm">_WinAPI_ShellGetFileInfo</a></td>
  <td>检索文件系统对象的信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellGetKnownFolderPath.htm">_WinAPI_ShellGetKnownFolderPath</a></td>
  <td>检索已知文件夹的完整路径.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellGetLocalizedName.htm">_WinAPI_ShellGetLocalizedName</a></td>
  <td>Retrieves the localized name of a file in a Shell folder.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellGetPathFromIDList.htm">_WinAPI_ShellGetPathFromIDList</a></td>
  <td>转换项目标识符列表到文件系统路径.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellGetSetFolderCustomSettings.htm">_WinAPI_ShellGetSetFolderCustomSettings</a></td>
  <td>设置或检索自定义文件夹.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellGetSettings.htm">_WinAPI_ShellGetSettings</a></td>
  <td>检索处理程序(Shell)的状态设置.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellGetSpecialFolderLocation.htm">_WinAPI_ShellGetSpecialFolderLocation</a></td>
  <td>检索特殊文件夹的 PIDL 结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellGetSpecialFolderPath.htm">_WinAPI_ShellGetSpecialFolderPath</a></td>
  <td>检索特殊文件夹路径.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellGetStockIconInfo.htm">_WinAPI_ShellGetStockIconInfo</a></td>
  <td>检索系统定义的 Shell 图标信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellILCreateFromPath.htm">_WinAPI_ShellILCreateFromPath</a></td>
  <td>创建路径指针,指向项目标识符列表 (PIDL).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellNotifyIcon.htm">_WinAPI_ShellNotifyIcon</a></td>
  <td>发送消息到任务栏的状态区域.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellNotifyIconGetRect.htm">_WinAPI_ShellNotifyIconGetRect</a></td>
  <td>Gets the screen coordinates of the bounding rectangle of a notification icon.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellObjectProperties.htm">_WinAPI_ShellObjectProperties</a></td>
  <td>调用 Shell 对象属性上下文菜单命令.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellOpenFolderAndSelectItems.htm">_WinAPI_ShellOpenFolderAndSelectItems</a></td>
  <td>打开 Windows 资源管理器窗口中选定文件夹指定的特定项目.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellOpenWithDlg.htm">_WinAPI_ShellOpenWithDlg</a></td>
  <td>显示打开方式对话框.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellQueryRecycleBin.htm">_WinAPI_ShellQueryRecycleBin</a></td>
  <td>检索指定驱动器回收站的大小及其项目数量.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellQueryUserNotificationState.htm">_WinAPI_ShellQueryUserNotificationState</a></td>
  <td>检查当前用户的计算机状态.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellRemoveLocalizedName.htm">_WinAPI_ShellRemoveLocalizedName</a></td>
  <td>Removes the localized name of a file in a Shell folder.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellRestricted.htm">_WinAPI_ShellRestricted</a></td>
  <td>Determines whether a specified administrator policy is in effect.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellSetLocalizedName.htm">_WinAPI_ShellSetLocalizedName</a></td>
  <td>Sets the localized name of a file in a Shell folder.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellSetSettings.htm">_WinAPI_ShellSetSettings</a></td>
  <td>置位处理程序(Shell)的状态设置.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShellStartNetConnectionDlg.htm">_WinAPI_ShellStartNetConnectionDlg</a></td>
  <td>Displays a general browsing dialog box for a network resource connection.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShowCaret.htm">_WinAPI_ShowCaret</a></td>
  <td>显示屏幕插入符当前位置的插入符.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShowCursor.htm">_WinAPI_ShowCursor</a></td>
  <td>显示或隐藏光标</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShowError.htm">_WinAPI_ShowError</a></td>
  <td>显示一个带有可选退出的错误消息框</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShowLastError.htm">_WinAPI_ShowLastError</a></td>
  <td>显示最后一个错误代码和消息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShowMsg.htm">_WinAPI_ShowMsg</a></td>
  <td>显示一个 "信息" 消息框</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShowOwnedPopups.htm">_WinAPI_ShowOwnedPopups</a></td>
  <td>显示或隐藏指定窗口拥有的所有弹出窗口.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShowWindow.htm">_WinAPI_ShowWindow</a></td>
  <td>设置指定窗口的显示状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShutdownBlockReasonCreate.htm">_WinAPI_ShutdownBlockReasonCreate</a></td>
  <td>Indicates that the system cannot be shut down and sets a reason string to be displayed to the user if system shutdown is initiated.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShutdownBlockReasonDestroy.htm">_WinAPI_ShutdownBlockReasonDestroy</a></td>
  <td>Indicates that the system can be shut down and frees the reason string.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShutdownBlockReasonQuery.htm">_WinAPI_ShutdownBlockReasonQuery</a></td>
  <td>Retrieves the reason string set by the _WinAPI_ShutdownBlockReasonCreate() function.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ShutdownDlg.htm">_WinAPI_ShutdownDlg</a></td>
  <td>显示 Windows 关机对话框.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SizeOfResource.htm">_WinAPI_SizeOfResource</a></td>
  <td>返回指定资源的字节大小</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_StretchBlt.htm">_WinAPI_StretchBlt</a></td>
  <td>复制源矩形位图到目标矩形,如有必要,</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_StretchDIBits.htm">_WinAPI_StretchDIBits</a></td>
  <td>Copies the color data for a rectangle of pixels in a DIB, JPEG, or PNG image to the specified destination rectangle,</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_StrFormatByteSize.htm">_WinAPI_StrFormatByteSize</a></td>
  <td>Converts a numeric value into a string that represents the number expressed as a size value in bytes, kilobytes, megabytes, or gigabytes.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_StrFormatKBSize.htm">_WinAPI_StrFormatKBSize</a></td>
  <td>Converts a numeric value into a string that represents the number expressed as a size value in kilobytes.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_StrFromTimeInterval.htm">_WinAPI_StrFromTimeInterval</a></td>
  <td>Converts a time interval to a string.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_StringFromGUID.htm">_WinAPI_StringFromGUID</a></td>
  <td>转换一个二进制 GUID 为字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_StrLen.htm">_WinAPI_StrLen</a></td>
  <td>返回指定字符串长度</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_StrokeAndFillPath.htm">_WinAPI_StrokeAndFillPath</a></td>
  <td>关闭路径中打开的图形并绘制其轮廓填充其内部</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_StrokePath.htm">_WinAPI_StrokePath</a></td>
  <td>使用当前画笔渲染指定路径</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_StructToArray.htm">_WinAPI_StructToArray</a></td>
  <td>将数据结构转换为字符串数组</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SubLangId.htm">_WinAPI_SubLangId</a></td>
  <td>从语言ID中取出子语言ID.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SubtractRect.htm">_WinAPI_SubtractRect</a></td>
  <td>计算矩形减去另一个矩形后,余下矩形的坐标.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SwapDWord.htm">_WinAPI_SwapDWord</a></td>
  <td>互换 32 位值的高位和低位.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SwitchColor.htm">_WinAPI_SwitchColor</a></td>
  <td>转换 BGR 颜色为 RGB 颜色,或反之.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SwitchDesktop.htm">_WinAPI_SwitchDesktop</a></td>
  <td>Makes the specified desktop visible and activates it.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SwitchToThisWindow.htm">_WinAPI_SwitchToThisWindow</a></td>
  <td>切换焦点到指定窗口,并将其置为前景窗口.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_SystemParametersInfo.htm">_WinAPI_SystemParametersInfo</a></td>
  <td>检索或设置全系统(system-wide)参数的值</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_TextOut.htm">_WinAPI_TextOut</a></td>
  <td>使用当前选定字体,背景颜色和文字颜色写入字符串到指定位置.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_TileWindows.htm">_WinAPI_TileWindows</a></td>
  <td>Tiles the specified child windows of the specified parent window.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_TrackMouseEvent.htm">_WinAPI_TrackMouseEvent</a></td>
  <td>Posts messages when the mouse pointer leaves a window or hovers over a window for a specified amount of time.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_TransparentBlt.htm">_WinAPI_TransparentBlt</a></td>
  <td>传输颜色数据位块到对应的矩形像素.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_TwipsPerPixelX.htm">_WinAPI_TwipsPerPixelX</a></td>
  <td>返回一个像素的宽度, 单位为缇(twips).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_TwipsPerPixelY.htm">_WinAPI_TwipsPerPixelY</a></td>
  <td>返回一个像素的高度, 单位为缇(twips).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UnhookWindowsHookEx.htm">_WinAPI_UnhookWindowsHookEx</a></td>
  <td>移除一个钩子程序, 安装一个钩子链的 _WinAPI_SetWindowsHookEx 函数</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UnhookWinEvent.htm">_WinAPI_UnhookWinEvent</a></td>
  <td>Removes an event hook function.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UnionRect.htm">_WinAPI_UnionRect</a></td>
  <td>创建两个矩形的并集.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UnionStruct.htm">_WinAPI_UnionStruct</a></td>
  <td>创建两个结构的(并集)结构.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UniqueHardwareID.htm">_WinAPI_UniqueHardwareID</a></td>
  <td>生成本地计算机唯一硬件标识符（ID）.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UnloadKeyboardLayout.htm">_WinAPI_UnloadKeyboardLayout</a></td>
  <td>卸载一个输入区域设置标识符.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UnlockFile.htm">_WinAPI_UnlockFile</a></td>
  <td>解锁打开文件的区域.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UnmapViewOfFile.htm">_WinAPI_UnmapViewOfFile</a></td>
  <td>取消调用进程地址空间的文件映射视图.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UnregisterApplicationRestart.htm">_WinAPI_UnregisterApplicationRestart</a></td>
  <td>Removes the active instance of an application from the restart list.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UnregisterClass.htm">_WinAPI_UnregisterClass</a></td>
  <td>注销一个窗体类并释放类所需的内存</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UnregisterHotKey.htm">_WinAPI_UnregisterHotKey</a></td>
  <td>释放以前调用线程注册的热键.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UnregisterPowerSettingNotification.htm">_WinAPI_UnregisterPowerSettingNotification</a></td>
  <td>Unregisters the power setting notification.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UpdateLayeredWindow.htm">_WinAPI_UpdateLayeredWindow</a></td>
  <td>更新分层窗口的位置,大小,形状,内容和半透明度</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UpdateLayeredWindowEx.htm">_WinAPI_UpdateLayeredWindowEx</a></td>
  <td>更新分层窗口半透明位图.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UpdateResource.htm">_WinAPI_UpdateResource</a></td>
  <td>添加,删除或替换可移植可执行(PE)文件资源.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UpdateWindow.htm">_WinAPI_UpdateWindow</a></td>
  <td>发送一个 WM_PAINT 消息到目标窗口,用于更新目标窗口客户区.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UrlCreateFromPath.htm">_WinAPI_UrlCreateFromPath</a></td>
  <td>Converts a Microsoft MS-DOS path to a canonicalized URL.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UrlEscape.htm">_WinAPI_UrlEscape</a></td>
  <td>Converts characters in a URL that might be altered during transport across the Internet into their corresponding escape sequences.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UrlFixup.htm">_WinAPI_UrlFixup</a></td>
  <td>Attempts to correct a URL whose protocol identifier is incorrect.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UrlGetPart.htm">_WinAPI_UrlGetPart</a></td>
  <td>Retrieves a specified part from the URL.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UrlIs.htm">_WinAPI_UrlIs</a></td>
  <td>Tests whether or not a URL is a specified type.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_UrlUnescape.htm">_WinAPI_UrlUnescape</a></td>
  <td>Converts escape sequences back into ordinary characters.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ValidateRect.htm">_WinAPI_ValidateRect</a></td>
  <td>删除窗口当前更新区域的指定矩形.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_ValidateRgn.htm">_WinAPI_ValidateRgn</a></td>
  <td>删除当前指定窗口的更新区域.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_VerQueryRoot.htm">_WinAPI_VerQueryRoot</a></td>
  <td>检索指定文件独立代码页的版本信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_VerQueryValue.htm">_WinAPI_VerQueryValue</a></td>
  <td>检索指定文件的版本信息.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_WaitForInputIdle.htm">_WinAPI_WaitForInputIdle</a></td>
  <td>等待, 直到进程等待用户输入之前挂起, 或超时</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_WaitForMultipleObjects.htm">_WinAPI_WaitForMultipleObjects</a></td>
  <td>等待,直到一或多个指定对象中处于信号状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_WaitForSingleObject.htm">_WinAPI_WaitForSingleObject</a></td>
  <td>等待, 直到指定的对象是在信号状态</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_WideCharToMultiByte.htm">_WinAPI_WideCharToMultiByte</a></td>
  <td>转换一个 Unicode 字符串到一个多字节字符串.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_WidenPath.htm">_WinAPI_WidenPath</a></td>
  <td>当路径被销毁时重新定义当前选定的路径作为当前绘制的区域</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_WindowFromDC.htm">_WinAPI_WindowFromDC</a></td>
  <td>检索指定显示设备环境(DC)关联的窗口句柄 (DC).</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_WindowFromPoint.htm">_WinAPI_WindowFromPoint</a></td>
  <td>检索包含指定点的窗口句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_Wow64EnableWow64FsRedirection.htm">_WinAPI_Wow64EnableWow64FsRedirection</a></td>
  <td>对调用的线程启用或禁用文件系统重定向</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_WriteConsole.htm">_WinAPI_WriteConsole</a></td>
  <td>写字符串到控制台屏幕缓冲区</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_WriteFile.htm">_WinAPI_WriteFile</a></td>
  <td>写入数据到文件指定位置.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinAPI_WriteProcessMemory.htm">_WinAPI_WriteProcessMemory</a></td>
  <td>写入数据到指定进程的内存</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpAddRequestHeaders.htm">_WinHttpAddRequestHeaders</a></td>
  <td>添加一个或者多个 HTTP 请求头到 HTTP 请求句柄.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpBinaryConcat.htm">_WinHttpBinaryConcat</a></td>
  <td>以二进制模式合并两个由_WinHttpReadData()返回的二进制数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpCheckPlatform.htm">_WinHttpCheckPlatform</a></td>
  <td>确定当前平台是否支持当前版本的Microsoft Windows HTTP Services (WinHTTP)</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpCloseHandle.htm">_WinHttpCloseHandle</a></td>
  <td>关闭一个独立句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpConnect.htm">_WinHttpConnect</a></td>
  <td>指定Http请求的原始目标服务器并返回一个指向该原始目标的http会话的连接句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpCrackUrl.htm">_WinHttpCrackUrl</a></td>
  <td>将URL拆分为主机名和路径的部分</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpCreateUrl.htm">_WinHttpCreateUrl</a></td>
  <td>从包含主机名和路径的数组创建地址</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpDetectAutoProxyConfigUrl.htm">_WinHttpDetectAutoProxyConfigUrl</a></td>
  <td>查找PAC文件的URL</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpGetDefaultProxyConfiguration.htm">_WinHttpGetDefaultProxyConfiguration</a></td>
  <td>获取默认WinHttp代理配置</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpGetIEProxyConfigForCurrentUser.htm">_WinHttpGetIEProxyConfigForCurrentUser</a></td>
  <td>获取当前用户的IE代理配置</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpOpen.htm">_WinHttpOpen</a></td>
  <td>初始化WinHTTP函数的使用并返回WinHTTP会话句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpOpenRequest.htm">_WinHttpOpenRequest</a></td>
  <td>创建HTTP请求句柄</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpQueryDataAvailable.htm">_WinHttpQueryDataAvailable</a></td>
  <td>返回可由_WinHttpReadData()读取的数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpQueryHeaders.htm">_WinHttpQueryHeaders</a></td>
  <td>获取与HTTP请求相关的头部信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpQueryOption.htm">_WinHttpQueryOption</a></td>
  <td>查询指定句柄上的互联网选项</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpReadData.htm">_WinHttpReadData</a></td>
  <td>从_WinHttpOpenRequest()函数打开的句柄读取数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpReceiveResponse.htm">_WinHttpReceiveResponse</a></td>
  <td>等待接收由WinHttpSendRequest()初始化的HTTP请求的应答</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpSendRequest.htm">_WinHttpSendRequest</a></td>
  <td>向HTTP服务器发送指定请求</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpSetCredentials.htm">_WinHttpSetCredentials</a></td>
  <td>将所需的认证凭据传递给服务器</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpSetDefaultProxyConfiguration.htm">_WinHttpSetDefaultProxyConfiguration</a></td>
  <td>设置默认的WinHTTP代理配置</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpSetOption.htm">_WinHttpSetOption</a></td>
  <td>设置互联网选项</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpSetStatusCallback.htm">_WinHttpSetStatusCallback</a></td>
  <td>建立WinHTTP可调用的回调函数作为操作时的进度</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpSetTimeouts.htm">_WinHttpSetTimeouts</a></td>
  <td>设置处理HTTP的超时</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpSimpleFormFill.htm">_WinHttpSimpleFormFill</a></td>
  <td>填写表单</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpSimpleReadData.htm">_WinHttpSimpleReadData</a></td>
  <td>从请求中读取数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpSimpleRequest.htm">_WinHttpSimpleRequest</a></td>
  <td>发送请求到简单表单中</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpSimpleSendRequest.htm">_WinHttpSimpleSendRequest</a></td>
  <td>以简单形式发送请求且不记录数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpSimpleSendSSLRequest.htm">_WinHttpSimpleSendSSLRequest</a></td>
  <td>以简单形式发送请求且不记录数据</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpSimpleSSLRequest.htm">_WinHttpSimpleSSLRequest</a></td>
  <td>以简单格式向HTTP服务器发送指定请求</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpTimeFromSystemTime.htm">_WinHttpTimeFromSystemTime</a></td>
  <td>根据HTTP版本1.0的指定格式化系统日期和时间</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpTimeToSystemTime.htm">_WinHttpTimeToSystemTime</a></td>
  <td>获取HTTP日期/时间字符串并转化为数组(SYSTEMTIME结构)</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinHttpWriteData.htm">_WinHttpWriteData</a></td>
  <td>写入请求数据到一个HTTP服务器.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_AddConnection.htm">_WinNet_AddConnection</a></td>
  <td>将本地设备连接到网络资源</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_AddConnection2.htm">_WinNet_AddConnection2</a></td>
  <td>连接本地设备到网络资源</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_AddConnection3.htm">_WinNet_AddConnection3</a></td>
  <td>连接本地设备到网络资源</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_CancelConnection.htm">_WinNet_CancelConnection</a></td>
  <td>取消现有的网络连接</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_CancelConnection2.htm">_WinNet_CancelConnection2</a></td>
  <td>取消现有的网络连接</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_CloseEnum.htm">_WinNet_CloseEnum</a></td>
  <td>结束由调用WNetOpenEnum启动的网络资源枚举</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_ConnectionDialog.htm">_WinNet_ConnectionDialog</a></td>
  <td>打开一个用以连接到网络资源的通用浏览对话框</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_ConnectionDialog1.htm">_WinNet_ConnectionDialog1</a></td>
  <td>启动普通浏览对话框,用于连接网络资源．</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_DisconnectDialog.htm">_WinNet_DisconnectDialog</a></td>
  <td>断开网络资源时启动通用浏览对话框</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_DisconnectDialog1.htm">_WinNet_DisconnectDialog1</a></td>
  <td>断开网络资源时启动通用浏览对话框</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_EnumResource.htm">_WinNet_EnumResource</a></td>
  <td>枚举网络资源</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_GetConnection.htm">_WinNet_GetConnection</a></td>
  <td>获取与本地设备相关的网络资源名称</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_GetConnectionPerformance.htm">_WinNet_GetConnectionPerformance</a></td>
  <td>返回资源网络连接性能的信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_GetLastError.htm">_WinNet_GetLastError</a></td>
  <td>返回最近返回的扩展错误</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_GetNetworkInformation.htm">_WinNet_GetNetworkInformation</a></td>
  <td>返回指定网络提供者的扩展信息</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_GetProviderName.htm">_WinNet_GetProviderName</a></td>
  <td>获取指定类型网络的提供方名称</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_GetResourceInformation.htm">_WinNet_GetResourceInformation</a></td>
  <td>标识拥有资源的网络提供方</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_GetResourceParent.htm">_WinNet_GetResourceParent</a></td>
  <td>返回网络浏览资源的父层次</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_GetUniversalName.htm">_WinNet_GetUniversalName</a></td>
  <td>转换驱动路径到通用格式</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_GetUser.htm">_WinNet_GetUser</a></td>
  <td>检索默认用户名或用户名，用于建立一个连接</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_OpenEnum.htm">_WinNet_OpenEnum</a></td>
  <td>启动对网络资源或存在的连接进行枚举的过程</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_RestoreConnection.htm">_WinNet_RestoreConnection</a></td>
  <td>还原网络资源的连接</td>
</tr>
<tr>
  <td><a href="libfunctions/_WinNet_UseConnection.htm">_WinNet_UseConnection</a></td>
  <td>连接本地设备到网络资源</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordAttach.htm">_WordAttach</a></td>
  <td>使用选择的模式并使用字符串匹配的方法尝试附加到第一个存在的Microsoft Word实例(instance)</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordCreate.htm">_WordCreate</a></td>
  <td>创建一个 Microsoft Office Word 对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordDocAdd.htm">_WordDocAdd</a></td>
  <td>返回代表一个空白的新文件的对象变量</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordDocAddLink.htm">_WordDocAddLink</a></td>
  <td>向文件添加超级链接</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordDocAddPicture.htm">_WordDocAddPicture</a></td>
  <td>向文件中添加一个图片</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordDocClose.htm">_WordDocClose</a></td>
  <td>关闭一个上次打开的 word 文档</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordDocFindReplace.htm">_WordDocFindReplace</a></td>
  <td>运行指定的查找替换操作.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordDocGetCollection.htm">_WordDocGetCollection</a></td>
  <td>返回包含所有文件的集合的对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordDocLinkGetCollection.htm">_WordDocLinkGetCollection</a></td>
  <td>返回文档中全部链接对象的集合</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordDocOpen.htm">_WordDocOpen</a></td>
  <td>打开一个已存在的 Microsoft Word 文档文件</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordDocPrint.htm">_WordDocPrint</a></td>
  <td>打印指定文档的全部或者一部分.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordDocPropertyGet.htm">_WordDocPropertyGet</a></td>
  <td>返回Word文档的某个属性</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordDocPropertySet.htm">_WordDocPropertySet</a></td>
  <td>设置 Word 文档的属性</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordDocSave.htm">_WordDocSave</a></td>
  <td>保存一个已经打开的文档.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordDocSaveAs.htm">_WordDocSaveAs</a></td>
  <td>保存指定的文档为一个新名称或者其它格式.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordErrorHandlerDeRegister.htm">_WordErrorHandlerDeRegister</a></td>
  <td>禁用注册的用户 COM 错误处理程序</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordErrorHandlerRegister.htm">_WordErrorHandlerRegister</a></td>
  <td>注册并启用用户 COM 错误处理程序</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordErrorNotify.htm">_WordErrorNotify</a></td>
  <td>指定是否 Word.au3 自动通知警告和错误 (在控制台)</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordMacroRun.htm">_WordMacroRun</a></td>
  <td>运行 Visual Basic 宏</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordPropertyGet.htm">_WordPropertyGet</a></td>
  <td>返回 Word 应用程序选定的属性.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordPropertySet.htm">_WordPropertySet</a></td>
  <td>设置 Word 应用程序的一个选择属性.</td>
</tr>
<tr>
  <td><a href="libfunctions/_WordQuit.htm">_WordQuit</a></td>
  <td>关闭窗体并移除其涉及的Word对象</td>
</tr>
<tr>
  <td><a href="libfunctions/_Word_VersionInfo.htm">_Word_VersionInfo</a></td>
  <td>返回一个关于 Word.au3 版本相关信息的数组</td>
</tr>
</table>

</body>
</html>

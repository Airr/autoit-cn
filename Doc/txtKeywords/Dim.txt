###Keyword###
Dim / Global / Local / Const

###Description###
定义变量、常量, 或者创建一个数组.

###Syntax###
<b>Dim</b> [Const] $variable [ = initializer ]
<b>Dim</b> [Const] $array<b>[</b>subscript 1<b>]</b>...<b>[</b>subscript n<b>]</b> [ = initializer ]

###Parameters###
@@ParamTable@@
const
	[可选参数]如果定义, 则 Const 将创建常量而不是变量.
$variable
	需要声明的变量/常量名称.
initializer
	最初指定给变量的值. Const 必须包含初值( initializer). 初值(initializer) 可以是一个函数调用.
subscript
	数组的维数,索引为0 到 n-1.
@@End@@


###Remarks###
和 Dim / Local / Global 关键字执行相似的功能:
1. 声明一个变量供您使用 (类似 VBScript)
2. 创建一个数组

<b>注意</b>:  在 AutoIt 里面,您可以创建一个变量并赋值，如：($myvar = 0).  如果设置了 <b><a href="../functions/AutoItSetOption.htm#MustDeclareVars">AutoItSetOption("MustDeclareVars", 1)</a></b>, 那么变量必须先声明才能使用.

可以在一行里面声明多个变量:
<p class="code">Dim $a, $b, $c</p>
声明时添加初始值到变量:
<p class="code">Dim $a = 2, $b = 10, $c = 20</p>

声明一个常量可以象这样:
<p class="code">Const $a = 2, $b = 10, $c = 20
Dim Const $d = 21, $e = Exp(1)
Local Const $f = 5, $g = 7, $h = -2
</p>
当然,您不能再修改一个常量的值. 同样的, 您也不能将一个存在的变量修改为一个常量.
<br>

为了要设定一个数组的初值( initializer), 每个元素值必须在方括号内，由逗号分开. 对于多维尺寸的数组，需嵌套初值(initializers). 与申明数组时比较,你可以在初值(initializers)中指定较少的元素，但不能大于申明数组时的界限. 函数调用也能被放在数组的初值(initializers)内. 如果函数调用返回一个数组，那么这个数组元素将会包含那返回的数组.
<p class="code">Dim $Array1[12]=[3, 7.5, "字符串"], $array[5] = [8, 4, 5, 9, 1]
Dim $Grid[2][4]=[["保罗", "吉姆", "理查德", "路易斯"], [485.44, 160.68, 275.16, 320.00]]
Dim $Test[5] = [3, 1, StringSplit("亚伯|杰克|博比|马蒂", "|"), Cos(0)]
</p>

Dim、Local、Global 三者的不同之处在于其声明变量的作用域:
<b>Dim</b> = 如果同名的全局变量并不存在则作用域为局部(如果已有同名的全局变量存在则将重用该变量!) 
<b>Global</b> = 将变量的作用域强制转换为全局的
<b>Local</b> = 将变量强制转换为局部/函数作用域

对于变数/常量/数组，您应该使用 Local 或者 Global, 而不是 Dim 来明确地指定使用哪个作用域.

在使用变量时，程序首先检查其局部作用域然后再检查其全局作用域.

创建数组时有一个限制:数组最大只能达64维 和/或 总计1600万个元素.

关于数组,有一点比较特别,那就是数组允许被(整体)复制,比如:
$mycopy = $myarray
上例中,$mycopy 将成为数组 $myarray 的一份完整副本并具有同样维数(不需事先通过 Dim 语句声明). 如果设置了">AutoItSetOption("MustDeclareVars", 1)</a></b>选项,$mycopy 还是需要先声明的,但是可以不必知道数组的大小. 如果变量 $mycopy 本身就已经是数组或已被赋值,则程序将先把它的内容删除随后再执行复制动作.

如果要删除某个数组（比如某个较大的全局数组，需要把它删除以释放内存空间），只需参考下例对该数组进行赋值即可:
$array = 0
这样之后该数组所占空间将被释放，同时它的值变成 0.

再次申明同变量名数组将会消除原数组的所有值，其维数也将被重新定义. 在相同的作用域内用一个简单值申明一个变量，将不在变量中改变值.

如果你用一个与参数相同的名字申明一个变量,或在一个用户函数内使用 <b>Local</b> 变量，将会发生差错.  <b>Global</b> 在一个函数内赋值的是全局变量, 但是如果一个局部变量 (或参数) 有一个与全局变量相同的名字, 将只使用局部变量. 推荐局部和全局变量必须有明确的名字.


###Related###
<a href="../functions/UBound.htm">UBound</a>, ReDim, <a href="../functions/AutoItSetOption.htm#MustDeclareVars">AutoItSetOption</a></b> 


###Example###
@@IncludeExample@@

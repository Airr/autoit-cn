###Function###
StringInStr

###Description###
检查某个字符串是否含有指定的子字符串.

###Syntax###
StringInStr ( "字符串", "子字符串" [, 区分大小写 [, 出现次序 [, 开始 [, 数量]]]] )


###Parameters###
@@ParamTable@@
字符串
	要处理的字符串.
子字符串
	要搜索的子字符串.
区分大小写
	[可选参数] 指定匹配操作是否要区分大小写.
	0 = 不区分大小写(默认)
	1 = 区分大小写
	2 = 不区分大小写,使用基本/快速的比较方法
出现次序
	[可选参数] 指定要搜索字符串中第几个匹配的子字符串的次序.若给定的是负数则表示要从字符串右边开始搜索.默认值为 1(搜索第一个匹配的子字符串).
开始
	[可选参数] 搜索字符串的开始处(第几个字节).
数量
	[可选参数] 要搜索的字符数量. 这个选项限制搜索一个完整字符串的一部分.  参考备注
@@End@@


###ReturnValue###
@@ReturnTable@@
成功:	返回子字符串的位置.
失败:	返回值为 0 说明未发现匹配子字符串.

@Error	0 - 正常操作
	1 - 无效"开始"位置或者"出现次序"参数.
@@End@@


###Remarks###
第一个字符的位置是1.

The count parameter must be longer than the substring being searched for.  The count parameter (combined with the start parameter) effectively limits the search to a substring of the full string.  The following two statements are equivalent:
StringInStr("the string to search", "string", 0, 1, 1, 11)
StringInStr(StringMid("the string to search", 1, 11), "string")

###Related###
StringCompare, StringLeft, StringLen, StringLower, StringMid, StringRight, StringTrimLeft, StringTrimRight, StringUpper, StringRegExp, StringSplit


###Example###
@@IncludeExample@@

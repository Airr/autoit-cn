###用户自定义函数###
_IELoadWait

###描述###
在网页内容加载完全之后返回.

###语法###
#Include <IE.au3>
_IELoadWait ( ByRef $o_object [, $i_delay = 0 [, $i_timeout = -1]] )

###参数###
@@ParamTable@@
 $o_object  ternetExplorer.Application或者DOM组件的对象变量
 $i_delay  [可选]: 在检查状态之前等待的毫秒数值
 $i_timeout  [可选]: 在退出程序之前等待的时间(默认 = 300000毫秒)
@@End@@

###返回值###
@@ReturnTable@@
成功: 返回1
失败: 返回0并设置@ERROR为:
    0 ($_IEStatus_Success) = 无错误
    1 ($_IEStatus_GeneralError) = 一般性错误
    3 ($_IEStatus_InvalidDataType) = 无效数据类型
    4 ($_IEStatus_InvalidObjectType) = 无效对象类型
    6 ($_IEStatus_LoadWaitTimeout) = 等待加载超时
    8 ($_IEStatus_AccessIsDenied) = 访问被拒绝
    9 ($_IEStatus_ClientDisconnected) = 客户端断开
    @Extended: 包含无效参数数量
@@End@@

###备注###
有几个IE.au3程序自动调用_IELoadWait()函数(例如 _IECreate() , _IENavigate()等等). 大多数函数也允许你关闭这个等待参数当你不需要等待或者你自己调用.
当文档对象或者DOM组件被应用到_IELoadWait , 它将检测组件并且包括父窗口状态.
浏览器脚本安全限制有时会阻止_IELoadWait完全加载页且偶尔会导致不被捕获的错误. 在此类情况中可能需要避免调用_IELoadWait和试图使用其他方法确保页面完成加载. 这些方法包括使用休眠命令 , 检查浏览器状态栏文本和其他方法. 当使用针对除InternetExplorer (browser)外的对象所调用的_IELoadWait函数 , 或许针对浏览器自身调用_IELoadWait也可成功(如_IELoadWait($oIE)).
最常见的麻烦是页面重定向和与框架相关的跨站点脚本的安全限制. 一些应用程序(如Gmail)采用的页面重写技术也可能带来麻烦.

###相关###
 _IELoadWaitTimeout , _IECreate , _IENavigate ,  _IEFormSubmit , _IELinkClickByText , _IELinkClickByIndex , _IEImgClick , _IEFormImageClick , _IEBodyWriteHTML , _IEDocWriteHTML , _IEAction

###参考###

###示例###
@@IncludeExample@@
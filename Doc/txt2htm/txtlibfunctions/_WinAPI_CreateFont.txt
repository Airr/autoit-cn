###User Defined Function###
_WinAPI_CreateFont

###Description###
创建一种特殊的逻辑字体

###Syntax###
#Include <WinAPI.au3>
_WinAPI_CreateFont($nHeight,
$nWidth[, $nEscape = 0[, $nOrientn = 0[, $fnWeight = $FW_NORMAL[, $bItalic =
False[, $bUnderline = False[, $bStrikeout = False[, $nCharset =
$DEFAULT_CHARSET[, $nOutputPrec = $OUT_DEFAULT_PRECIS[, $nClipPrec =
$CLIP_DEFAULT_PRECIS[, $nQuality = $DEFAULT_QUALITY[, $nPitch = 0[, $szFace =
'Arial']]]]]]]]]]]])

###Parameters###
@@ParamTable@@
$nHeight
   字体的高度
$nWidth
   字符的平均宽度
$nEscape
   指定移位向量的角度
$nOrientn
   指定每个字符的基线的角度
$fnWeight
   字体权值, 为方便定义，可使用如下值:
    $FW_DONTCARE - 0
    $FW_THIN - 100
    $FW_EXTRALIGHT - 200
    $FW_LIGHT - 300
    $FW_NORMAL - 400
    $FW_MEDIUM - 500
    $FW_SEMIBOLD - 600
    $FW_BOLD - 700
    $FW_EXTRABOLD - 800
    $FW_HEAVY - 900
$bItalic
   指定斜体
$bUnderline
   指定加下划线
$bStrikeout
   剔除属性
$nCharset
   指定字符集. 下列值是预定义的:
    $ANSI_CHARSET - 0
    $BALTIC_CHARSET - 186
    $CHINESEBIG5_CHARSET - 136
    $DEFAULT_CHARSET - 1
    $EASTEUROPE_CHARSET - 238
    $GB2312_CHARSET - 134
    $GREEK_CHARSET - 161
    $HANGEUL_CHARSET - 129
    $MAC_CHARSET - 77
    $OEM_CHARSET - 255
    $RUSSIAN_CHARSET - 204
    $SHIFTJIS_CHARSET - 128
    $SYMBOL_CHARSET - 2
    $TURKISH_CHARSET - 162
    $VIETNAMESE_CHARSET - 163
$nOutputPrec
   指定输出精度, 取下列值之一:
    $OUT_CHARACTER_PRECIS - 未用
    $OUT_DEFAULT_PRECIS - 指定缺省的字体映射表状态
    $OUT_DEVICE_PRECIS - 指示字体映射表在当系统里有多种字体使用同一个字体使用同一个名字时选择一种设备字体
    $OUT_OUTLINE_PRECIS - Windows NT/2000/XP: 此值指示字体映射表从TrueType和其他基于边框的字体中选择
    $OUT_PS_ONLY_PRECIS - Windows 2000/XP:  指示字体映射表仅在光栅字体中选择. 如果系统没有安装光栅字体, 字体映射表返回默认值
    $OUT_RASTER_PRECIS - 指示字体映射表在当系统里有多种字体使用同一个名字时选择一种光栅字体
$OUT_STRING_PRECIS - 此值没有被字全映射表使用，但是当扫描字体被列举时作为@@End@@

###ReturnValue###
@@ReturnTable@@
$OUT_STROKE_PRECIS - Windows NT/2000/XP:  此值没有被字体映射表使用, 但是当枚举TrueType, 其他基于边框的字体和向量字体时将被返回.
$OUT_TT_ONLY_PRECIS - 指示字体映射表仅从TrueType字体中选择. 如果系统中没有安装TrueType字体, 则字体映射表返回缺省状态
$OUT_TT_PRECIS - 指示字体映射表选择一种TrueType字体当系统包含多个同名字体时
 $nClipPrec  指定裁剪精度. 它可取一个或多个下列值:
$CLIP_CHARACTER_PRECIS - 未用
$CLIP_DEFAULT_PRECIS - 指定缺省裁剪状态
$CLIP_EMBEDDED -  要使用嵌入式只读字体必须使用此标志
$CLIP_LH_ANGLES - 所有字体的旋转依赖于坐标系统的定位是朝左的还是朝右的. 如果未使用此值，设备字体总是逆时针方向旋转, 但其他字体的旋转依赖于坐标系统的定向.
$CLIP_MASK - 未用
$CLIP_STROKE_PRECIS -  未被字体映射表使用, 但是当枚举光栅字体、向量字体或TrueType字体时将被返回. 为保证兼容性, Windows NT/2000/XP在枚举字体时总返回该值
$CLIP_TT_ALWAYS -  未用
 $fdwQuality  指定输出质量, 它可取下列值之一:
$ANTIALIASED_QUALITY - 如果字体支持且字体不是过大或过小则进行反锯齿或平滑处理.
$DEFAULT_QUALITY - 字体的外观不重要
$DRAFT_QUALITY - 字体外观的重要性次于使用PROOF_QUALITY时. 对GDI光栅字体, 缩放比例是活动的，这意味着多种字体大小可供选择, 如果有必要，粗体、斜体、下划线、拉伸字体可被综合起来使用, 但质量可能不高
$NONANTIALIASED_QUALITY - 字体不进行反锯齿处理, 即不进行字体平滑
$PROOF_QUALITY - 字符质量比精确匹配逻辑字体字体属性更重要.
对GDI扫描字体，缩放比例是活动的，并选择最接近的大小.
尽管使用PROOF_QUALITY时选择字体大小并不完全匹配, 但字体的质量很高且外观上不会变形.
如果有必要，粗体、斜体、下划线、strikeout字体可被综合起来使用
 $nPitch  指定字体间距和字体族，低端二位指定字体的字符间距，它可取下列值之一:
$DEFAULT_PITCH, $FIXED_PITCH, $VARIABLE_PITCH
高端四位指定字体族，可取下列值之一:
$FF_DECORATIVE - 新奇的字体，如老式英语
$FF_DONTCARE - 使用默认字体
$FF_MODERN - 笔划宽度固定的字体，有或者无衬线. 如Pica, Elite, 和Courier New
$FF_ROMAN - 笔划宽度可变的字体，有衬线. 如MS Serif
$FF_SCRIPT - 设计成看上去象手写体的字体. 如Script和Cursive
$FF_SWISS - 笔划宽度可变的字体且无斜线. 如MS Sans Serif
 $szFace  指定字体的字样名
返回值 成功: 逻辑字体句柄
失败: 0
@@End@@

###Remarks###
当不再使用字体时, 可用_WinAPI_DeleteObject删除
需要FontConstants.au3预定义常量.

###Related###

###See Also###
搜索MSDN知识库中有关CreateFont的信息

###Example###
@@IncludeExample@@
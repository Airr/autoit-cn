###User Defined Function###
_IEAttach

###Description###
寻找第一个存在的符合搜索字串子串的IE例子,搜索方式基于选择的模式.

###Syntax###
#include <IE.au3> 
_IEAttach ( $s_string [, $s_mode = "Title" [, $i_instance = 1]] )

###Parameters###
@@ParamTable@@
$s_string
	搜索的字符串 (对于"embedded"或者"dialogbox",使用标题子串或者窗口句柄(HWND))
$s_mode
	[可选参数]: 定义搜索模式
	Title = (默认) 整个文档标题的子串
	WindowTitle = 窗口标题的子串(替代文档标题)
	URL = 当前网页的url或者url子串
	Text = 当前网页body标签内的文字或者子串
	HTML = 当前网页body标签内的HTML或者子串
	HWND = 浏览器窗口句柄
	Embedded = 嵌入控制窗口的句柄或者标题子串
	DialogBox = 模态/非模态的对话框的句柄或者标题子串
	Instance = 忽略$s_string, 源于所有可用的浏览器实例的(通过匹配实例数量)返回的实例之一
$i_instance
	[可选参数]: 与$s_string和$s_mode匹配的浏览器组的1基索引或内嵌浏览器. 见备注.
@@End@@

###ReturnValue###
@@ReturnTable@@
成功:	返回指向InternetExplorer.Application对象的对象变量
失败:	返回0 并设置@ERROR
@Error	0 ($_IEStatus_Success) = 无错误
	5 ($_IEStatus_InvalidValue) = 无效值
	7 ($_IEStatus_NoMatch) = 不匹配
@Extended	包含无效参数数量
@@End@@


###Remarks###
_IEAttach提供"DialogBox"参数去寻找浏览器创建的模态/非模态的对话框. 很重要的一点要注意并不是所有的浏览器生成的对话框都可以通过这种方式去寻找和控制. 很多这种对话框实际上是标准的Windows窗口,可以通过传统的autoit函数来控制.一个可行的可以告诉这两类型窗口不同的方法是用"AutoIt Window Info" 工具去检查它 -- 如果窗口包含一个叫做"Internet Explorer_Server1"的控件,你可以用这个函数寻找它,如果不是则说明它是一个标准windows窗口并且传统的autoit窗口函数可以用来控制它.

HyperTextApplication (.hta) windows 也许可以用"embedded"选项来寻找.

在 "dialogbox" 和 "embedded" 模式中可以用标准的Win*系列函数的高级窗口标题语法来代替标题子字符串.

Use of "$i_instance" with the "embedded" mode: used to return a reference to a specific instance of a WebBrowser and is particularly useful when more than one exists in a particular window.  If you pass a window title in $s_string using embedded mode, only the first window matching that title will be used.  If the WebBrowser control you desire is in another window you must pass the HWnd of that window rather than the title, or use the advanced Window Title selection syntax available to the standard Win* functions.

Use of "$i_instance" with all modes other than "embedded": used to return a browser reference from a groups of all windows that match the criteria from $s_string and $s_mode.  Instance order for DialogBox mode determined by the order returned by WinList() matching the title.  For all other modes the Instance order is determined by the Shell.Windows collection.

"$i_instance" values > 1 are set to 1 and a warning message is displayed when used with "hwnd" mode or with "DialogBox" mode when an HWnd is passed in $s_string.

DialogBox and Embedded modes can be used to attach to standard browser windows, but the object returned is that if the top level Window in the browser and not the InternetExplorer object.  Window objects do not offer access to all of the attributes of the InternetExplorer object (e.g. status text, address bar etc.).  As well, if you attempt to use a function like _IENavigate on such an object you may receive COM errors due to the way that IE7 has implemented Tabs.  It may be useful to find browser instances in this way, but it is recommended that you immediately use _IEAttach using one of the other modes and using information that you may have obtained from the Window object in order to get a reference to the associated InternetExplorer object.

###Related###
_IECreate, _IECreateEmbedded, _IEQuit


###Example###
@@IncludeExample@@
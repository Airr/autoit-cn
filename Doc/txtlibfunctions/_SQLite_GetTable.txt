###User Defined Function###
_SQLite_GetTable

###Description###
Passes Out a 1Dimensional Array Containing Tablenames and Data of Executed Query.

###Syntax###
#include <SQLite.au3>
_SQLite_GetTable ( $hDB, $sSQL, ByRef $aResult, ByRef $iRows, ByRef $iColumns [, $iCharSize = 64 ] )


###Parameters###
@@ParamTable@@
$hDB
	An open database, use -1 To use last opened database
$sSQL
	SQL Statement to be executed
$aResult
	Passes out the result
$iRows
	Passes out the amount of 'data' Rows
$iColumns
	Passes out the amount of columns
$iCharSize
	[optional] Specifies the maximal size of a data field
@@End@@

###ReturnValue###
@@ReturnTable@@
Success:	Returns $SQLITE_OK
Failure:	Return value can be compared against $SQLITE_* constants
@error:	-1 - SQLite reported an error (Check Return value)
	1 - Error calling SQLite API 'sqlite3_get_table'
	2 - Error calling SQLite API 'sqlite3_free_table'
	3 - Call prevented by SafeMode
@@End@@

###Remarks###
The number of values inserted into $aResult will be (($iRows) + 1) * ($iColumns)
this number is inserted into $aResult[0].
A NULL will be returned as numeric 0
This Function uses more memory than _SQlite_Query() / _SQLite_Fetch*()... but it's faster.
If you do not need a result (or if there will be none) consider using
_SQLite_Execute() or _SQLite_Exec().

###Related###
_SQLite_GetTable2d, _SQLite_Exec, _SQlite_Query

###Example###
@@IncludeExample@@
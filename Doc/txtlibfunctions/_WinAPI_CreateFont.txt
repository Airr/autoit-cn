###User Defined Function###
_WinAPI_CreateFont

###Description###
创建一个带有指定字符的逻辑字体,注:characteristics有字符的意思也有特性的意思(可能翻译错误).

###Syntax###
#Include <WinAPI.au3>
_WinAPI_CreateFont($nHeight, $nWidth[, $nEscape = 0 [, $nOrientn = 0 [, $fnWeight = $FW_NORMAL [, $bItalic = False[, $bUnderline = False [, $bStrikeout = False [, $nCharset = $DEFAULT_CHARSET [, $nOutputPrec = $OUT_DEFAULT_PRECIS [, $nClipPrec = $CLIP_DEFAULT_PRECIS [, $nQuality = $DEFAULT_QUALITY [, $nPitch = 0 [, $szFace = 'Arial']]]]]]]]]]]])

###Parameters###
@@ParamTable@@
$nHeight
	字体高度
$nWidth
	字符(特性)平均宽度
$nEscape
	[可选参数] 夹角
$nOrientn
	[可选参数] 基线方向角
$fnWeight
	[可选参数] 字体重度(weight), 下方是预定义的值:
		$FW_DONTCARE - 0
		$FW_THIN - 100
		$FW_EXTRALIGHT - 200
		$FW_LIGHT - 300
		$FW_NORMAL - 400
		$FW_MEDIUM - 500
		$FW_SEMIBOLD - 600
		$FW_BOLD - 700
		$FW_EXTRABOLD - 800
		$FW_HEAVY - 900
$bItalic
	[可选参数] 是否是斜体
$bUnderline
	[可选参数] 是否带有下划线
$bStrikeout
	[可选参数] 是否带有删除线(strikeout)
$nCharset
	[可选参数] 指定字符集. 可以使用下方预定义的值:
		$ANSI_CHARSET - 0
		$BALTIC_CHARSET - 186
		$CHINESEBIG5_CHARSET - 136
		$DEFAULT_CHARSET - 1
		$EASTEUROPE_CHARSET - 238
		$GB2312_CHARSET - 134
		$GREEK_CHARSET - 161
		$HANGEUL_CHARSET - 129
		$MAC_CHARSET - 77
		$OEM_CHARSET - 255
		$RUSSIAN_CHARSET - 204
		$SHIFTJIS_CHARSET - 128
		$SYMBOL_CHARSET - 2
		$TURKISH_CHARSET - 162
		$VIETNAMESE_CHARSET - 163
$nOutputPrec
	[可选参数] 指定输出精确度, 可以是下方的一个值:
		$OUT_CHARACTER_PRECIS - 未使用
		$OUT_DEFAULT_PRECIS - 指定默认字体映射行为.
		$OUT_DEVICE_PRECIS - Instructs the font mapper to choose a Device font when the system contains multiple fonts with the same name
		$OUT_OUTLINE_PRECIS - Windows NT/2000/XP: This value instructs the font mapper to choose from TrueType and other outline-based fonts
		$OUT_PS_ONLY_PRECIS - Windows 2000/XP: Instructs the font mapper to choose from only PostScript fonts.
		If there are no PostScript fonts installed in the system, the font mapper returns to default behavior
		$OUT_RASTER_PRECIS - Instructs the font mapper to choose a raster font when the system contains multiple fonts with the same name
		$OUT_STRING_PRECIS - This value is not used by the font mapper, but it is returned when raster fonts are enumerated
		$OUT_STROKE_PRECIS - Windows NT/2000/XP: This value is not used by the font mapper, but it is returned when TrueType,
		other outline-based fonts, and vector fonts are enumerated
		$OUT_TT_ONLY_PRECIS - Instructs the font mapper to choose from only TrueType fonts. If there are no TrueType fonts installed in the system,
		the font mapper returns to default behavior
		$OUT_TT_PRECIS - Instructs the font mapper to choose a TrueType font when the system contains multiple fonts with the same name
$nClipPrec
	[可选参数] 指定切边精确度, 可以是下方一个或多个值:
		$CLIP_CHARACTER_PRECIS - 未使用
		$CLIP_DEFAULT_PRECIS - Specifies default clipping behavior
		$CLIP_EMBEDDED - You must specify this flag to use an embedded read-only font
		$CLIP_LH_ANGLES - When this value is used, the rotation for all fonts depends on whether the orientation of the coordinate system is left-handed or right-handed.
		If not used, device fonts always rotate counterclockwise, but the rotation of other fonts is dependent on the orientation of the coordinate system.
		$CLIP_MASK - 未使用
		$CLIP_STROKE_PRECIS - Not used by the font mapper, but is returned when raster, vector, or TrueType fonts are enumerated
		Windows NT/2000/XP: For compatibility, this value is always returned when enumerating fonts
		$CLIP_TT_ALWAYS - 未使用
$nQuality
	[可选参数] 指定输出质量, 可以是下方的一个值:
		$ANTIALIASED_QUALITY - Windows NT 4.0 或更高: 字体平滑,抗锯齿, or smoothed, if the font supports it and the size of the font is not too small or too large.
		Windows 95 with Plus!, Windows 98/Me: The display must greater than 8-bit color, it must be a single plane device, it cannot be a palette display, and it cannot be in a multiple display monitor setup.
		In addition, you must select a TrueType font into a screen DC prior to using it in a DIBSection, otherwise antialiasing does not happen
		$DEFAULT_QUALITY - Appearance of the font does not matter
		$DRAFT_QUALITY - Appearance of the font is less important than when the PROOF_QUALITY value is used.
		For GDI raster fonts, scaling is enabled, which means that more font sizes are available, but the quality may be lower.
		Bold, italic, underline, and strikeout fonts are synthesized, if necessary
		$NONANTIALIASED_QUALITY - Windows 95 with Plus!, Windows 98/Me, Windows NT 4.0 and later: Font is never antialiased, that is, font smoothing is not done
		$PROOF_QUALITY - Character quality of the font is more important than exact matching of the logical-font attributes.
		For GDI raster fonts, scaling is disabled and the font closest in size is chosen.
		Although the chosen font size may not be mapped exactly when PROOF_QUALITY is used, the quality of the font is high and there is no distortion of appearance.
		Bold, italic, underline, and strikeout fonts are synthesized, if necessary
$nPitch
	[可选参数] 指定字体斜度和家族. 使用两个低(序)位指定字体斜度,可以是下方的一个值:
		$DEFAULT_PITCH, $FIXED_PITCH, $VARIABLE_PITCH
		The four high-order bits specify the font family and can be one of the following values:
		$FF_DECORATIVE - Novelty fonts. Old English is an example
		$FF_DONTCARE - Use default font
		$FF_MODERN - Fonts with constant stroke width, with or without serifs. Pica, Elite, and Courier New are examples
		$FF_ROMAN - Fonts with variable stroke width and with serifs. MS Serif is an example
		$FF_SCRIPT - Fonts designed to look like handwriting. Script and Cursive are examples
		$FF_SWISS - Fonts with variable stroke width and without serifs. MS Sans Serif is an example
$szFace
	[可选参数] 字体名称
@@End@@

###ReturnValue###
@@ReturnTable@@
成功:	逻辑字体句柄
失败:	0
@@End@@

###Remarks###
如果你不长期使用这个字体, 请调用 _WinAPI_DeleteObject 函数删除字体
预定义常量需要包含 FontConstants.au3

###Related###

###See Also###
@@MsdnLink@@ CreateFont

###Example###
@@IncludeExample@@
